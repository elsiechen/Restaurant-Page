(self.webpackChunkrestaurant_page=self.webpackChunkrestaurant_page||[]).push([[826,102],{426:(e,t,n)=>{"use strict";n.d(t,{Z:()=>g});var r=n(537),u=n.n(r),i=n(645),a=n.n(i),s=n(667),o=n.n(s),l=new URL(n(611),n.b),p=new URL(n(488),n.b),c=new URL(n(456),n.b),d=a()(u()),D=o()(l),f=o()(p),m=o()(c);d.push([e.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n@font-face {\n    font-family: 'Sweet';\n    src: url("+D+") format('woff'),\n         url("+f+") format('woff2');\n    \n}\n.backgroundImg {\n    background-image: url("+m+");\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    z-index: -1;\n}\n\n.headContainer {\n    height: 25vh;\n    width: 100%;\n    background-color: rgba(60, 60, 60, 0.8);\n    \n}\n\n.logoContainer, .navContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.shopName {\n    color: white;\n    font-family: 'Sweet', sans-serif;\n    font-size: 5rem;\n    margin: 2rem 0 1rem 0;\n}\n\n.navContainer {\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    font-size: 1.5rem;\n    color: white;\n    flex-wrap: wrap;\n    gap: 2rem;\n}\n\n.navLink:hover {\n    border-bottom: 2px solid white;\n    cursor: pointer;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,oBAAoB;IACpB;gEAC0C;;AAE9C;AACA;IACI,yDAAmC;IACnC,YAAY;IACZ,aAAa;IACb,eAAe;IACf,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,uCAAuC;;AAE3C;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,gCAAgC;IAChC,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,sHAAsH;IACtH,iBAAiB;IACjB,YAAY;IACZ,eAAe;IACf,SAAS;AACb;;AAEA;IACI,8BAA8B;IAC9B,eAAe;AACnB",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n@font-face {\n    font-family: 'Sweet';\n    src: url('./sweets.woff') format('woff'),\n         url('./sweets.woff2') format('woff2');\n    \n}\n.backgroundImg {\n    background-image: url(\"hotpot.png\");\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    z-index: -1;\n}\n\n.headContainer {\n    height: 25vh;\n    width: 100%;\n    background-color: rgba(60, 60, 60, 0.8);\n    \n}\n\n.logoContainer, .navContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.shopName {\n    color: white;\n    font-family: 'Sweet', sans-serif;\n    font-size: 5rem;\n    margin: 2rem 0 1rem 0;\n}\n\n.navContainer {\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    font-size: 1.5rem;\n    color: white;\n    flex-wrap: wrap;\n    gap: 2rem;\n}\n\n.navLink:hover {\n    border-bottom: 2px solid white;\n    cursor: pointer;\n}"],sourceRoot:""}]);const g=d},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,u,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var o=this[s][0];null!=o&&(a[o]=!0)}for(var l=0;l<e.length;l++){var p=[].concat(e[l]);r&&a[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),u&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=u):p[4]="".concat(u)),t.push(p))}},t}},667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(u," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},945:(e,t,n)=>{var r,u,i;e.exports=function(){"use strict";var a=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),s=a(((e,t)=>{var r=function(e){return e&&e.Math==Math&&e};t.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||function(){return this}()||Function("return this")()})),o=a(((e,t)=>{t.exports=function(e){try{return!!e()}catch{return!0}}})),l=a(((e,t)=>{var n=o();t.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))})),p=a(((e,t)=>{var n=o();t.exports=!n((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))})),c=a(((e,t)=>{var n=p(),r=Function.prototype.call;t.exports=n?r.bind(r):function(){return r.apply(r,arguments)}})),d=a((e=>{var t={}.propertyIsEnumerable,n=Object.getOwnPropertyDescriptor,r=n&&!t.call({1:2},1);e.f=r?function(e){var t=n(this,e);return!!t&&t.enumerable}:t})),D=a(((e,t)=>{t.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}})),f=a(((e,t)=>{var n=p(),r=Function.prototype,u=r.call,i=n&&r.bind.bind(u,u);t.exports=n?i:function(e){return function(){return u.apply(e,arguments)}}})),m=a(((e,t)=>{var n=f(),r=n({}.toString),u=n("".slice);t.exports=function(e){return u(r(e),8,-1)}})),g=a(((e,t)=>{var n=f(),r=o(),u=m(),i=Object,a=n("".split);t.exports=r((function(){return!i("z").propertyIsEnumerable(0)}))?function(e){return"String"==u(e)?a(e,""):i(e)}:i})),y=a(((e,t)=>{t.exports=function(e){return null==e}})),h=a(((e,t)=>{var n=y(),r=TypeError;t.exports=function(e){if(n(e))throw r("Can't call method on "+e);return e}})),E=a(((e,t)=>{var n=g(),r=h();t.exports=function(e){return n(r(e))}})),C=a(((e,t)=>{var n="object"==typeof document&&document.all,r=typeof n>"u"&&void 0!==n;t.exports={all:n,IS_HTMLDDA:r}})),A=a(((e,t)=>{var n=C(),r=n.all;t.exports=n.IS_HTMLDDA?function(e){return"function"==typeof e||e===r}:function(e){return"function"==typeof e}})),F=a(((e,t)=>{var n=A(),r=C(),u=r.all;t.exports=r.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:n(e)||e===u}:function(e){return"object"==typeof e?null!==e:n(e)}})),v=a(((e,t)=>{var n=s(),r=A();t.exports=function(e,t){return arguments.length<2?function(e){return r(e)?e:void 0}(n[e]):n[e]&&n[e][t]}})),x=a(((e,t)=>{var n=f();t.exports=n({}.isPrototypeOf)})),b=a(((e,t)=>{var n=v();t.exports=n("navigator","userAgent")||""})),S=a(((e,t)=>{var n,r,u=s(),i=b(),a=u.process,o=u.Deno,l=a&&a.versions||o&&o.version,p=l&&l.v8;p&&(r=(n=p.split("."))[0]>0&&n[0]<4?1:+(n[0]+n[1])),!r&&i&&(!(n=i.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=i.match(/Chrome\/(\d+)/))&&(r=+n[1]),t.exports=r})),T=a(((e,t)=>{var n=S(),r=o();t.exports=!!Object.getOwnPropertySymbols&&!r((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&n&&n<41}))})),B=a(((e,t)=>{var n=T();t.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator})),w=a(((e,t)=>{var n=v(),r=A(),u=x(),i=B(),a=Object;t.exports=i?function(e){return"symbol"==typeof e}:function(e){var t=n("Symbol");return r(t)&&u(t.prototype,a(e))}})),N=a(((e,t)=>{var n=String;t.exports=function(e){try{return n(e)}catch{return"Object"}}})),k=a(((e,t)=>{var n=A(),r=N(),u=TypeError;t.exports=function(e){if(n(e))return e;throw u(r(e)+" is not a function")}})),j=a(((e,t)=>{var n=k(),r=y();t.exports=function(e,t){var u=e[t];return r(u)?void 0:n(u)}})),P=a(((e,t)=>{var n=c(),r=A(),u=F(),i=TypeError;t.exports=function(e,t){var a,s;if("string"===t&&r(a=e.toString)&&!u(s=n(a,e))||r(a=e.valueOf)&&!u(s=n(a,e))||"string"!==t&&r(a=e.toString)&&!u(s=n(a,e)))return s;throw i("Can't convert object to primitive value")}})),I=a(((e,t)=>{t.exports=!1})),O=a(((e,t)=>{var n=s(),r=Object.defineProperty;t.exports=function(e,t){try{r(n,e,{value:t,configurable:!0,writable:!0})}catch{n[e]=t}return t}})),L=a(((e,t)=>{var n=s(),r=O(),u="__core-js_shared__",i=n[u]||r(u,{});t.exports=i})),_=a(((e,t)=>{var n=I(),r=L();(t.exports=function(e,t){return r[e]||(r[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.26.1",mode:n?"pure":"global",copyright:"Â© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE",source:"https://github.com/zloirock/core-js"})})),M=a(((e,t)=>{var n=h(),r=Object;t.exports=function(e){return r(n(e))}})),$=a(((e,t)=>{var n=f(),r=M(),u=n({}.hasOwnProperty);t.exports=Object.hasOwn||function(e,t){return u(r(e),t)}})),R=a(((e,t)=>{var n=f(),r=0,u=Math.random(),i=n(1..toString);t.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+i(++r+u,36)}})),V=a(((e,t)=>{var n=s(),r=_(),u=$(),i=R(),a=T(),o=B(),l=r("wks"),p=n.Symbol,c=p&&p.for,d=o?p:p&&p.withoutSetter||i;t.exports=function(e){if(!u(l,e)||!a&&"string"!=typeof l[e]){var t="Symbol."+e;a&&u(p,e)?l[e]=p[e]:l[e]=o&&c?c(t):d(t)}return l[e]}})),W=a(((e,t)=>{var n=c(),r=F(),u=w(),i=j(),a=P(),s=V(),o=TypeError,l=s("toPrimitive");t.exports=function(e,t){if(!r(e)||u(e))return e;var s,p=i(e,l);if(p){if(void 0===t&&(t="default"),s=n(p,e,t),!r(s)||u(s))return s;throw o("Can't convert object to primitive value")}return void 0===t&&(t="number"),a(e,t)}})),q=a(((e,t)=>{var n=W(),r=w();t.exports=function(e){var t=n(e,"string");return r(t)?t:t+""}})),U=a(((e,t)=>{var n=s(),r=F(),u=n.document,i=r(u)&&r(u.createElement);t.exports=function(e){return i?u.createElement(e):{}}})),J=a(((e,t)=>{var n=l(),r=o(),u=U();t.exports=!n&&!r((function(){return 7!=Object.defineProperty(u("div"),"a",{get:function(){return 7}}).a}))})),H=a((e=>{var t=l(),n=c(),r=d(),u=D(),i=E(),a=q(),s=$(),o=J(),p=Object.getOwnPropertyDescriptor;e.f=t?p:function(e,t){if(e=i(e),t=a(t),o)try{return p(e,t)}catch{}if(s(e,t))return u(!n(r.f,e,t),e[t])}})),G=a(((e,t)=>{var n=l(),r=o();t.exports=n&&r((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))})),z=a(((e,t)=>{var n=F(),r=String,u=TypeError;t.exports=function(e){if(n(e))return e;throw u(r(e)+" is not an object")}})),X=a((e=>{var t=l(),n=J(),r=G(),u=z(),i=q(),a=TypeError,s=Object.defineProperty,o=Object.getOwnPropertyDescriptor,p="enumerable",c="configurable",d="writable";e.f=t?r?function(e,t,n){if(u(e),t=i(t),u(n),"function"==typeof e&&"prototype"===t&&"value"in n&&d in n&&!n[d]){var r=o(e,t);r&&r[d]&&(e[t]=n.value,n={configurable:c in n?n[c]:r[c],enumerable:p in n?n[p]:r[p],writable:!1})}return s(e,t,n)}:s:function(e,t,r){if(u(e),t=i(t),u(r),n)try{return s(e,t,r)}catch{}if("get"in r||"set"in r)throw a("Accessors not supported");return"value"in r&&(e[t]=r.value),e}})),K=a(((e,t)=>{var n=l(),r=X(),u=D();t.exports=n?function(e,t,n){return r.f(e,t,u(1,n))}:function(e,t,n){return e[t]=n,e}})),Y=a(((e,t)=>{var n=l(),r=$(),u=Function.prototype,i=n&&Object.getOwnPropertyDescriptor,a=r(u,"name"),s=a&&"something"===function(){}.name,o=a&&(!n||n&&i(u,"name").configurable);t.exports={EXISTS:a,PROPER:s,CONFIGURABLE:o}})),Q=a(((e,t)=>{var n=f(),r=A(),u=L(),i=n(Function.toString);r(u.inspectSource)||(u.inspectSource=function(e){return i(e)}),t.exports=u.inspectSource})),Z=a(((e,t)=>{var n=s(),r=A(),u=n.WeakMap;t.exports=r(u)&&/native code/.test(String(u))})),ee=a(((e,t)=>{var n=_(),r=R(),u=n("keys");t.exports=function(e){return u[e]||(u[e]=r(e))}})),te=a(((e,t)=>{t.exports={}})),ne=a(((e,t)=>{var n,r,u,i,a,o=Z(),l=s(),p=F(),c=K(),d=$(),D=L(),f=ee(),m=te(),g="Object already initialized",y=l.TypeError,h=l.WeakMap;o||D.state?((i=D.state||(D.state=new h)).get=i.get,i.has=i.has,i.set=i.set,n=function(e,t){if(i.has(e))throw y(g);return t.facade=e,i.set(e,t),t},r=function(e){return i.get(e)||{}},u=function(e){return i.has(e)}):(m[a=f("state")]=!0,n=function(e,t){if(d(e,a))throw y(g);return t.facade=e,c(e,a,t),t},r=function(e){return d(e,a)?e[a]:{}},u=function(e){return d(e,a)}),t.exports={set:n,get:r,has:u,enforce:function(e){return u(e)?r(e):n(e,{})},getterFor:function(e){return function(t){var n;if(!p(t)||(n=r(t)).type!==e)throw y("Incompatible receiver, "+e+" required");return n}}}})),re=a(((e,t)=>{var n=o(),r=A(),u=$(),i=l(),a=Y().CONFIGURABLE,s=Q(),p=ne(),c=p.enforce,d=p.get,D=Object.defineProperty,f=i&&!n((function(){return 8!==D((function(){}),"length",{value:8}).length})),m=String(String).split("String"),g=t.exports=function(e,t,n){"Symbol("===String(t).slice(0,7)&&(t="["+String(t).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!u(e,"name")||a&&e.name!==t)&&(i?D(e,"name",{value:t,configurable:!0}):e.name=t),f&&n&&u(n,"arity")&&e.length!==n.arity&&D(e,"length",{value:n.arity});try{n&&u(n,"constructor")&&n.constructor?i&&D(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch{}var r=c(e);return u(r,"source")||(r.source=m.join("string"==typeof t?t:"")),e};Function.prototype.toString=g((function(){return r(this)&&d(this).source||s(this)}),"toString")})),ue=a(((e,t)=>{var n=A(),r=X(),u=re(),i=O();t.exports=function(e,t,a,s){s||(s={});var o=s.enumerable,l=void 0!==s.name?s.name:t;if(n(a)&&u(a,l,s),s.global)o?e[t]=a:i(t,a);else{try{s.unsafe?e[t]&&(o=!0):delete e[t]}catch{}o?e[t]=a:r.f(e,t,{value:a,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return e}})),ie=a(((e,t)=>{var n=Math.ceil,r=Math.floor;t.exports=Math.trunc||function(e){var t=+e;return(t>0?r:n)(t)}})),ae=a(((e,t)=>{var n=ie();t.exports=function(e){var t=+e;return t!=t||0===t?0:n(t)}})),se=a(((e,t)=>{var n=ae(),r=Math.max,u=Math.min;t.exports=function(e,t){var i=n(e);return i<0?r(i+t,0):u(i,t)}})),oe=a(((e,t)=>{var n=ae(),r=Math.min;t.exports=function(e){return e>0?r(n(e),9007199254740991):0}})),le=a(((e,t)=>{var n=oe();t.exports=function(e){return n(e.length)}})),pe=a(((e,t)=>{var n=E(),r=se(),u=le(),i=function(e){return function(t,i,a){var s,o=n(t),l=u(o),p=r(a,l);if(e&&i!=i){for(;l>p;)if((s=o[p++])!=s)return!0}else for(;l>p;p++)if((e||p in o)&&o[p]===i)return e||p||0;return!e&&-1}};t.exports={includes:i(!0),indexOf:i(!1)}})),ce=a(((e,t)=>{var n=f(),r=$(),u=E(),i=pe().indexOf,a=te(),s=n([].push);t.exports=function(e,t){var n,o=u(e),l=0,p=[];for(n in o)!r(a,n)&&r(o,n)&&s(p,n);for(;t.length>l;)r(o,n=t[l++])&&(~i(p,n)||s(p,n));return p}})),de=a(((e,t)=>{t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]})),De=a((e=>{var t=ce(),n=de().concat("length","prototype");e.f=Object.getOwnPropertyNames||function(e){return t(e,n)}})),fe=a((e=>{e.f=Object.getOwnPropertySymbols})),me=a(((e,t)=>{var n=v(),r=f(),u=De(),i=fe(),a=z(),s=r([].concat);t.exports=n("Reflect","ownKeys")||function(e){var t=u.f(a(e)),n=i.f;return n?s(t,n(e)):t}})),ge=a(((e,t)=>{var n=$(),r=me(),u=H(),i=X();t.exports=function(e,t,a){for(var s=r(t),o=i.f,l=u.f,p=0;p<s.length;p++){var c=s[p];!n(e,c)&&(!a||!n(a,c))&&o(e,c,l(t,c))}}})),ye=a(((e,t)=>{var n=o(),r=A(),u=/#|\.prototype\./,i=function(e,t){var u=s[a(e)];return u==p||u!=l&&(r(t)?n(t):!!t)},a=i.normalize=function(e){return String(e).replace(u,".").toLowerCase()},s=i.data={},l=i.NATIVE="N",p=i.POLYFILL="P";t.exports=i})),he=a(((e,t)=>{var n=s(),r=H().f,u=K(),i=ue(),a=O(),o=ge(),l=ye();t.exports=function(e,t){var s,p,c,d,D,f=e.target,m=e.global,g=e.stat;if(s=m?n:g?n[f]||a(f,{}):(n[f]||{}).prototype)for(p in t){if(d=t[p],c=e.dontCallGetSet?(D=r(s,p))&&D.value:s[p],!l(m?p:f+(g?".":"#")+p,e.forced)&&void 0!==c){if(typeof d==typeof c)continue;o(d,c)}(e.sham||c&&c.sham)&&u(d,"sham",!0),i(s,p,d,e)}}})),Ee=a(((e,t)=>{var n=m();t.exports=Array.isArray||function(e){return"Array"==n(e)}})),Ce=a(((e,t)=>{var n=TypeError;t.exports=function(e){if(e>9007199254740991)throw n("Maximum allowed index exceeded");return e}})),Ae=a(((e,t)=>{var n=m(),r=f();t.exports=function(e){if("Function"===n(e))return r(e)}})),Fe=a(((e,t)=>{var n=Ae(),r=k(),u=p(),i=n(n.bind);t.exports=function(e,t){return r(e),void 0===t?e:u?i(e,t):function(){return e.apply(t,arguments)}}})),ve=a(((e,t)=>{var n=Ee(),r=le(),u=Ce(),i=Fe(),a=function(e,t,s,o,l,p,c,d){for(var D,f,m=l,g=0,y=!!c&&i(c,d);g<o;)g in s&&(D=y?y(s[g],g,t):s[g],p>0&&n(D)?(f=r(D),m=a(e,t,D,f,m,p-1)-1):(u(m+1),e[m]=D),m++),g++;return m};t.exports=a})),xe=a(((e,t)=>{var n={};n[V()("toStringTag")]="z",t.exports="[object z]"===String(n)})),be=a(((e,t)=>{var n=xe(),r=A(),u=m(),i=V()("toStringTag"),a=Object,s="Arguments"==u(function(){return arguments}());t.exports=n?u:function(e){var t,n,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch{}}(t=a(e),i))?n:s?u(t):"Object"==(o=u(t))&&r(t.callee)?"Arguments":o}})),Se=a(((e,t)=>{var n=f(),r=o(),u=A(),i=be(),a=v(),s=Q(),l=function(){},p=[],c=a("Reflect","construct"),d=/^\s*(?:class|function)\b/,D=n(d.exec),m=!d.exec(l),g=function(e){if(!u(e))return!1;try{return c(l,p,e),!0}catch{return!1}},y=function(e){if(!u(e))return!1;switch(i(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return m||!!D(d,s(e))}catch{return!0}};y.sham=!0,t.exports=!c||r((function(){var e;return g(g.call)||!g(Object)||!g((function(){e=!0}))||e}))?y:g})),Te=a(((e,t)=>{var n=Ee(),r=Se(),u=F(),i=V()("species"),a=Array;t.exports=function(e){var t;return n(e)&&(t=e.constructor,(r(t)&&(t===a||n(t.prototype))||u(t)&&null===(t=t[i]))&&(t=void 0)),void 0===t?a:t}})),Be=a(((e,t)=>{var n=Te();t.exports=function(e,t){return new(n(e))(0===t?0:t)}})),we=a((()=>{var e=he(),t=ve(),n=k(),r=M(),u=le(),i=Be();e({target:"Array",proto:!0},{flatMap:function(e){var a,s=r(this),o=u(s);return n(e),(a=i(s,0)).length=t(a,s,s,o,0,1,e,arguments.length>1?arguments[1]:void 0),a}})})),Ne=a(((e,t)=>{t.exports={}})),ke=a(((e,t)=>{var n=V(),r=Ne(),u=n("iterator"),i=Array.prototype;t.exports=function(e){return void 0!==e&&(r.Array===e||i[u]===e)}})),je=a(((e,t)=>{var n=be(),r=j(),u=y(),i=Ne(),a=V()("iterator");t.exports=function(e){if(!u(e))return r(e,a)||r(e,"@@iterator")||i[n(e)]}})),Pe=a(((e,t)=>{var n=c(),r=k(),u=z(),i=N(),a=je(),s=TypeError;t.exports=function(e,t){var o=arguments.length<2?a(e):t;if(r(o))return u(n(o,e));throw s(i(e)+" is not iterable")}})),Ie=a(((e,t)=>{var n=c(),r=z(),u=j();t.exports=function(e,t,i){var a,s;r(e);try{if(!(a=u(e,"return"))){if("throw"===t)throw i;return i}a=n(a,e)}catch(e){s=!0,a=e}if("throw"===t)throw i;if(s)throw a;return r(a),i}})),Oe=a(((e,t)=>{var n=Fe(),r=c(),u=z(),i=N(),a=ke(),s=le(),o=x(),l=Pe(),p=je(),d=Ie(),D=TypeError,f=function(e,t){this.stopped=e,this.result=t},m=f.prototype;t.exports=function(e,t,c){var g,y,h,E,C,A,F,v=c&&c.that,x=!(!c||!c.AS_ENTRIES),b=!(!c||!c.IS_RECORD),S=!(!c||!c.IS_ITERATOR),T=!(!c||!c.INTERRUPTED),B=n(t,v),w=function(e){return g&&d(g,"normal",e),new f(!0,e)},N=function(e){return x?(u(e),T?B(e[0],e[1],w):B(e[0],e[1])):T?B(e,w):B(e)};if(b)g=e.iterator;else if(S)g=e;else{if(!(y=p(e)))throw D(i(e)+" is not iterable");if(a(y)){for(h=0,E=s(e);E>h;h++)if((C=N(e[h]))&&o(m,C))return C;return new f(!1)}g=l(e,y)}for(A=b?e.next:g.next;!(F=r(A,g)).done;){try{C=N(F.value)}catch(e){d(g,"throw",e)}if("object"==typeof C&&C&&o(m,C))return C}return new f(!1)}})),Le=a(((e,t)=>{var n=q(),r=X(),u=D();t.exports=function(e,t,i){var a=n(t);a in e?r.f(e,a,u(0,i)):e[a]=i}})),_e=a((()=>{var e=he(),t=Oe(),n=Le();e({target:"Object",stat:!0},{fromEntries:function(e){var r={};return t(e,(function(e,t){n(r,e,t)}),{AS_ENTRIES:!0}),r}})})),Me=a(((e,t)=>{var n=re(),r=X();t.exports=function(e,t,u){return u.get&&n(u.get,t,{getter:!0}),u.set&&n(u.set,t,{setter:!0}),r.f(e,t,u)}})),$e=a(((e,t)=>{var n=z();t.exports=function(){var e=n(this),t="";return e.hasIndices&&(t+="d"),e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.unicodeSets&&(t+="v"),e.sticky&&(t+="y"),t}})),Re=a((()=>{var e=s(),t=l(),n=Me(),r=$e(),u=o(),i=e.RegExp,a=i.prototype;t&&u((function(){var e=!0;try{i(".","d")}catch{e=!1}var t={},n="",r=e?"dgimsy":"gimsy",u=function(e,r){Object.defineProperty(t,e,{get:function(){return n+=r,!0}})},s={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};for(var o in e&&(s.hasIndices="d"),s)u(o,s[o]);return Object.getOwnPropertyDescriptor(a,"flags").get.call(t)!==r||n!==r}))&&n(a,"flags",{configurable:!0,get:r})})),Ve=a((()=>{var e=he(),t=s();e({global:!0,forced:t.globalThis!==t},{globalThis:t})})),We=a((()=>{Ve()})),qe=a((()=>{var e=he(),t=ve(),n=M(),r=le(),u=ae(),i=Be();e({target:"Array",proto:!0},{flat:function(){var e=arguments.length?arguments[0]:void 0,a=n(this),s=r(a),o=i(a,0);return o.length=t(o,a,a,s,0,void 0===e?1:u(e)),o}})})),Ue=a(((n,a)=>{var s=["cliName","cliCategory","cliDescription"],o=["_"],l=["languageId"];function p(e,t){if(null==e)return{};var n,r,u=function(e,t){if(null==e)return{};var n,r,u={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],!(t.indexOf(n)>=0)&&(u[n]=e[n]);return u}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(u[n]=e[n])}return u}we(),_e(),Re(),We(),qe();var c,d=Object.create,D=Object.defineProperty,f=Object.getOwnPropertyDescriptor,m=Object.getOwnPropertyNames,g=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty,h=(e,t)=>function(){return e&&(t=(0,e[m(e)[0]])(e=0)),t},E=(e,t)=>function(){return t||(0,e[m(e)[0]])((t={exports:{}}).exports,t),t.exports},C=(e,t)=>{for(var n in t)D(e,n,{get:t[n],enumerable:!0})},A=(e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let u of m(t))!y.call(e,u)&&u!==n&&D(e,u,{get:()=>t[u],enumerable:!(r=f(t,u))||r.enumerable});return e},F=e=>A(D({},"__esModule",{value:!0}),e),v=h({"<define:process>"(){c={env:{},argv:[]}}}),x=E({"package.json"(e,t){t.exports={version:"2.8.8"}}}),b=E({"node_modules/diff/lib/diff/base.js"(e){function t(){}function n(e,t,n,r,u){for(var i=0,a=t.length,s=0,o=0;i<a;i++){var l=t[i];if(l.removed){if(l.value=e.join(r.slice(o,o+l.count)),o+=l.count,i&&t[i-1].added){var p=t[i-1];t[i-1]=t[i],t[i]=p}}else{if(!l.added&&u){var c=n.slice(s,s+l.count);c=c.map((function(e,t){var n=r[o+t];return n.length>e.length?n:e})),l.value=e.join(c)}else l.value=e.join(n.slice(s,s+l.count));s+=l.count,l.added||(o+=l.count)}}var d=t[a-1];return a>1&&"string"==typeof d.value&&(d.added||d.removed)&&e.equals("",d.value)&&(t[a-2].value+=d.value,t.pop()),t}v(),Object.defineProperty(e,"__esModule",{value:!0}),e.default=t,t.prototype={diff:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},u=r.callback;"function"==typeof r&&(u=r,r={}),this.options=r;var i=this;function a(e){return u?(setTimeout((function(){u(void 0,e)}),0),!0):e}e=this.castInput(e),t=this.castInput(t),e=this.removeEmpty(this.tokenize(e));var s=(t=this.removeEmpty(this.tokenize(t))).length,o=e.length,l=1,p=s+o,c=[{newPos:-1,components:[]}],d=this.extractCommon(c[0],t,e,0);if(c[0].newPos+1>=s&&d+1>=o)return a([{value:this.join(t),count:t.length}]);function D(){for(var r=-1*l;r<=l;r+=2){var u=void 0,p=c[r-1],d=c[r+1],D=(d?d.newPos:0)-r;p&&(c[r-1]=void 0);var f=p&&p.newPos+1<s,m=d&&0<=D&&D<o;if(f||m){if(!f||m&&p.newPos<d.newPos?(u={newPos:(g=d).newPos,components:g.components.slice(0)},i.pushComponent(u.components,void 0,!0)):((u=p).newPos++,i.pushComponent(u.components,!0,void 0)),D=i.extractCommon(u,t,e,r),u.newPos+1>=s&&D+1>=o)return a(n(i,u.components,t,e,i.useLongestToken));c[r]=u}else c[r]=void 0}var g;l++}if(u)!function e(){setTimeout((function(){if(l>p)return u();D()||e()}),0)}();else for(;l<=p;){var f=D();if(f)return f}},pushComponent:function(e,t,n){var r=e[e.length-1];r&&r.added===t&&r.removed===n?e[e.length-1]={count:r.count+1,added:t,removed:n}:e.push({count:1,added:t,removed:n})},extractCommon:function(e,t,n,r){for(var u=t.length,i=n.length,a=e.newPos,s=a-r,o=0;a+1<u&&s+1<i&&this.equals(t[a+1],n[s+1]);)a++,s++,o++;return o&&e.components.push({count:o}),e.newPos=a,s},equals:function(e,t){return this.options.comparator?this.options.comparator(e,t):e===t||this.options.ignoreCase&&e.toLowerCase()===t.toLowerCase()},removeEmpty:function(e){for(var t=[],n=0;n<e.length;n++)e[n]&&t.push(e[n]);return t},castInput:function(e){return e},tokenize:function(e){return e.split("")},join:function(e){return e.join("")}}}}),S=E({"node_modules/diff/lib/diff/array.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0}),e.diffArrays=function(e,t,r){return n.diff(e,t,r)},e.arrayDiff=void 0;var t,n=new((t=b(),t&&t.__esModule?t:{default:t}).default);e.arrayDiff=n,n.tokenize=function(e){return e.slice()},n.join=n.removeEmpty=function(e){return e}}}),T=E({"src/document/doc-builders.js"(e,t){function n(e){return{type:"concat",parts:e}}function r(e){return{type:"indent",contents:e}}function u(e,t){return{type:"align",contents:t,n:e}}function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{type:"group",id:t.id,contents:e,break:Boolean(t.shouldBreak),expandedStates:t.expandedStates}}v();var a={type:"break-parent"},s={type:"line",hard:!0},o={type:"line",hard:!0,literal:!0},l=n([s,a]),p=n([o,a]),c={type:"cursor",placeholder:Symbol("cursor")};t.exports={concat:n,join:function(e,t){let r=[];for(let n=0;n<t.length;n++)0!==n&&r.push(e),r.push(t[n]);return n(r)},line:{type:"line"},softline:{type:"line",soft:!0},hardline:l,literalline:p,group:i,conditionalGroup:function(e,t){return i(e[0],Object.assign(Object.assign({},t),{},{expandedStates:e}))},fill:function(e){return{type:"fill",parts:e}},lineSuffix:function(e){return{type:"line-suffix",contents:e}},lineSuffixBoundary:{type:"line-suffix-boundary"},cursor:c,breakParent:a,ifBreak:function(e,t){return{type:"if-break",breakContents:e,flatContents:t,groupId:(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).groupId}},trim:{type:"trim"},indent:r,indentIfBreak:function(e,t){return{type:"indent-if-break",contents:e,groupId:t.groupId,negate:t.negate}},align:u,addAlignmentToDoc:function(e,t,n){let i=e;if(t>0){for(let e=0;e<Math.floor(t/n);++e)i=r(i);i=u(t%n,i),i=u(Number.NEGATIVE_INFINITY,i)}return i},markAsRoot:function(e){return u({type:"root"},e)},dedentToRoot:function(e){return u(Number.NEGATIVE_INFINITY,e)},dedent:function(e){return u(-1,e)},hardlineWithoutBreakParent:s,literallineWithoutBreakParent:o,label:function(e,t){return{type:"label",label:e,contents:t}}}}}),B=E({"src/common/end-of-line.js"(e,t){v(),t.exports={guessEndOfLine:function(e){let t=e.indexOf("\r");return t>=0?"\n"===e.charAt(t+1)?"crlf":"cr":"lf"},convertEndOfLineToChars:function(e){switch(e){case"cr":return"\r";case"crlf":return"\r\n";default:return"\n"}},countEndOfLineChars:function(e,t){let n;switch(t){case"\n":n=/\n/g;break;case"\r":n=/\r/g;break;case"\r\n":n=/\r\n/g;break;default:throw new Error(`Unexpected "eol" ${JSON.stringify(t)}.`)}let r=e.match(n);return r?r.length:0},normalizeEndOfLine:function(e){return e.replace(/\r\n?/g,"\n")}}}}),w=E({"src/utils/get-last.js"(e,t){v();t.exports=e=>e[e.length-1]}});var N=h({"node_modules/strip-ansi/node_modules/ansi-regex/index.js"(){v()}});function k(e){if("string"!=typeof e)throw new TypeError(`Expected a \`string\`, got \`${typeof e}\``);return e.replace(function(){let{onlyFirst:e=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,e?void 0:"g")}(),"")}var j=h({"node_modules/strip-ansi/index.js"(){v(),N()}});function P(e){return!!Number.isInteger(e)&&e>=4352&&(e<=4447||9001===e||9002===e||11904<=e&&e<=12871&&12351!==e||12880<=e&&e<=19903||19968<=e&&e<=42182||43360<=e&&e<=43388||44032<=e&&e<=55203||63744<=e&&e<=64255||65040<=e&&e<=65049||65072<=e&&e<=65131||65281<=e&&e<=65376||65504<=e&&e<=65510||110592<=e&&e<=110593||127488<=e&&e<=127569||131072<=e&&e<=262141)}var I=h({"node_modules/is-fullwidth-code-point/index.js"(){v()}}),O=E({"node_modules/emoji-regex/index.js"(e,t){v(),t.exports=function(){return/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g}}}),L={};function _(e){if("string"!=typeof e||0===e.length||0===(e=k(e)).length)return 0;e=e.replace((0,M.default)(),"  ");let t=0;for(let n=0;n<e.length;n++){let r=e.codePointAt(n);r<=31||r>=127&&r<=159||r>=768&&r<=879||(r>65535&&n++,t+=P(r)?2:1)}return t}C(L,{default:()=>_});var M,$=h({"node_modules/string-width/index.js"(){var e,t,n;v(),j(),I(),e=O(),n=null!=e?d(g(e)):{},M=A(!t&&e&&e.__esModule?n:D(n,"default",{value:e,enumerable:!0}),e)}}),R=E({"src/utils/get-string-width.js"(e,t){v();var n=($(),F(L)).default,r=/[^\x20-\x7F]/;t.exports=function(e){return e?r.test(e)?n(e):e.length:0}}}),V=E({"src/document/doc-utils.js"(e,t){v();var n=w(),{literalline:r,join:u}=T(),i=e=>Array.isArray(e)||e&&"concat"===e.type,a=e=>{if(Array.isArray(e))return e;if("concat"!==e.type&&"fill"!==e.type)throw new Error("Expect doc type to be `concat` or `fill`.");return e.parts},s={};function o(e,t,n,r){let u=[e];for(;u.length>0;){let e=u.pop();if(e!==s){if(n&&u.push(e,s),!t||!1!==t(e))if(i(e)||"fill"===e.type){let t=a(e);for(let e=t.length-1;e>=0;--e)u.push(t[e])}else if("if-break"===e.type)e.flatContents&&u.push(e.flatContents),e.breakContents&&u.push(e.breakContents);else if("group"===e.type&&e.expandedStates)if(r)for(let t=e.expandedStates.length-1;t>=0;--t)u.push(e.expandedStates[t]);else u.push(e.contents);else e.contents&&u.push(e.contents)}else n(u.pop())}}function l(e,t){let n=new Map;return r(e);function r(e){if(n.has(e))return n.get(e);let u=function(e){if(Array.isArray(e))return t(e.map(r));if("concat"===e.type||"fill"===e.type){let n=e.parts.map(r);return t(Object.assign(Object.assign({},e),{},{parts:n}))}if("if-break"===e.type){let n=e.breakContents&&r(e.breakContents),u=e.flatContents&&r(e.flatContents);return t(Object.assign(Object.assign({},e),{},{breakContents:n,flatContents:u}))}if("group"===e.type&&e.expandedStates){let n=e.expandedStates.map(r),u=n[0];return t(Object.assign(Object.assign({},e),{},{contents:u,expandedStates:n}))}if(e.contents){let n=r(e.contents);return t(Object.assign(Object.assign({},e),{},{contents:n}))}return t(e)}(e);return n.set(e,u),u}}function p(e,t,n){let r=n,u=!1;return o(e,(function(e){let n=t(e);if(void 0!==n&&(u=!0,r=n),u)return!1})),r}function c(e){if("group"===e.type&&e.break||"line"===e.type&&e.hard||"break-parent"===e.type)return!0}function d(e){if(e.length>0){let t=n(e);!t.expandedStates&&!t.break&&(t.break="propagated")}return null}function D(e){return"line"!==e.type||e.hard?"if-break"===e.type?e.flatContents||"":e:e.soft?"":" "}var f=(e,t)=>e&&"line"===e.type&&e.hard&&t&&"break-parent"===t.type;function m(e){if(!e)return e;if(i(e)||"fill"===e.type){let t=a(e);for(;t.length>1&&f(...t.slice(-2));)t.length-=2;if(t.length>0){let e=m(n(t));t[t.length-1]=e}return Array.isArray(e)?t:Object.assign(Object.assign({},e),{},{parts:t})}switch(e.type){case"align":case"indent":case"indent-if-break":case"group":case"line-suffix":case"label":{let t=m(e.contents);return Object.assign(Object.assign({},e),{},{contents:t})}case"if-break":{let t=m(e.breakContents),n=m(e.flatContents);return Object.assign(Object.assign({},e),{},{breakContents:t,flatContents:n})}}return e}function g(e){return l(e,(e=>function(e){switch(e.type){case"fill":if(e.parts.every((e=>""===e)))return"";break;case"group":if(!(e.contents||e.id||e.break||e.expandedStates))return"";if("group"===e.contents.type&&e.contents.id===e.id&&e.contents.break===e.break&&e.contents.expandedStates===e.expandedStates)return e.contents;break;case"align":case"indent":case"indent-if-break":case"line-suffix":if(!e.contents)return"";break;case"if-break":if(!e.flatContents&&!e.breakContents)return""}if(!i(e))return e;let t=[];for(let r of a(e)){if(!r)continue;let[e,...u]=i(r)?a(r):[r];"string"==typeof e&&"string"==typeof n(t)?t[t.length-1]+=e:t.push(e),t.push(...u)}return 0===t.length?"":1===t.length?t[0]:Array.isArray(e)?t:Object.assign(Object.assign({},e),{},{parts:t})}(e)))}function y(e){let t=[],r=e.filter(Boolean);for(;r.length>0;){let e=r.shift();if(e){if(i(e)){r.unshift(...a(e));continue}if(t.length>0&&"string"==typeof n(t)&&"string"==typeof e){t[t.length-1]+=e;continue}t.push(e)}}return t}function h(e){return u(arguments.length>1&&void 0!==arguments[1]?arguments[1]:r,e.split("\n")).parts}function E(e){if("line"===e.type)return!0}t.exports={isConcat:i,getDocParts:a,willBreak:function(e){return p(e,c,!1)},traverseDoc:o,findInDoc:p,mapDoc:l,propagateBreaks:function(e){let t=new Set,n=[];o(e,(function(e){if("break-parent"===e.type&&d(n),"group"===e.type){if(n.push(e),t.has(e))return!1;t.add(e)}}),(function(e){"group"===e.type&&n.pop().break&&d(n)}),!0)},removeLines:function(e){return l(e,D)},stripTrailingHardline:function(e){return m(g(e))},normalizeParts:y,normalizeDoc:function(e){return l(e,(e=>Array.isArray(e)?y(e):e.parts?Object.assign(Object.assign({},e),{},{parts:y(e.parts)}):e))},cleanDoc:g,replaceTextEndOfLine:h,replaceEndOfLine:function(e){return l(e,(e=>"string"==typeof e&&e.includes("\n")?h(e):e))},canBreak:function(e){return p(e,E,!1)}}}}),W=E({"src/document/doc-printer.js"(e,t){v();var n,{convertEndOfLineToChars:r}=B(),u=w(),i=R(),{fill:a,cursor:s,indent:o}=T(),{isConcat:l,getDocParts:p}=V();function c(e,t){return D(e,{type:"indent"},t)}function d(e,t,n){return t===Number.NEGATIVE_INFINITY?e.root||{value:"",length:0,queue:[]}:t<0?D(e,{type:"dedent"},n):t?"root"===t.type?Object.assign(Object.assign({},e),{},{root:e}):D(e,{type:"string"==typeof t?"stringAlign":"numberAlign",n:t},n):e}function D(e,t,n){let r="dedent"===t.type?e.queue.slice(0,-1):[...e.queue,t],u="",i=0,a=0,s=0;for(let e of r)switch(e.type){case"indent":p(),n.useTabs?o(1):l(n.tabWidth);break;case"stringAlign":p(),u+=e.n,i+=e.n.length;break;case"numberAlign":a+=1,s+=e.n;break;default:throw new Error(`Unexpected type '${e.type}'`)}return c(),Object.assign(Object.assign({},e),{},{value:u,length:i,queue:r});function o(e){u+="\t".repeat(e),i+=n.tabWidth*e}function l(e){u+=" ".repeat(e),i+=e}function p(){n.useTabs?(a>0&&o(a),d()):c()}function c(){s>0&&l(s),d()}function d(){a=0,s=0}}function f(e){if(0===e.length)return 0;let t=0;for(;e.length>0&&"string"==typeof u(e)&&/^[\t ]*$/.test(u(e));)t+=e.pop().length;if(e.length>0&&"string"==typeof u(e)){let n=u(e).replace(/[\t ]*$/,"");t+=u(e).length-n.length,e[e.length-1]=n}return t}function m(e,t,r,a,s){let o=t.length,c=[e],d=[];for(;r>=0;){if(0===c.length){if(0===o)return!0;c.push(t[--o]);continue}let{mode:e,doc:D}=c.pop();if("string"==typeof D)d.push(D),r-=i(D);else if(l(D)||"fill"===D.type){let t=p(D);for(let n=t.length-1;n>=0;n--)c.push({mode:e,doc:t[n]})}else switch(D.type){case"indent":case"align":case"indent-if-break":case"label":c.push({mode:e,doc:D.contents});break;case"trim":r+=f(d);break;case"group":{if(s&&D.break)return!1;let t=D.break?1:e,n=D.expandedStates&&1===t?u(D.expandedStates):D.contents;c.push({mode:t,doc:n});break}case"if-break":{let t=1===(D.groupId?n[D.groupId]||2:e)?D.breakContents:D.flatContents;t&&c.push({mode:e,doc:t});break}case"line":if(1===e||D.hard)return!0;D.soft||(d.push(" "),r--);break;case"line-suffix":a=!0;break;case"line-suffix-boundary":if(a)return!1}}return!1}t.exports={printDocToString:function(e,t){n={};let D=t.printWidth,g=r(t.endOfLine),y=0,h=[{ind:{value:"",length:0,queue:[]},mode:1,doc:e}],E=[],C=!1,A=[];for(;h.length>0;){let{ind:e,mode:r,doc:F}=h.pop();if("string"==typeof F){let e="\n"!==g?F.replace(/\n/g,g):F;E.push(e),y+=i(e)}else if(l(F)){let t=p(F);for(let n=t.length-1;n>=0;n--)h.push({ind:e,mode:r,doc:t[n]})}else switch(F.type){case"cursor":E.push(s.placeholder);break;case"indent":h.push({ind:c(e,t),mode:r,doc:F.contents});break;case"align":h.push({ind:d(e,F.n,t),mode:r,doc:F.contents});break;case"trim":y-=f(E);break;case"group":switch(r){case 2:if(!C){h.push({ind:e,mode:F.break?1:2,doc:F.contents});break}case 1:{C=!1;let t={ind:e,mode:2,doc:F.contents},n=D-y,r=A.length>0;if(!F.break&&m(t,h,n,r))h.push(t);else if(F.expandedStates){let t=u(F.expandedStates);if(F.break){h.push({ind:e,mode:1,doc:t});break}for(let u=1;u<F.expandedStates.length+1;u++){if(u>=F.expandedStates.length){h.push({ind:e,mode:1,doc:t});break}{let t={ind:e,mode:2,doc:F.expandedStates[u]};if(m(t,h,n,r)){h.push(t);break}}}}else h.push({ind:e,mode:1,doc:F.contents});break}}F.id&&(n[F.id]=u(h).mode);break;case"fill":{let t=D-y,{parts:n}=F;if(0===n.length)break;let[u,i]=n,s={ind:e,mode:2,doc:u},o={ind:e,mode:1,doc:u},l=m(s,[],t,A.length>0,!0);if(1===n.length){l?h.push(s):h.push(o);break}let p={ind:e,mode:2,doc:i},c={ind:e,mode:1,doc:i};if(2===n.length){l?h.push(p,s):h.push(c,o);break}n.splice(0,2);let d={ind:e,mode:r,doc:a(n)};m({ind:e,mode:2,doc:[u,i,n[0]]},[],t,A.length>0,!0)?h.push(d,p,s):l?h.push(d,c,s):h.push(d,c,o);break}case"if-break":case"indent-if-break":{let t=F.groupId?n[F.groupId]:r;if(1===t){let t="if-break"===F.type?F.breakContents:F.negate?F.contents:o(F.contents);t&&h.push({ind:e,mode:r,doc:t})}if(2===t){let t="if-break"===F.type?F.flatContents:F.negate?o(F.contents):F.contents;t&&h.push({ind:e,mode:r,doc:t})}break}case"line-suffix":A.push({ind:e,mode:r,doc:F.contents});break;case"line-suffix-boundary":A.length>0&&h.push({ind:e,mode:r,doc:{type:"line",hard:!0}});break;case"line":switch(r){case 2:if(!F.hard){F.soft||(E.push(" "),y+=1);break}C=!0;case 1:if(A.length>0){h.push({ind:e,mode:r,doc:F},...A.reverse()),A.length=0;break}F.literal?e.root?(E.push(g,e.root.value),y=e.root.length):(E.push(g),y=0):(y-=f(E),E.push(g+e.value),y=e.length)}break;case"label":h.push({ind:e,mode:r,doc:F.contents})}0===h.length&&A.length>0&&(h.push(...A.reverse()),A.length=0)}let F=E.indexOf(s.placeholder);if(-1!==F){let e=E.indexOf(s.placeholder,F+1),t=E.slice(0,F).join(""),n=E.slice(F+1,e).join("");return{formatted:t+n+E.slice(e+1).join(""),cursorNodeStart:t.length,cursorNodeText:n}}return{formatted:E.join("")}}}}}),q=E({"src/document/doc-debug.js"(e,t){v();var{isConcat:n,getDocParts:r}=V();function u(e){if(!e)return"";if(n(e)){let t=[];for(let i of r(e))if(n(i))t.push(...u(i).parts);else{let e=u(i);""!==e&&t.push(e)}return{type:"concat",parts:t}}return"if-break"===e.type?Object.assign(Object.assign({},e),{},{breakContents:u(e.breakContents),flatContents:u(e.flatContents)}):"group"===e.type?Object.assign(Object.assign({},e),{},{contents:u(e.contents),expandedStates:e.expandedStates&&e.expandedStates.map(u)}):"fill"===e.type?{type:"fill",parts:e.parts.map(u)}:e.contents?Object.assign(Object.assign({},e),{},{contents:u(e.contents)}):e}t.exports={printDocToDebug:function(e){let t=Object.create(null),i=new Set;return function e(t,u,i){if("string"==typeof t)return JSON.stringify(t);if(n(t)){let n=r(t).map(e).filter(Boolean);return 1===n.length?n[0]:`[${n.join(", ")}]`}if("line"===t.type){let e=Array.isArray(i)&&i[u+1]&&"break-parent"===i[u+1].type;return t.literal?e?"literalline":"literallineWithoutBreakParent":t.hard?e?"hardline":"hardlineWithoutBreakParent":t.soft?"softline":"line"}if("break-parent"===t.type)return Array.isArray(i)&&i[u-1]&&"line"===i[u-1].type&&i[u-1].hard?void 0:"breakParent";if("trim"===t.type)return"trim";if("indent"===t.type)return"indent("+e(t.contents)+")";if("align"===t.type)return t.n===Number.NEGATIVE_INFINITY?"dedentToRoot("+e(t.contents)+")":t.n<0?"dedent("+e(t.contents)+")":"root"===t.n.type?"markAsRoot("+e(t.contents)+")":"align("+JSON.stringify(t.n)+", "+e(t.contents)+")";if("if-break"===t.type)return"ifBreak("+e(t.breakContents)+(t.flatContents?", "+e(t.flatContents):"")+(t.groupId?(t.flatContents?"":', ""')+`, { groupId: ${a(t.groupId)} }`:"")+")";if("indent-if-break"===t.type){let n=[];t.negate&&n.push("negate: true"),t.groupId&&n.push(`groupId: ${a(t.groupId)}`);let r=n.length>0?`, { ${n.join(", ")} }`:"";return`indentIfBreak(${e(t.contents)}${r})`}if("group"===t.type){let n=[];t.break&&"propagated"!==t.break&&n.push("shouldBreak: true"),t.id&&n.push(`id: ${a(t.id)}`);let r=n.length>0?`, { ${n.join(", ")} }`:"";return t.expandedStates?`conditionalGroup([${t.expandedStates.map((t=>e(t))).join(",")}]${r})`:`group(${e(t.contents)}${r})`}if("fill"===t.type)return`fill([${t.parts.map((t=>e(t))).join(", ")}])`;if("line-suffix"===t.type)return"lineSuffix("+e(t.contents)+")";if("line-suffix-boundary"===t.type)return"lineSuffixBoundary";if("label"===t.type)return`label(${JSON.stringify(t.label)}, ${e(t.contents)})`;throw new Error("Unknown doc type "+t.type)}(u(e));function a(e){if("symbol"!=typeof e)return JSON.stringify(String(e));if(e in t)return t[e];let n=String(e).slice(7,-1)||"symbol";for(let r=0;;r++){let u=n+(r>0?` #${r}`:"");if(!i.has(u))return i.add(u),t[e]=`Symbol.for(${JSON.stringify(u)})`}}}}}}),U=E({"src/document/index.js"(e,t){v(),t.exports={builders:T(),printer:W(),utils:V(),debug:q()}}}),J={};function H(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}C(J,{default:()=>H});var G=h({"node_modules/escape-string-regexp/index.js"(){v()}}),z=E({"node_modules/semver/internal/debug.js"(e,t){v();var n="object"==typeof c&&c.env&&c.env.NODE_DEBUG&&/\bsemver\b/i.test(c.env.NODE_DEBUG)?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return console.error("SEMVER",...t)}:()=>{};t.exports=n}}),X=E({"node_modules/semver/internal/constants.js"(e,t){v();var n=Number.MAX_SAFE_INTEGER||9007199254740991;t.exports={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:n,MAX_SAFE_COMPONENT_LENGTH:16}}}),K=E({"node_modules/semver/internal/re.js"(e,t){v();var{MAX_SAFE_COMPONENT_LENGTH:n}=X(),r=z(),u=(e=t.exports={}).re=[],i=e.src=[],a=e.t={},s=0,o=(e,t,n)=>{let o=s++;r(e,o,t),a[e]=o,i[o]=t,u[o]=new RegExp(t,n?"g":void 0)};o("NUMERICIDENTIFIER","0|[1-9]\\d*"),o("NUMERICIDENTIFIERLOOSE","[0-9]+"),o("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),o("MAINVERSION",`(${i[a.NUMERICIDENTIFIER]})\\.(${i[a.NUMERICIDENTIFIER]})\\.(${i[a.NUMERICIDENTIFIER]})`),o("MAINVERSIONLOOSE",`(${i[a.NUMERICIDENTIFIERLOOSE]})\\.(${i[a.NUMERICIDENTIFIERLOOSE]})\\.(${i[a.NUMERICIDENTIFIERLOOSE]})`),o("PRERELEASEIDENTIFIER",`(?:${i[a.NUMERICIDENTIFIER]}|${i[a.NONNUMERICIDENTIFIER]})`),o("PRERELEASEIDENTIFIERLOOSE",`(?:${i[a.NUMERICIDENTIFIERLOOSE]}|${i[a.NONNUMERICIDENTIFIER]})`),o("PRERELEASE",`(?:-(${i[a.PRERELEASEIDENTIFIER]}(?:\\.${i[a.PRERELEASEIDENTIFIER]})*))`),o("PRERELEASELOOSE",`(?:-?(${i[a.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${i[a.PRERELEASEIDENTIFIERLOOSE]})*))`),o("BUILDIDENTIFIER","[0-9A-Za-z-]+"),o("BUILD",`(?:\\+(${i[a.BUILDIDENTIFIER]}(?:\\.${i[a.BUILDIDENTIFIER]})*))`),o("FULLPLAIN",`v?${i[a.MAINVERSION]}${i[a.PRERELEASE]}?${i[a.BUILD]}?`),o("FULL",`^${i[a.FULLPLAIN]}$`),o("LOOSEPLAIN",`[v=\\s]*${i[a.MAINVERSIONLOOSE]}${i[a.PRERELEASELOOSE]}?${i[a.BUILD]}?`),o("LOOSE",`^${i[a.LOOSEPLAIN]}$`),o("GTLT","((?:<|>)?=?)"),o("XRANGEIDENTIFIERLOOSE",`${i[a.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),o("XRANGEIDENTIFIER",`${i[a.NUMERICIDENTIFIER]}|x|X|\\*`),o("XRANGEPLAIN",`[v=\\s]*(${i[a.XRANGEIDENTIFIER]})(?:\\.(${i[a.XRANGEIDENTIFIER]})(?:\\.(${i[a.XRANGEIDENTIFIER]})(?:${i[a.PRERELEASE]})?${i[a.BUILD]}?)?)?`),o("XRANGEPLAINLOOSE",`[v=\\s]*(${i[a.XRANGEIDENTIFIERLOOSE]})(?:\\.(${i[a.XRANGEIDENTIFIERLOOSE]})(?:\\.(${i[a.XRANGEIDENTIFIERLOOSE]})(?:${i[a.PRERELEASELOOSE]})?${i[a.BUILD]}?)?)?`),o("XRANGE",`^${i[a.GTLT]}\\s*${i[a.XRANGEPLAIN]}$`),o("XRANGELOOSE",`^${i[a.GTLT]}\\s*${i[a.XRANGEPLAINLOOSE]}$`),o("COERCE",`(^|[^\\d])(\\d{1,${n}})(?:\\.(\\d{1,${n}}))?(?:\\.(\\d{1,${n}}))?(?:$|[^\\d])`),o("COERCERTL",i[a.COERCE],!0),o("LONETILDE","(?:~>?)"),o("TILDETRIM",`(\\s*)${i[a.LONETILDE]}\\s+`,!0),e.tildeTrimReplace="$1~",o("TILDE",`^${i[a.LONETILDE]}${i[a.XRANGEPLAIN]}$`),o("TILDELOOSE",`^${i[a.LONETILDE]}${i[a.XRANGEPLAINLOOSE]}$`),o("LONECARET","(?:\\^)"),o("CARETTRIM",`(\\s*)${i[a.LONECARET]}\\s+`,!0),e.caretTrimReplace="$1^",o("CARET",`^${i[a.LONECARET]}${i[a.XRANGEPLAIN]}$`),o("CARETLOOSE",`^${i[a.LONECARET]}${i[a.XRANGEPLAINLOOSE]}$`),o("COMPARATORLOOSE",`^${i[a.GTLT]}\\s*(${i[a.LOOSEPLAIN]})$|^$`),o("COMPARATOR",`^${i[a.GTLT]}\\s*(${i[a.FULLPLAIN]})$|^$`),o("COMPARATORTRIM",`(\\s*)${i[a.GTLT]}\\s*(${i[a.LOOSEPLAIN]}|${i[a.XRANGEPLAIN]})`,!0),e.comparatorTrimReplace="$1$2$3",o("HYPHENRANGE",`^\\s*(${i[a.XRANGEPLAIN]})\\s+-\\s+(${i[a.XRANGEPLAIN]})\\s*$`),o("HYPHENRANGELOOSE",`^\\s*(${i[a.XRANGEPLAINLOOSE]})\\s+-\\s+(${i[a.XRANGEPLAINLOOSE]})\\s*$`),o("STAR","(<|>)?=?\\s*\\*"),o("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),o("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")}}),Y=E({"node_modules/semver/internal/parse-options.js"(e,t){v();var n=["includePrerelease","loose","rtl"];t.exports=e=>e?"object"!=typeof e?{loose:!0}:n.filter((t=>e[t])).reduce(((e,t)=>(e[t]=!0,e)),{}):{}}}),Q=E({"node_modules/semver/internal/identifiers.js"(e,t){v();var n=/^[0-9]+$/,r=(e,t)=>{let r=n.test(e),u=n.test(t);return r&&u&&(e=+e,t=+t),e===t?0:r&&!u?-1:u&&!r?1:e<t?-1:1};t.exports={compareIdentifiers:r,rcompareIdentifiers:(e,t)=>r(t,e)}}}),Z=E({"node_modules/semver/classes/semver.js"(e,t){v();var n=z(),{MAX_LENGTH:r,MAX_SAFE_INTEGER:u}=X(),{re:i,t:a}=K(),s=Y(),{compareIdentifiers:o}=Q(),l=class{constructor(e,t){if(t=s(t),e instanceof l){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError(`Invalid Version: ${e}`);if(e.length>r)throw new TypeError(`version is longer than ${r} characters`);n("SemVer",e,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;let o=e.trim().match(t.loose?i[a.LOOSE]:i[a.FULL]);if(!o)throw new TypeError(`Invalid Version: ${e}`);if(this.raw=e,this.major=+o[1],this.minor=+o[2],this.patch=+o[3],this.major>u||this.major<0)throw new TypeError("Invalid major version");if(this.minor>u||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>u||this.patch<0)throw new TypeError("Invalid patch version");o[4]?this.prerelease=o[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){let t=+e;if(t>=0&&t<u)return t}return e})):this.prerelease=[],this.build=o[5]?o[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(e){if(n("SemVer.compare",this.version,this.options,e),!(e instanceof l)){if("string"==typeof e&&e===this.version)return 0;e=new l(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof l||(e=new l(e,this.options)),o(this.major,e.major)||o(this.minor,e.minor)||o(this.patch,e.patch)}comparePre(e){if(e instanceof l||(e=new l(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let t=0;do{let r=this.prerelease[t],u=e.prerelease[t];if(n("prerelease compare",t,r,u),void 0===r&&void 0===u)return 0;if(void 0===u)return 1;if(void 0===r)return-1;if(r!==u)return o(r,u)}while(++t)}compareBuild(e){e instanceof l||(e=new l(e,this.options));let t=0;do{let r=this.build[t],u=e.build[t];if(n("prerelease compare",t,r,u),void 0===r&&void 0===u)return 0;if(void 0===u)return 1;if(void 0===r)return-1;if(r!==u)return o(r,u)}while(++t)}inc(e,t){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t),this.inc("pre",t);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t),this.inc("pre",t);break;case"major":(0!==this.minor||0!==this.patch||0===this.prerelease.length)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(0!==this.patch||0===this.prerelease.length)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let e=this.prerelease.length;for(;--e>=0;)"number"==typeof this.prerelease[e]&&(this.prerelease[e]++,e=-2);-1===e&&this.prerelease.push(0)}t&&(0===o(this.prerelease[0],t)?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error(`invalid increment argument: ${e}`)}return this.format(),this.raw=this.version,this}};t.exports=l}}),ee=E({"node_modules/semver/functions/compare.js"(e,t){v();var n=Z();t.exports=(e,t,r)=>new n(e,r).compare(new n(t,r))}}),te=E({"node_modules/semver/functions/lt.js"(e,t){v();var n=ee();t.exports=(e,t,r)=>n(e,t,r)<0}}),ne=E({"node_modules/semver/functions/gte.js"(e,t){v();var n=ee();t.exports=(e,t,r)=>n(e,t,r)>=0}}),re=E({"src/utils/arrayify.js"(e,t){v(),t.exports=(e,t)=>Object.entries(e).map((e=>{let[n,r]=e;return Object.assign({[t]:n},r)}))}}),ue=E({"node_modules/outdent/lib/index.js"(e,t){function n(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t]}function r(){return typeof WeakMap<"u"?new WeakMap:{add:n,delete:n,get:n,set:n,has:function(e){return!1}}}v(),Object.defineProperty(e,"__esModule",{value:!0}),e.outdent=void 0;var u=Object.prototype.hasOwnProperty,i=function(e,t){return u.call(e,t)};function a(e,t){for(var n in t)i(t,n)&&(e[n]=t[n]);return e}var s=/^[ \t]*(?:\r\n|\r|\n)/,o=/(?:\r\n|\r|\n)[ \t]*$/,l=/^(?:[\r\n]|$)/,p=/(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/,c=/^[ \t]*[\r\n][ \t\r\n]*$/;function d(e,t,n){var r=0,u=e[0].match(p);u&&(r=u[1].length);var i=new RegExp("(\\r\\n|\\r|\\n).{0,"+r+"}","g");t&&(e=e.slice(1));var a=n.newline,l=n.trimLeadingNewline,c=n.trimTrailingNewline,d="string"==typeof a,D=e.length;return e.map((function(e,t){return e=e.replace(i,"$1"),0===t&&l&&(e=e.replace(s,"")),t===D-1&&c&&(e=e.replace(o,"")),d&&(e=e.replace(/\r\n|\n|\r/g,(function(e){return a}))),e}))}var D=function e(t){var n=r(),u=r();return a((function r(s){for(var o=[],p=1;p<arguments.length;p++)o[p-1]=arguments[p];if(function(e){return i(e,"raw")&&i(e,"length")}(s)){var f=s,m=(o[0]===r||o[0]===D)&&c.test(f[0])&&l.test(f[1]),g=m?u:n,y=g.get(f);return y||(y=d(f,m,t),g.set(f,y)),0===o.length?y[0]:function(e,t){for(var n="",r=0,u=e.length;r<u;r++)n+=e[r],r<u-1&&(n+=t[r]);return n}(y,m?o.slice(1):o)}return e(a(a({},t),s||{}))}),{string:function(e){return d([e],!1,t)[0]}})}({trimLeadingNewline:!0,trimTrailingNewline:!0});if(e.outdent=D,e.default=D,typeof t<"u")try{t.exports=D,Object.defineProperty(D,"__esModule",{value:!0}),D.default=D,D.outdent=D}catch{}}}),ie=E({"src/main/core-options.js"(e,t){v();var{outdent:n}=ue(),r="Config",u="Editor",i="Other",a="Global",s="Special",o={cursorOffset:{since:"1.4.0",category:s,type:"int",default:-1,range:{start:-1,end:Number.POSITIVE_INFINITY,step:1},description:n`
      Print (to stderr) where a cursor at the given position would move to after formatting.
      This option cannot be used with --range-start and --range-end.
    `,cliCategory:u},endOfLine:{since:"1.15.0",category:a,type:"choice",default:[{since:"1.15.0",value:"auto"},{since:"2.0.0",value:"lf"}],description:"Which end of line characters to apply.",choices:[{value:"lf",description:"Line Feed only (\\n), common on Linux and macOS as well as inside git repos"},{value:"crlf",description:"Carriage Return + Line Feed characters (\\r\\n), common on Windows"},{value:"cr",description:"Carriage Return character only (\\r), used very rarely"},{value:"auto",description:n`
          Maintain existing
          (mixed values within one file are normalised by looking at what's used after the first line)
        `}]},filepath:{since:"1.4.0",category:s,type:"path",description:"Specify the input filepath. This will be used to do parser inference.",cliName:"stdin-filepath",cliCategory:i,cliDescription:"Path to the file to pretend that stdin comes from."},insertPragma:{since:"1.8.0",category:s,type:"boolean",default:!1,description:"Insert @format pragma into file's first docblock comment.",cliCategory:i},parser:{since:"0.0.10",category:a,type:"choice",default:[{since:"0.0.10",value:"babylon"},{since:"1.13.0",value:void 0}],description:"Which parser to use.",exception:e=>"string"==typeof e||"function"==typeof e,choices:[{value:"flow",description:"Flow"},{value:"babel",since:"1.16.0",description:"JavaScript"},{value:"babel-flow",since:"1.16.0",description:"Flow"},{value:"babel-ts",since:"2.0.0",description:"TypeScript"},{value:"typescript",since:"1.4.0",description:"TypeScript"},{value:"acorn",since:"2.6.0",description:"JavaScript"},{value:"espree",since:"2.2.0",description:"JavaScript"},{value:"meriyah",since:"2.2.0",description:"JavaScript"},{value:"css",since:"1.7.1",description:"CSS"},{value:"less",since:"1.7.1",description:"Less"},{value:"scss",since:"1.7.1",description:"SCSS"},{value:"json",since:"1.5.0",description:"JSON"},{value:"json5",since:"1.13.0",description:"JSON5"},{value:"json-stringify",since:"1.13.0",description:"JSON.stringify"},{value:"graphql",since:"1.5.0",description:"GraphQL"},{value:"markdown",since:"1.8.0",description:"Markdown"},{value:"mdx",since:"1.15.0",description:"MDX"},{value:"vue",since:"1.10.0",description:"Vue"},{value:"yaml",since:"1.14.0",description:"YAML"},{value:"glimmer",since:"2.3.0",description:"Ember / Handlebars"},{value:"html",since:"1.15.0",description:"HTML"},{value:"angular",since:"1.15.0",description:"Angular"},{value:"lwc",since:"1.17.0",description:"Lightning Web Components"}]},plugins:{since:"1.10.0",type:"path",array:!0,default:[{value:[]}],category:a,description:"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin",cliCategory:r},pluginSearchDirs:{since:"1.13.0",type:"path",array:!0,default:[{value:[]}],category:a,description:n`
      Custom directory that contains prettier plugins in node_modules subdirectory.
      Overrides default behavior when plugins are searched relatively to the location of Prettier.
      Multiple values are accepted.
    `,exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin-search-dir",cliCategory:r},printWidth:{since:"0.0.0",category:a,type:"int",default:80,description:"The line length where Prettier will try wrap.",range:{start:0,end:Number.POSITIVE_INFINITY,step:1}},rangeEnd:{since:"1.4.0",category:s,type:"int",default:Number.POSITIVE_INFINITY,range:{start:0,end:Number.POSITIVE_INFINITY,step:1},description:n`
      Format code ending at a given character offset (exclusive).
      The range will extend forwards to the end of the selected statement.
      This option cannot be used with --cursor-offset.
    `,cliCategory:u},rangeStart:{since:"1.4.0",category:s,type:"int",default:0,range:{start:0,end:Number.POSITIVE_INFINITY,step:1},description:n`
      Format code starting at a given character offset.
      The range will extend backwards to the start of the first line containing the selected statement.
      This option cannot be used with --cursor-offset.
    `,cliCategory:u},requirePragma:{since:"1.7.0",category:s,type:"boolean",default:!1,description:n`
      Require either '@prettier' or '@format' to be present in the file's first docblock comment
      in order for it to be formatted.
    `,cliCategory:i},tabWidth:{type:"int",category:a,default:2,description:"Number of spaces per indentation level.",range:{start:0,end:Number.POSITIVE_INFINITY,step:1}},useTabs:{since:"1.0.0",category:a,type:"boolean",default:!1,description:"Indent with tabs instead of spaces."},embeddedLanguageFormatting:{since:"2.1.0",category:a,type:"choice",default:[{since:"2.1.0",value:"auto"}],description:"Control how Prettier formats quoted code embedded in the file.",choices:[{value:"auto",description:"Format embedded code if Prettier can automatically identify it."},{value:"off",description:"Never automatically format embedded code."}]}};t.exports={CATEGORY_CONFIG:r,CATEGORY_EDITOR:u,CATEGORY_FORMAT:"Format",CATEGORY_OTHER:i,CATEGORY_OUTPUT:"Output",CATEGORY_GLOBAL:a,CATEGORY_SPECIAL:s,options:o}}}),ae=E({"src/main/support.js"(e,t){v();var n={compare:ee(),lt:te(),gte:ne()},r=re(),u=x().version,i=ie().options;t.exports={getSupportInfo:function(){let{plugins:e=[],showUnreleased:t=!1,showDeprecated:a=!1,showInternal:o=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},l=u.split("-",1)[0],c=e.flatMap((e=>e.languages||[])).filter(D),d=r(Object.assign({},...e.map((e=>{let{options:t}=e;return t})),i),"name").filter((e=>D(e)&&f(e))).sort(((e,t)=>e.name===t.name?0:e.name<t.name?-1:1)).map((function(e){if(o)return e;let{cliName:t,cliCategory:n,cliDescription:r}=e;return p(e,s)})).map((t=>{t=Object.assign({},t),Array.isArray(t.default)&&(t.default=1===t.default.length?t.default[0].value:t.default.filter(D).sort(((e,t)=>n.compare(t.since,e.since)))[0].value),Array.isArray(t.choices)&&(t.choices=t.choices.filter((e=>D(e)&&f(e))),"parser"===t.name&&function(e,t,n){let r=new Set(e.choices.map((e=>e.value)));for(let u of t)if(u.parsers)for(let t of u.parsers)if(!r.has(t)){r.add(t);let i=n.find((e=>e.parsers&&e.parsers[t])),a=u.name;i&&i.name&&(a+=` (plugin: ${i.name})`),e.choices.push({value:t,description:a})}}(t,c,e));let r=Object.fromEntries(e.filter((e=>e.defaultOptions&&void 0!==e.defaultOptions[t.name])).map((e=>[e.name,e.defaultOptions[t.name]])));return Object.assign(Object.assign({},t),{},{pluginDefaults:r})}));return{languages:c,options:d};function D(e){return t||!("since"in e)||e.since&&n.gte(l,e.since)}function f(e){return a||!("deprecated"in e)||e.deprecated&&n.lt(l,e.deprecated)}}}}}),se=E({"src/utils/is-non-empty-array.js"(e,t){v(),t.exports=function(e){return Array.isArray(e)&&e.length>0}}}),oe=E({"src/utils/text/skip.js"(e,t){function n(e){return(t,n,r)=>{let u=r&&r.backwards;if(!1===n)return!1;let{length:i}=t,a=n;for(;a>=0&&a<i;){let n=t.charAt(a);if(e instanceof RegExp){if(!e.test(n))return a}else if(!e.includes(n))return a;u?a--:a++}return(-1===a||a===i)&&a}}v();var r=n(/\s/),u=n(" \t"),i=n(",; \t"),a=n(/[^\n\r]/);t.exports={skipWhitespace:r,skipSpaces:u,skipToLineEnd:i,skipEverythingButNewLine:a}}}),le=E({"src/utils/text/skip-inline-comment.js"(e,t){v(),t.exports=function(e,t){if(!1===t)return!1;if("/"===e.charAt(t)&&"*"===e.charAt(t+1))for(let n=t+2;n<e.length;++n)if("*"===e.charAt(n)&&"/"===e.charAt(n+1))return n+2;return t}}}),pe=E({"src/utils/text/skip-trailing-comment.js"(e,t){v();var{skipEverythingButNewLine:n}=oe();t.exports=function(e,t){return!1!==t&&("/"===e.charAt(t)&&"/"===e.charAt(t+1)?n(e,t):t)}}}),ce=E({"src/utils/text/skip-newline.js"(e,t){v(),t.exports=function(e,t,n){let r=n&&n.backwards;if(!1===t)return!1;let u=e.charAt(t);if(r){if("\r"===e.charAt(t-1)&&"\n"===u)return t-2;if("\n"===u||"\r"===u||"\u2028"===u||"\u2029"===u)return t-1}else{if("\r"===u&&"\n"===e.charAt(t+1))return t+2;if("\n"===u||"\r"===u||"\u2028"===u||"\u2029"===u)return t+1}return t}}}),de=E({"src/utils/text/get-next-non-space-non-comment-character-index-with-start-index.js"(e,t){v();var n=le(),r=ce(),u=pe(),{skipSpaces:i}=oe();t.exports=function(e,t){let a=null,s=t;for(;s!==a;)a=s,s=i(e,s),s=n(e,s),s=u(e,s),s=r(e,s);return s}}}),De=E({"src/common/util.js"(e,t){v();var{default:n}=(G(),F(J)),r=w(),{getSupportInfo:u}=ae(),i=se(),a=R(),{skipWhitespace:s,skipSpaces:o,skipToLineEnd:l,skipEverythingButNewLine:p}=oe(),c=le(),d=pe(),D=ce(),f=de();function m(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=o(e,n.backwards?t-1:t,n);return r!==D(e,r,n)}function g(e,t){let n=null,r=t;for(;r!==n;)n=r,r=l(e,r),r=c(e,r),r=o(e,r);return r=d(e,r),r=D(e,r),!1!==r&&m(e,r)}function y(e,t,n){return f(e,n(t))}function h(e,t){let n=0;for(let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;r<e.length;++r)"\t"===e[r]?n=n+t-n%t:n++;return n}function E(e,t){let n={quote:'"',regex:/"/g,escaped:"&quot;"},r={quote:"'",regex:/'/g,escaped:"&apos;"},u="'"===t?r:n,i=u===r?n:r,a=u;return(e.includes(u.quote)||e.includes(i.quote))&&(a=(e.match(u.regex)||[]).length>(e.match(i.regex)||[]).length?i:u),a}function C(e,t,n){let r='"'===t?"'":'"',u=e.replace(/\\(.)|(["'])/gs,((e,u,i)=>u===r?u:i===t?"\\"+i:i||(n&&/^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(u)?u:"\\"+u)));return t+u+t}function A(e,t){(e.comments||(e.comments=[])).push(t),t.printed=!1,t.nodeDescription=function(e){let t=e.type||e.kind||"(unknown type)",n=String(e.name||e.id&&("object"==typeof e.id?e.id.name:e.id)||e.key&&("object"==typeof e.key?e.key.name:e.key)||e.value&&("object"==typeof e.value?"":String(e.value))||e.operator||"");return n.length>20&&(n=n.slice(0,19)+"â¦"),t+(n?" "+n:"")}(e)}t.exports={inferParserByLanguage:function(e,t){let{languages:n}=u({plugins:t.plugins}),r=n.find((t=>{let{name:n}=t;return n.toLowerCase()===e}))||n.find((t=>{let{aliases:n}=t;return Array.isArray(n)&&n.includes(e)}))||n.find((t=>{let{extensions:n}=t;return Array.isArray(n)&&n.includes(`.${e}`)}));return r&&r.parsers[0]},getStringWidth:a,getMaxContinuousCount:function(e,t){let r=e.match(new RegExp(`(${n(t)})+`,"g"));return null===r?0:r.reduce(((e,n)=>Math.max(e,n.length/t.length)),0)},getMinNotPresentContinuousCount:function(e,t){let r=e.match(new RegExp(`(${n(t)})+`,"g"));if(null===r)return 0;let u=new Map,i=0;for(let e of r){let n=e.length/t.length;u.set(n,!0),n>i&&(i=n)}for(let e=1;e<i;e++)if(!u.get(e))return e;return i+1},getPenultimate:e=>e[e.length-2],getLast:r,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:f,getNextNonSpaceNonCommentCharacterIndex:y,getNextNonSpaceNonCommentCharacter:function(e,t,n){return e.charAt(y(e,t,n))},skip:function(e){return(t,n,r)=>{let u=r&&r.backwards;if(!1===n)return!1;let{length:i}=t,a=n;for(;a>=0&&a<i;){let n=t.charAt(a);if(e instanceof RegExp){if(!e.test(n))return a}else if(!e.includes(n))return a;u?a--:a++}return(-1===a||a===i)&&a}},skipWhitespace:s,skipSpaces:o,skipToLineEnd:l,skipEverythingButNewLine:p,skipInlineComment:c,skipTrailingComment:d,skipNewline:D,isNextLineEmptyAfterIndex:g,isNextLineEmpty:function(e,t,n){return g(e,n(t))},isPreviousLineEmpty:function(e,t,n){let r=n(t)-1;return r=o(e,r,{backwards:!0}),r=D(e,r,{backwards:!0}),r=o(e,r,{backwards:!0}),r!==D(e,r,{backwards:!0})},hasNewline:m,hasNewlineInRange:function(e,t,n){for(let r=t;r<n;++r)if("\n"===e.charAt(r))return!0;return!1},hasSpaces:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return o(e,n.backwards?t-1:t,n)!==t},getAlignmentSize:h,getIndentSize:function(e,t){let n=e.lastIndexOf("\n");return-1===n?0:h(e.slice(n+1).match(/^[\t ]*/)[0],t)},getPreferredQuote:E,printString:function(e,t){let n=e.slice(1,-1);return C(n,"json"===t.parser||"json5"===t.parser&&"preserve"===t.quoteProps&&!t.singleQuote?'"':t.__isInHtmlAttribute?"'":E(n,t.singleQuote?"'":'"').quote,!("css"===t.parser||"less"===t.parser||"scss"===t.parser||t.__embeddedInHtml))},printNumber:function(e){return e.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/,"$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")},makeString:C,addLeadingComment:function(e,t){t.leading=!0,t.trailing=!1,A(e,t)},addDanglingComment:function(e,t,n){t.leading=!1,t.trailing=!1,n&&(t.marker=n),A(e,t)},addTrailingComment:function(e,t){t.leading=!1,t.trailing=!0,A(e,t)},isFrontMatterNode:function(e){return e&&"front-matter"===e.type},isNonEmptyArray:i,createGroupIdMapper:function(e){let t=new WeakMap;return function(n){return t.has(n)||t.set(n,Symbol(e)),t.get(n)}}}}}),fe={};function me(e,t){for(var n=0,r=e.length-1;r>=0;r--){var u=e[r];"."===u?e.splice(r,1):".."===u?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}function ge(){for(var e="",t=!1,n=arguments.length-1;n>=-1&&!t;n--){var r=n>=0?arguments[n]:"/";if("string"!=typeof r)throw new TypeError("Arguments to path.resolve must be strings");r&&(e=r+"/"+e,t="/"===r.charAt(0))}return(t?"/":"")+(e=me(xe(e.split("/"),(function(e){return!!e})),!t).join("/"))||"."}function ye(e){var t=he(e),n="/"===ke(e,-1);return!(e=me(xe(e.split("/"),(function(e){return!!e})),!t).join("/"))&&!t&&(e="."),e&&n&&(e+="/"),(t?"/":"")+e}function he(e){return"/"===e.charAt(0)}function Ee(){return ye(xe(Array.prototype.slice.call(arguments,0),(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))}function Ce(e,t){function n(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=ge(e).substr(1),t=ge(t).substr(1);for(var r=n(e.split("/")),u=n(t.split("/")),i=Math.min(r.length,u.length),a=i,s=0;s<i;s++)if(r[s]!==u[s]){a=s;break}var o=[];for(s=a;s<r.length;s++)o.push("..");return(o=o.concat(u.slice(a))).join("/")}function Ae(e){var t=Se(e),n=t[0],r=t[1];return n||r?(r&&(r=r.substr(0,r.length-1)),n+r):"."}function Fe(e,t){var n=Se(e)[2];return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n}function ve(e){return Se(e)[3]}function xe(e,t){if(e.filter)return e.filter(t);for(var n=[],r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}C(fe,{basename:()=>Fe,default:()=>Ne,delimiter:()=>Be,dirname:()=>Ae,extname:()=>ve,isAbsolute:()=>he,join:()=>Ee,normalize:()=>ye,relative:()=>Ce,resolve:()=>ge,sep:()=>Te});var be,Se,Te,Be,Ne,ke,je=h({"node-modules-polyfills:path"(){v(),be=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,Se=function(e){return be.exec(e).slice(1)},Ne={extname:ve,basename:Fe,dirname:Ae,sep:Te="/",delimiter:Be=":",relative:Ce,join:Ee,isAbsolute:he,normalize:ye,resolve:ge},ke=function(e,t,n){return e.substr(t,n)}}}),Pe=E({"node-modules-polyfills-commonjs:path"(e,t){v();var n=(je(),F(fe));if(n&&n.default){t.exports=n.default;for(let e in n)t.exports[e]=n[e]}else n&&(t.exports=n)}}),Ie=E({"src/common/errors.js"(e,t){v();var n=class extends Error{},r=class extends Error{},u=class extends Error{},i=class extends Error{};t.exports={ConfigError:n,DebugError:r,UndefinedParserError:u,ArgExpansionBailout:i}}}),Oe={};function Le(e,t){function n(){this.constructor=e}ot(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function Me(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var u=0;for(r=Object.getOwnPropertySymbols(e);u<r.length;u++)t.indexOf(r[u])<0&&Object.prototype.propertyIsEnumerable.call(e,r[u])&&(n[r[u]]=e[r[u]])}return n}function $e(e,t,n,r){var u,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(u=e[s])&&(a=(i<3?u(a):i>3?u(t,n,a):u(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a}function Ve(e,t){return function(n,r){t(n,r,e)}}function Ue(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function Je(e,t,n,r){return new(n||(n=Promise))((function(u,i){function a(e){try{o(r.next(e))}catch(e){i(e)}}function s(e){try{o(r.throw(e))}catch(e){i(e)}}function o(e){e.done?u(e.value):function(e){return e instanceof n?e:new n((function(t){t(e)}))}(e.value).then(a,s)}o((r=r.apply(e,t||[])).next())}))}function He(e,t){var n,r,u,i,a={label:0,sent:function(){if(1&u[0])throw u[1];return u[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(u=2&i[0]?r.return:i[0]?r.throw||((u=r.return)&&u.call(r),0):r.next)&&!(u=u.call(r,i[1])).done)return u;switch(r=0,u&&(i=[2&i[0],u.value]),i[0]){case 0:case 1:u=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(u=(u=a.trys).length>0&&u[u.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!u||i[1]>u[0]&&i[1]<u[3])){a.label=i[1];break}if(6===i[0]&&a.label<u[1]){a.label=u[1],u=i;break}if(u&&a.label<u[2]){a.label=u[2],a.ops.push(i);break}u[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=u=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}}function Ge(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}function ze(e,t){for(var n in e)"default"!==n&&!t.hasOwnProperty(n)&&(t[n]=e[n])}function Xe(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function Ke(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,u,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){u={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(u)throw u.error}}return a}function Ye(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(Ke(arguments[t]));return e}function Qe(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),u=0;for(t=0;t<n;t++)for(var i=arguments[t],a=0,s=i.length;a<s;a++,u++)r[u]=i[a];return r}function Ze(e){return this instanceof Ze?(this.v=e,this):new Ze(e)}function et(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,u=n.apply(e,t||[]),i=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(e){u[e]&&(r[e]=function(t){return new Promise((function(n,r){i.push([e,t,n,r])>1||s(e,t)}))})}function s(e,t){try{!function(e){e.value instanceof Ze?Promise.resolve(e.value.v).then(o,l):p(i[0][2],e)}(u[e](t))}catch(e){p(i[0][3],e)}}function o(e){s("next",e)}function l(e){s("throw",e)}function p(e,t){e(t),i.shift(),i.length&&s(i[0][0],i[0][1])}}function tt(e){var t,n;return t={},r("next"),r("throw",(function(e){throw e})),r("return"),t[Symbol.iterator]=function(){return this},t;function r(r,u){t[r]=e[r]?function(t){return(n=!n)?{value:Ze(e[r](t)),done:"return"===r}:u?u(t):t}:u}}function nt(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e=Xe(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,u){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,u,(t=e[n](t)).done,t.value)}))}}}function rt(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}function ut(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function it(e){return e&&e.__esModule?e:{default:e}}function at(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)}function st(e,t,n){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,n),n}C(Oe,{__assign:()=>lt,__asyncDelegator:()=>tt,__asyncGenerator:()=>et,__asyncValues:()=>nt,__await:()=>Ze,__awaiter:()=>Je,__classPrivateFieldGet:()=>at,__classPrivateFieldSet:()=>st,__createBinding:()=>Ge,__decorate:()=>$e,__exportStar:()=>ze,__extends:()=>Le,__generator:()=>He,__importDefault:()=>it,__importStar:()=>ut,__makeTemplateObject:()=>rt,__metadata:()=>Ue,__param:()=>Ve,__read:()=>Ke,__rest:()=>Me,__spread:()=>Ye,__spreadArrays:()=>Qe,__values:()=>Xe});var ot,lt,pt=h({"node_modules/tslib/tslib.es6.js"(){v(),ot=function(e,t){return(ot=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},lt=function(){return lt=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var u in t=arguments[n])Object.prototype.hasOwnProperty.call(t,u)&&(e[u]=t[u]);return e},lt.apply(this,arguments)}}}),ct=E({"node_modules/vnopts/lib/descriptors/api.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0}),e.apiDescriptor={key:e=>/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e)?e:JSON.stringify(e),value(t){if(null===t||"object"!=typeof t)return JSON.stringify(t);if(Array.isArray(t))return`[${t.map((t=>e.apiDescriptor.value(t))).join(", ")}]`;let n=Object.keys(t);return 0===n.length?"{}":`{ ${n.map((n=>`${e.apiDescriptor.key(n)}: ${e.apiDescriptor.value(t[n])}`)).join(", ")} }`},pair:t=>{let{key:n,value:r}=t;return e.apiDescriptor.value({[n]:r})}}}}),dt=E({"node_modules/vnopts/lib/descriptors/index.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0}),(pt(),F(Oe)).__exportStar(ct(),e)}}),Dt=E({"scripts/build/shims/chalk.cjs"(e,t){v();var n=e=>e;n.grey=n,n.red=n,n.bold=n,n.yellow=n,n.blue=n,n.default=n,t.exports=n}}),ft=E({"node_modules/vnopts/lib/handlers/deprecated/common.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Dt();e.commonDeprecatedHandler=(e,n,r)=>{let{descriptor:u}=r,i=[`${t.default.yellow("string"==typeof e?u.key(e):u.pair(e))} is deprecated`];return n&&i.push(`we now treat it as ${t.default.blue("string"==typeof n?u.key(n):u.pair(n))}`),i.join("; ")+"."}}}),mt=E({"node_modules/vnopts/lib/handlers/deprecated/index.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0}),(pt(),F(Oe)).__exportStar(ft(),e)}}),gt=E({"node_modules/vnopts/lib/handlers/invalid/common.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Dt();e.commonInvalidHandler=(e,n,r)=>[`Invalid ${t.default.red(r.descriptor.key(e))} value.`,`Expected ${t.default.blue(r.schemas[e].expected(r))},`,`but received ${t.default.red(r.descriptor.value(n))}.`].join(" ")}}),yt=E({"node_modules/vnopts/lib/handlers/invalid/index.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0}),(pt(),F(Oe)).__exportStar(gt(),e)}}),ht=E({"node_modules/vnopts/node_modules/leven/index.js"(e,t){v();var n=[],r=[];t.exports=function(e,t){if(e===t)return 0;var u=e;e.length>t.length&&(e=t,t=u);var i=e.length,a=t.length;if(0===i)return a;if(0===a)return i;for(;i>0&&e.charCodeAt(~-i)===t.charCodeAt(~-a);)i--,a--;if(0===i)return a;for(var s=0;s<i&&e.charCodeAt(s)===t.charCodeAt(s);)s++;if(a-=s,0==(i-=s))return a;for(var o,l,p,c,d=0,D=0;d<i;)r[s+d]=e.charCodeAt(s+d),n[d]=++d;for(;D<a;)for(o=t.charCodeAt(s+D),p=D++,l=D,d=0;d<i;d++)c=o===r[s+d]?p:p+1,p=n[d],l=n[d]=p>l?c>l?l+1:c:c>p?p+1:c;return l}}}),Et=E({"node_modules/vnopts/lib/handlers/unknown/leven.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Dt(),n=ht();e.levenUnknownHandler=(e,r,u)=>{let{descriptor:i,logger:a,schemas:s}=u,o=[`Ignored unknown option ${t.default.yellow(i.pair({key:e,value:r}))}.`],l=Object.keys(s).sort().find((t=>n(e,t)<3));l&&o.push(`Did you mean ${t.default.blue(i.key(l))}?`),a.warn(o.join(" "))}}}),Ct=E({"node_modules/vnopts/lib/handlers/unknown/index.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0}),(pt(),F(Oe)).__exportStar(Et(),e)}}),At=E({"node_modules/vnopts/lib/handlers/index.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=(pt(),F(Oe));t.__exportStar(mt(),e),t.__exportStar(yt(),e),t.__exportStar(Ct(),e)}}),Ft=E({"node_modules/vnopts/lib/schema.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=["default","expected","validate","deprecated","forward","redirect","overlap","preprocess","postprocess"];function n(e,n){let i=new e(n),a=Object.create(i);for(let e of t)e in n&&(a[e]=u(n[e],i,r.prototype[e].length));return a}e.createSchema=n;var r=class{constructor(e){this.name=e.name}static create(e){return n(this,e)}default(e){}expected(e){return"nothing"}validate(e,t){return!1}deprecated(e,t){return!1}forward(e,t){}redirect(e,t){}overlap(e,t,n){return e}preprocess(e,t){return e}postprocess(e,t){return e}};function u(e,t,n){return"function"==typeof e?function(){for(var r=arguments.length,u=new Array(r),i=0;i<r;i++)u[i]=arguments[i];return e(...u.slice(0,n-1),t,...u.slice(n-1))}:()=>e}e.Schema=r}}),vt=E({"node_modules/vnopts/lib/schemas/alias.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Ft(),n=class extends t.Schema{constructor(e){super(e),this._sourceName=e.sourceName}expected(e){return e.schemas[this._sourceName].expected(e)}validate(e,t){return t.schemas[this._sourceName].validate(e,t)}redirect(e,t){return this._sourceName}};e.AliasSchema=n}}),xt=E({"node_modules/vnopts/lib/schemas/any.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Ft(),n=class extends t.Schema{expected(){return"anything"}validate(){return!0}};e.AnySchema=n}}),bt=E({"node_modules/vnopts/lib/schemas/array.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=(pt(),F(Oe)),n=Ft(),r=class extends n.Schema{constructor(e){var{valueSchema:n,name:r=n.name}=e,u=t.__rest(e,["valueSchema","name"]);super(Object.assign({},u,{name:r})),this._valueSchema=n}expected(e){return`an array of ${this._valueSchema.expected(e)}`}validate(e,t){if(!Array.isArray(e))return!1;let n=[];for(let r of e){let e=t.normalizeValidateResult(this._valueSchema.validate(r,t),r);!0!==e&&n.push(e.value)}return 0===n.length||{value:n}}deprecated(e,t){let n=[];for(let r of e){let e=t.normalizeDeprecatedResult(this._valueSchema.deprecated(r,t),r);!1!==e&&n.push(...e.map((e=>{let{value:t}=e;return{value:[t]}})))}return n}forward(e,t){let n=[];for(let r of e){let e=t.normalizeForwardResult(this._valueSchema.forward(r,t),r);n.push(...e.map(u))}return n}redirect(e,t){let n=[],r=[];for(let i of e){let e=t.normalizeRedirectResult(this._valueSchema.redirect(i,t),i);"remain"in e&&n.push(e.remain),r.push(...e.redirect.map(u))}return 0===n.length?{redirect:r}:{redirect:r,remain:n}}overlap(e,t){return e.concat(t)}};function u(e){let{from:t,to:n}=e;return{from:[t],to:n}}e.ArraySchema=r}}),St=E({"node_modules/vnopts/lib/schemas/boolean.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Ft(),n=class extends t.Schema{expected(){return"true or false"}validate(e){return"boolean"==typeof e}};e.BooleanSchema=n}}),Tt=E({"node_modules/vnopts/lib/utils.js"(e){function t(e,t){return"string"==typeof e||"key"in e?{from:t,to:e}:"from"in e?{from:e.from,to:e.to}:{from:t,to:e.to}}function n(e,n){return void 0===e?[]:Array.isArray(e)?e.map((e=>t(e,n))):[t(e,n)]}v(),Object.defineProperty(e,"__esModule",{value:!0}),e.recordFromArray=function(e,t){let n=Object.create(null);for(let r of e){let e=r[t];if(n[e])throw new Error(`Duplicate ${t} ${JSON.stringify(e)}`);n[e]=r}return n},e.mapFromArray=function(e,t){let n=new Map;for(let r of e){let e=r[t];if(n.has(e))throw new Error(`Duplicate ${t} ${JSON.stringify(e)}`);n.set(e,r)}return n},e.createAutoChecklist=function(){let e=Object.create(null);return t=>{let n=JSON.stringify(t);return!!e[n]||(e[n]=!0,!1)}},e.partition=function(e,t){let n=[],r=[];for(let u of e)t(u)?n.push(u):r.push(u);return[n,r]},e.isInt=function(e){return e===Math.floor(e)},e.comparePrimitive=function(e,t){if(e===t)return 0;let n=typeof e,r=typeof t,u=["undefined","object","boolean","number","string"];return n!==r?u.indexOf(n)-u.indexOf(r):"string"!==n?Number(e)-Number(t):e.localeCompare(t)},e.normalizeDefaultResult=function(e){return void 0===e?{}:e},e.normalizeValidateResult=function(e,t){return!0===e||(!1===e?{value:t}:e)},e.normalizeDeprecatedResult=function(e,t){return!1!==e&&(!0===e?!!(arguments.length>2&&void 0!==arguments[2]&&arguments[2])||[{value:t}]:"value"in e?[e]:0!==e.length&&e)},e.normalizeTransferResult=t,e.normalizeForwardResult=n,e.normalizeRedirectResult=function(e,t){let r=n("object"==typeof e&&"redirect"in e?e.redirect:e,t);return 0===r.length?{remain:t,redirect:r}:"object"==typeof e&&"remain"in e?{remain:e.remain,redirect:r}:{redirect:r}}}}),Bt=E({"node_modules/vnopts/lib/schemas/choice.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Ft(),n=Tt(),r=class extends t.Schema{constructor(e){super(e),this._choices=n.mapFromArray(e.choices.map((e=>e&&"object"==typeof e?e:{value:e})),"value")}expected(e){let{descriptor:t}=e,r=Array.from(this._choices.keys()).map((e=>this._choices.get(e))).filter((e=>!e.deprecated)).map((e=>e.value)).sort(n.comparePrimitive).map(t.value),u=r.slice(0,-2),i=r.slice(-2);return u.concat(i.join(" or ")).join(", ")}validate(e){return this._choices.has(e)}deprecated(e){let t=this._choices.get(e);return!(!t||!t.deprecated)&&{value:e}}forward(e){let t=this._choices.get(e);return t?t.forward:void 0}redirect(e){let t=this._choices.get(e);return t?t.redirect:void 0}};e.ChoiceSchema=r}}),wt=E({"node_modules/vnopts/lib/schemas/number.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Ft(),n=class extends t.Schema{expected(){return"a number"}validate(e,t){return"number"==typeof e}};e.NumberSchema=n}}),Nt=E({"node_modules/vnopts/lib/schemas/integer.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Tt(),n=wt(),r=class extends n.NumberSchema{expected(){return"an integer"}validate(e,n){return!0===n.normalizeValidateResult(super.validate(e,n),e)&&t.isInt(e)}};e.IntegerSchema=r}}),kt=E({"node_modules/vnopts/lib/schemas/string.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Ft(),n=class extends t.Schema{expected(){return"a string"}validate(e){return"string"==typeof e}};e.StringSchema=n}}),jt=E({"node_modules/vnopts/lib/schemas/index.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=(pt(),F(Oe));t.__exportStar(vt(),e),t.__exportStar(xt(),e),t.__exportStar(bt(),e),t.__exportStar(St(),e),t.__exportStar(Bt(),e),t.__exportStar(Nt(),e),t.__exportStar(wt(),e),t.__exportStar(kt(),e)}}),Pt=E({"node_modules/vnopts/lib/defaults.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=ct(),n=ft(),r=yt(),u=Et();e.defaultDescriptor=t.apiDescriptor,e.defaultUnknownHandler=u.levenUnknownHandler,e.defaultInvalidHandler=r.commonInvalidHandler,e.defaultDeprecatedHandler=n.commonDeprecatedHandler}}),It=E({"node_modules/vnopts/lib/normalize.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Pt(),n=Tt();e.normalize=(e,t,n)=>new r(t,n).normalize(e);var r=class{constructor(e,r){let{logger:u=console,descriptor:i=t.defaultDescriptor,unknown:a=t.defaultUnknownHandler,invalid:s=t.defaultInvalidHandler,deprecated:o=t.defaultDeprecatedHandler}=r||{};this._utils={descriptor:i,logger:u||{warn:()=>{}},schemas:n.recordFromArray(e,"name"),normalizeDefaultResult:n.normalizeDefaultResult,normalizeDeprecatedResult:n.normalizeDeprecatedResult,normalizeForwardResult:n.normalizeForwardResult,normalizeRedirectResult:n.normalizeRedirectResult,normalizeValidateResult:n.normalizeValidateResult},this._unknownHandler=a,this._invalidHandler=s,this._deprecatedHandler=o,this.cleanHistory()}cleanHistory(){this._hasDeprecationWarned=n.createAutoChecklist()}normalize(e){let t={},r=[e],u=()=>{for(;0!==r.length;){let e=r.shift(),n=this._applyNormalization(e,t);r.push(...n)}};u();for(let e of Object.keys(this._utils.schemas)){let u=this._utils.schemas[e];if(!(e in t)){let t=n.normalizeDefaultResult(u.default(this._utils));"value"in t&&r.push({[e]:t.value})}}u();for(let e of Object.keys(this._utils.schemas)){let n=this._utils.schemas[e];e in t&&(t[e]=n.postprocess(t[e],this._utils))}return t}_applyNormalization(e,t){let r=[],[u,i]=n.partition(Object.keys(e),(e=>e in this._utils.schemas));for(let i of u){let u=this._utils.schemas[i],a=u.preprocess(e[i],this._utils),s=n.normalizeValidateResult(u.validate(a,this._utils),a);if(!0!==s){let{value:e}=s,t=this._invalidHandler(i,e,this._utils);throw"string"==typeof t?new Error(t):t}let o=e=>{let{from:t,to:n}=e;r.push("string"==typeof n?{[n]:t}:{[n.key]:n.value})},l=e=>{let{value:t,redirectTo:r}=e,s=n.normalizeDeprecatedResult(u.deprecated(t,this._utils),a,!0);if(!1!==s)if(!0===s)this._hasDeprecationWarned(i)||this._utils.logger.warn(this._deprecatedHandler(i,r,this._utils));else for(let{value:e}of s){let t={key:i,value:e};if(!this._hasDeprecationWarned(t)){let n="string"==typeof r?{key:r,value:e}:r;this._utils.logger.warn(this._deprecatedHandler(t,n,this._utils))}}};n.normalizeForwardResult(u.forward(a,this._utils),a).forEach(o);let p=n.normalizeRedirectResult(u.redirect(a,this._utils),a);if(p.redirect.forEach(o),"remain"in p){let e=p.remain;t[i]=i in t?u.overlap(t[i],e,this._utils):e,l({value:e})}for(let{from:e,to:t}of p.redirect)l({value:e,redirectTo:t})}for(let n of i){let u=e[n],i=this._unknownHandler(n,u,this._utils);if(i)for(let e of Object.keys(i)){let n={[e]:i[e]};e in this._utils.schemas?r.push(n):Object.assign(t,n)}}return r}};e.Normalizer=r}}),Ot=E({"node_modules/vnopts/lib/index.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=(pt(),F(Oe));t.__exportStar(dt(),e),t.__exportStar(At(),e),t.__exportStar(jt(),e),t.__exportStar(It(),e),t.__exportStar(Ft(),e)}}),Lt=E({"src/main/options-normalizer.js"(e,t){v();var n,r=Ot(),u=w(),i={key:e=>1===e.length?`-${e}`:`--${e}`,value:e=>r.apiDescriptor.value(e),pair:e=>{let{key:t,value:n}=e;return!1===n?`--no-${t}`:!0===n?i.key(t):""===n?`${i.key(t)} without an argument`:`${i.key(t)}=${n}`}},a=e=>{let{colorsModule:t,levenshteinDistance:n}=e;return class extends r.ChoiceSchema{constructor(e){let{name:t,flags:n}=e;super({name:t,choices:n}),this._flags=[...n].sort()}preprocess(e,r){if("string"==typeof e&&e.length>0&&!this._flags.includes(e)){let u=this._flags.find((t=>n(t,e)<3));if(u)return r.logger.warn([`Unknown flag ${t.yellow(r.descriptor.value(e))},`,`did you mean ${t.blue(r.descriptor.value(u))}?`].join(" ")),u}return e}expected(){return"a flag"}}};function s(e,t){let{logger:u=!1,isCLI:a=!1,passThrough:s=!1,colorsModule:c=null,levenshteinDistance:d=null}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},D=s?Array.isArray(s)?(e,t)=>s.includes(e)?{[e]:t}:void 0:(e,t)=>({[e]:t}):(e,t,n)=>{let u=n.schemas,{_:i}=u,a=p(u,o);return r.levenUnknownHandler(e,t,Object.assign(Object.assign({},n),{},{schemas:a}))},f=a?i:r.apiDescriptor,m=function(e,t){let{isCLI:n,colorsModule:u,levenshteinDistance:i}=t,a=[];n&&a.push(r.AnySchema.create({name:"_"}));for(let t of e)a.push(l(t,{isCLI:n,optionInfos:e,colorsModule:u,levenshteinDistance:i})),t.alias&&n&&a.push(r.AliasSchema.create({name:t.alias,sourceName:t.name}));return a}(t,{isCLI:a,colorsModule:c,levenshteinDistance:d}),g=new r.Normalizer(m,{logger:u,unknown:D,descriptor:f}),y=!1!==u;y&&n&&(g._hasDeprecationWarned=n);let h=g.normalize(e);return y&&(n=g._hasDeprecationWarned),a&&!1===h["plugin-search"]&&(h["plugin-search-dir"]=!1),h}function l(e,t){let{isCLI:n,optionInfos:i,colorsModule:s,levenshteinDistance:o}=t,{name:l}=e;if("plugin-search-dir"===l||"pluginSearchDirs"===l)return r.AnySchema.create({name:l,preprocess:e=>(!1===e||(e=Array.isArray(e)?e:[e]),e),validate:e=>!1===e||e.every((e=>"string"==typeof e)),expected:()=>"false or paths to plugin search dir"});let p,c={name:l},d={};switch(e.type){case"int":p=r.IntegerSchema,n&&(c.preprocess=Number);break;case"string":case"path":p=r.StringSchema;break;case"choice":p=r.ChoiceSchema,c.choices=e.choices.map((t=>"object"==typeof t&&t.redirect?Object.assign(Object.assign({},t),{},{redirect:{to:{key:e.name,value:t.redirect}}}):t));break;case"boolean":p=r.BooleanSchema;break;case"flag":p=a({colorsModule:s,levenshteinDistance:o}),c.flags=i.flatMap((e=>[e.alias,e.description&&e.name,e.oppositeDescription&&`no-${e.name}`].filter(Boolean)));break;default:throw new Error(`Unexpected type ${e.type}`)}if(e.exception?c.validate=(t,n,r)=>e.exception(t)||n.validate(t,r):c.validate=(e,t,n)=>void 0===e||t.validate(e,n),e.redirect&&(d.redirect=t=>t?{to:{key:e.redirect.option,value:e.redirect.value}}:void 0),e.deprecated&&(d.deprecated=!0),n&&!e.array){let e=c.preprocess||(e=>e);c.preprocess=(t,n,r)=>n.preprocess(e(Array.isArray(t)?u(t):t),r)}return e.array?r.ArraySchema.create(Object.assign(Object.assign(Object.assign({},n?{preprocess:e=>Array.isArray(e)?e:[e]}:{}),d),{},{valueSchema:p.create(c)})):p.create(Object.assign(Object.assign({},c),d))}t.exports={normalizeApiOptions:function(e,t,n){return s(e,t,n)},normalizeCliOptions:function(e,t,n){return s(e,t,Object.assign({isCLI:!0},n))}}}}),_t=E({"src/language-js/loc.js"(e,t){v();var n=se();function r(e){var t,u;let i=e.range?e.range[0]:e.start,a=null!==(t=null===(u=e.declaration)||void 0===u?void 0:u.decorators)&&void 0!==t?t:e.decorators;return n(a)?Math.min(r(a[0]),i):i}function u(e){return e.range?e.range[1]:e.end}function i(e,t){let n=r(e);return Number.isInteger(n)&&n===r(t)}t.exports={locStart:r,locEnd:u,hasSameLocStart:i,hasSameLoc:function(e,t){return i(e,t)&&function(e,t){let n=u(e);return Number.isInteger(n)&&n===u(t)}(e,t)}}}}),Mt=E({"src/main/load-parser.js"(e,t){v(),t.exports=()=>{}}}),$t=E({"scripts/build/shims/babel-highlight.cjs"(e,t){v();var n=Dt(),r={shouldHighlight:()=>!1,getChalk:()=>n};t.exports=r}}),Rt=E({"node_modules/@babel/code-frame/lib/index.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0}),e.codeFrameColumns=u,e.default=function(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!n){n=!0;let e="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";c.emitWarning?c.emitWarning(e,"DeprecationWarning"):(new Error(e).name="DeprecationWarning",console.warn(new Error(e)))}return u(e,{start:{column:r=Math.max(r,0),line:t}},i)};var t=$t(),n=!1;var r=/\r\n|[\n\r\u2028\u2029]/;function u(e,n){let u=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=(u.highlightCode||u.forceColor)&&(0,t.shouldHighlight)(u),a=(0,t.getChalk)(u),s=function(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}(a),o=(e,t)=>i?e(t):t,l=e.split(r),{start:p,end:c,markerLines:d}=function(e,t,n){let r=Object.assign({column:0,line:-1},e.start),u=Object.assign({},r,e.end),{linesAbove:i=2,linesBelow:a=3}=n||{},s=r.line,o=r.column,l=u.line,p=u.column,c=Math.max(s-(i+1),0),d=Math.min(t.length,l+a);-1===s&&(c=0),-1===l&&(d=t.length);let D=l-s,f={};if(D)for(let e=0;e<=D;e++){let n=e+s;if(o)if(0===e){let e=t[n-1].length;f[n]=[o,e-o+1]}else if(e===D)f[n]=[0,p];else{let r=t[n-e].length;f[n]=[0,r]}else f[n]=!0}else f[s]=o===p?!o||[o,0]:[o,p-o];return{start:c,end:d,markerLines:f}}(n,l,u),D=n.start&&"number"==typeof n.start.column,f=String(c).length,m=(i?(0,t.default)(e,u):e).split(r,c).slice(p,c).map(((e,t)=>{let n=p+1+t,r=` ${` ${n}`.slice(-f)} |`,i=d[n],a=!d[n+1];if(i){let t="";if(Array.isArray(i)){let n=e.slice(0,Math.max(i[0]-1,0)).replace(/[^\t]/g," "),l=i[1]||1;t=["\n ",o(s.gutter,r.replace(/\d/g," "))," ",n,o(s.marker,"^").repeat(l)].join(""),a&&u.message&&(t+=" "+o(s.message,u.message))}return[o(s.marker,">"),o(s.gutter,r),e.length>0?` ${e}`:"",t].join("")}return` ${o(s.gutter,r)}${e.length>0?` ${e}`:""}`})).join("\n");return u.message&&!D&&(m=`${" ".repeat(f+1)}${u.message}\n${m}`),i?a.reset(m):m}}}),Vt=E({"src/main/parser.js"(e,t){v();var{ConfigError:n}=Ie(),r=_t(),{locStart:u,locEnd:i}=(Mt(),r),a=Object.getOwnPropertyNames,s=Object.getOwnPropertyDescriptor;function o(e){let t={};for(let n of e.plugins)if(n.parsers)for(let e of a(n.parsers))Object.defineProperty(t,e,s(n.parsers,e));return t}function l(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o(e);if("function"==typeof e.parser)return{parse:e.parser,astFormat:"estree",locStart:u,locEnd:i};if("string"==typeof e.parser){if(Object.prototype.hasOwnProperty.call(t,e.parser))return t[e.parser];throw new n(`Couldn't resolve parser "${e.parser}". Parsers must be explicitly added to the standalone bundle.`)}}t.exports={parse:function(e,t){let n=o(t),r=Object.defineProperties({},Object.fromEntries(Object.keys(n).map((e=>[e,{enumerable:!0,get:()=>n[e].parse}])))),u=l(t,n);try{return u.preprocess&&(e=u.preprocess(e,t)),{text:e,ast:u.parse(e,r,t)}}catch(t){let{loc:n}=t;if(n){let{codeFrameColumns:r}=Rt();throw t.codeFrame=r(e,n,{highlightCode:!0}),t.message+="\n"+t.codeFrame,t}throw t}},resolveParser:l}}}),Wt=E({"src/main/options.js"(e,t){v();var n=Pe(),{UndefinedParserError:r}=Ie(),{getSupportInfo:u}=ae(),i=Lt(),{resolveParser:a}=Vt(),s={astFormat:"estree",printer:{},originalText:void 0,locStart:null,locEnd:null};function o(e,t){let r=n.basename(e).toLowerCase(),i=u({plugins:t}).languages.filter((e=>null!==e.since)).find((e=>e.extensions&&e.extensions.some((e=>r.endsWith(e)))||e.filenames&&e.filenames.some((e=>e.toLowerCase()===r))));return i&&i.parsers[0]}t.exports={normalize:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=Object.assign({},e),l=u({plugins:e.plugins,showUnreleased:!0,showDeprecated:!0}).options,p=Object.assign(Object.assign({},s),Object.fromEntries(l.filter((e=>void 0!==e.default)).map((e=>[e.name,e.default]))));if(!n.parser)if(n.filepath){if(n.parser=o(n.filepath,n.plugins),!n.parser)throw new r(`No parser could be inferred for file: ${n.filepath}`)}else(t.logger||console).warn("No parser and no filepath given, using 'babel' the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred."),n.parser="babel";let c=a(i.normalizeApiOptions(n,[l.find((e=>"parser"===e.name))],{passThrough:!0,logger:!1}));n.astFormat=c.astFormat,n.locEnd=c.locEnd,n.locStart=c.locStart;let d=function(e){let{astFormat:t}=e;if(!t)throw new Error("getPlugin() requires astFormat to be set");let n=e.plugins.find((e=>e.printers&&e.printers[t]));if(!n)throw new Error(`Couldn't find plugin for AST format "${t}"`);return n}(n);n.printer=d.printers[n.astFormat];let D=Object.fromEntries(l.filter((e=>e.pluginDefaults&&void 0!==e.pluginDefaults[d.name])).map((e=>[e.name,e.pluginDefaults[d.name]]))),f=Object.assign(Object.assign({},p),D);for(let[e,t]of Object.entries(f))(null===n[e]||void 0===n[e])&&(n[e]=t);return"json"===n.parser&&(n.trailingComma="none"),i.normalizeApiOptions(n,l,Object.assign({passThrough:Object.keys(s)},t))},hiddenDefaults:s,inferParser:o}}}),qt=E({"src/main/massage-ast.js"(e,t){v(),t.exports=function e(t,n,r){if(Array.isArray(t))return t.map((t=>e(t,n,r))).filter(Boolean);if(!t||"object"!=typeof t)return t;let u,i=n.printer.massageAstNode;u=i&&i.ignoredProperties?i.ignoredProperties:new Set;let a={};for(let[r,i]of Object.entries(t))!u.has(r)&&"function"!=typeof i&&(a[r]=e(i,n,t));if(i){let e=i(t,a,r);if(null===e)return;if(e)return e}return a}}}),Ut=E({"scripts/build/shims/assert.cjs"(e,t){v();var n=()=>{};n.ok=n,n.strictEqual=n,t.exports=n}}),Jt=E({"src/main/comments.js"(e,t){v();var n=Ut(),{builders:{line:r,hardline:u,breakParent:i,indent:a,lineSuffix:s,join:o,cursor:l}}=U(),{hasNewline:p,skipNewline:c,skipSpaces:d,isPreviousLineEmpty:D,addLeadingComment:f,addDanglingComment:m,addTrailingComment:g}=De(),y=new WeakMap;function h(e,t,n){if(!e)return;let{printer:r,locStart:u,locEnd:i}=t;if(n){if(r.canAttachComment&&r.canAttachComment(e)){let t;for(t=n.length-1;t>=0&&!(u(n[t])<=u(e)&&i(n[t])<=i(e));--t);return void n.splice(t+1,0,e)}}else if(y.has(e))return y.get(e);let a=r.getCommentChildNodes&&r.getCommentChildNodes(e,t)||"object"==typeof e&&Object.entries(e).filter((e=>{let[t]=e;return"enclosingNode"!==t&&"precedingNode"!==t&&"followingNode"!==t&&"tokens"!==t&&"comments"!==t&&"parent"!==t})).map((e=>{let[,t]=e;return t}));if(a){n||(n=[],y.set(e,n));for(let e of a)h(e,t,n);return n}}function E(e,t,n,r){let u,i,{locStart:a,locEnd:s}=n,o=a(t),l=s(t),p=h(e,n),c=0,d=p.length;for(;c<d;){let e=c+d>>1,r=p[e],D=a(r),f=s(r);if(D<=o&&l<=f)return E(r,t,n,r);if(f<=o)u=r,c=e+1;else{if(!(l<=D))throw new Error("Comment location overlaps with node location");i=r,d=e}}if(r&&"TemplateLiteral"===r.type){let{quasis:e}=r,a=T(e,t,n);u&&T(e,u,n)!==a&&(u=null),i&&T(e,i,n)!==a&&(i=null)}return{enclosingNode:r,precedingNode:u,followingNode:i}}var C=()=>!1;var A=e=>!/[\S\n\u2028\u2029]/.test(e);function F(e,t,n,r){let{comment:u,precedingNode:i}=n[r],{locStart:a,locEnd:s}=t,o=a(u);if(i)for(let t=r-1;t>=0;t--){let{comment:r,precedingNode:u}=n[t];if(u!==i||!A(e.slice(s(r),o)))break;o=a(r)}return p(e,o,{backwards:!0})}function x(e,t,n,r){let{comment:u,followingNode:i}=n[r],{locStart:a,locEnd:s}=t,o=s(u);if(i)for(let t=r+1;t<n.length;t++){let{comment:r,followingNode:u}=n[t];if(u!==i||!A(e.slice(o,a(r))))break;o=s(r)}return p(e,o)}function b(e,t,r){let u=e.length;if(0===u)return;let i,{precedingNode:a,followingNode:s,enclosingNode:o}=e[0],l=r.printer.getGapRegex&&r.printer.getGapRegex(o)||/^[\s(]*$/,p=r.locStart(s);for(i=u;i>0;--i){let{comment:u,precedingNode:o,followingNode:c}=e[i-1];n.strictEqual(o,a),n.strictEqual(c,s);let d=t.slice(r.locEnd(u),p);if(!l.test(d))break;p=r.locStart(u)}for(let[t,{comment:n}]of e.entries())t<i?g(a,n):f(s,n);for(let e of[a,s])e.comments&&e.comments.length>1&&e.comments.sort(((e,t)=>r.locStart(e)-r.locStart(t)));e.length=0}function S(e,t){return e.getValue().printed=!0,t.printer.printComment(e,t)}function T(e,t,n){let r=n.locStart(t)-1;for(let t=1;t<e.length;++t)if(r<n.locStart(e[t]))return t-1;return 0}function B(e,t,n){let a=e.getValue();if(!a)return{};let o=a.comments||[];n&&(o=o.filter((e=>!n.has(e))));let f=a===t.cursorNode;if(0===o.length){let e=f?l:"";return{leading:e,trailing:e}}let m=[],g=[];return e.each((()=>{let a=e.getValue();if(n&&n.has(a))return;let{leading:o,trailing:l}=a;o?m.push(function(e,t){let n=e.getValue(),i=[S(e,t)],{printer:a,originalText:s,locStart:o,locEnd:l}=t;if(a.isBlockComment&&a.isBlockComment(n)){let e=p(s,l(n))?p(s,o(n),{backwards:!0})?u:r:" ";i.push(e)}else i.push(u);let D=c(s,d(s,l(n)));return!1!==D&&p(s,D)&&i.push(u),i}(e,t)):l&&g.push(function(e,t){let n=e.getValue(),r=S(e,t),{printer:a,originalText:o,locStart:l}=t,c=a.isBlockComment&&a.isBlockComment(n);if(p(o,l(n),{backwards:!0})){let e=D(o,n,l);return s([u,e?u:"",r])}let d=[" ",r];return c||(d=[s(d),i]),d}(e,t))}),"comments"),f&&(m.unshift(l),g.push(l)),{leading:m,trailing:g}}t.exports={attach:function(e,t,n,r){if(!Array.isArray(e))return;let u=[],{locStart:i,locEnd:a,printer:{handleComments:s={}}}=r,{avoidAstMutation:o,ownLine:l=C,endOfLine:p=C,remaining:c=C}=s,d=e.map(((u,i)=>Object.assign(Object.assign({},E(t,u,r)),{},{comment:u,text:n,options:r,ast:t,isLastComment:e.length-1===i})));for(let[e,t]of d.entries()){let n,{comment:r,precedingNode:s,enclosingNode:D,followingNode:y,text:h,options:E,ast:C,isLastComment:A}=t;if("json"===E.parser||"json5"===E.parser||"__js_expression"===E.parser||"__vue_expression"===E.parser||"__vue_ts_expression"===E.parser){if(i(r)-i(C)<=0){f(C,r);continue}if(a(r)-a(C)>=0){g(C,r);continue}}if(o?n=[t]:(r.enclosingNode=D,r.precedingNode=s,r.followingNode=y,n=[r,h,E,C,A]),F(h,E,d,e))r.placement="ownLine",l(...n)||(y?f(y,r):s?g(s,r):m(D||C,r));else if(x(h,E,d,e))r.placement="endOfLine",p(...n)||(s?g(s,r):y?f(y,r):m(D||C,r));else if(r.placement="remaining",!c(...n))if(s&&y){let e=u.length;e>0&&u[e-1].followingNode!==y&&b(u,h,E),u.push(t)}else s?g(s,r):y?f(y,r):m(D||C,r)}if(b(u,n,r),!o)for(let t of e)delete t.precedingNode,delete t.enclosingNode,delete t.followingNode},printComments:function(e,t,n,r){let{leading:u,trailing:i}=B(e,n,r);return u||i?[u,t,i]:t},printCommentsSeparately:B,printDanglingComments:function(e,t,n,r){let i=[],s=e.getValue();return s&&s.comments&&(e.each((()=>{let n=e.getValue();!n.leading&&!n.trailing&&(!r||r(n))&&i.push(S(e,t))}),"comments"),0!==i.length)?n?o(u,i):a([u,o(u,i)]):""},getSortedChildNodes:h,ensureAllCommentsPrinted:function(e){if(e)for(let t of e){if(!t.printed)throw new Error('Comment "'+t.value.trim()+'" was not printed. Please report this error!');delete t.printed}}}}}),Ht=E({"src/common/ast-path.js"(e,t){v();var n=w();function r(e,t){let n=u(e.stack,t);return-1===n?null:e.stack[n]}function u(e,t){for(let n=e.length-1;n>=0;n-=2){let r=e[n];if(r&&!Array.isArray(r)&&--t<0)return n}return-1}t.exports=class{constructor(e){this.stack=[e]}getName(){let{stack:e}=this,{length:t}=e;return t>1?e[t-2]:null}getValue(){return n(this.stack)}getNode(){return r(this,arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)}getParentNode(){return r(this,(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)+1)}call(e){let{stack:t}=this,{length:r}=t,u=n(t);for(var i=arguments.length,a=new Array(i>1?i-1:0),s=1;s<i;s++)a[s-1]=arguments[s];for(let e of a)u=u[e],t.push(e,u);let o=e(this);return t.length=r,o}callParent(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=u(this.stack,t+1),r=this.stack.splice(n+1),i=e(this);return this.stack.push(...r),i}each(e){let{stack:t}=this,{length:r}=t,u=n(t);for(var i=arguments.length,a=new Array(i>1?i-1:0),s=1;s<i;s++)a[s-1]=arguments[s];for(let e of a)u=u[e],t.push(e,u);for(let n=0;n<u.length;++n)t.push(n,u[n]),e(this,n,u),t.length-=2;t.length=r}map(e){let t=[];for(var n=arguments.length,r=new Array(n>1?n-1:0),u=1;u<n;u++)r[u-1]=arguments[u];return this.each(((n,r,u)=>{t[r]=e(n,r,u)}),...r),t}try(e){let{stack:t}=this,n=[...t];try{return e()}finally{t.length=0,t.push(...n)}}match(){let e=this.stack.length-1,t=null,n=this.stack[e--];for(var r=arguments.length,u=new Array(r),i=0;i<r;i++)u[i]=arguments[i];for(let r of u){if(void 0===n)return!1;let u=null;if("number"==typeof t&&(u=t,t=this.stack[e--],n=this.stack[e--]),r&&!r(n,t,u))return!1;t=this.stack[e--],n=this.stack[e--]}return!0}findAncestor(e){let t=this.stack.length-1,n=null,r=this.stack[t--];for(;r;){let u=null;if("number"==typeof n&&(u=n,n=this.stack[t--],r=this.stack[t--]),null!==n&&e(r,n,u))return r;n=this.stack[t--],r=this.stack[t--]}}}}}),Gt=E({"src/main/multiparser.js"(e,t){v();var{utils:{stripTrailingHardline:n}}=U(),{normalize:r}=Wt(),u=Jt();t.exports={printSubtree:function(e,t,i,a){if(i.printer.embed&&"auto"===i.embeddedLanguageFormatting)return i.printer.embed(e,t,((e,t,s)=>function(e,t,i,a){let{stripTrailingHardline:s=!1}=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},o=r(Object.assign(Object.assign(Object.assign({},i),t),{},{parentParser:i.parser,originalText:e}),{passThrough:!0}),l=Vt().parse(e,o),{ast:p}=l;e=l.text;let c=p.comments;delete p.comments,u.attach(c,p,e,o),o[Symbol.for("comments")]=c||[],o[Symbol.for("tokens")]=p.tokens||[];let d=a(p,o);return u.ensureAllCommentsPrinted(c),s?"string"==typeof d?d.replace(/(?:\r?\n)*$/,""):n(d):d}(e,t,i,a,s)),i)}}}}),zt=E({"src/main/ast-to-doc.js"(e,t){v();var n=Ht(),{builders:{hardline:r,addAlignmentToDoc:u},utils:{propagateBreaks:i}}=U(),{printComments:a}=Jt(),s=Gt();function o(e,t){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,{printer:p}=t;p.preprocess&&(e=p.preprocess(e,t));let c=new Map,d=new n(e),D=f();return l>0&&(D=u([r,D],l,t.tabWidth)),i(D),D;function f(e,t){return void 0===e||e===d?m(t):Array.isArray(e)?d.call((()=>m(t)),...e):d.call((()=>m(t)),e)}function m(e){let n=d.getValue(),r=n&&"object"==typeof n&&void 0===e;if(r&&c.has(n))return c.get(n);let u=function(e,t,n,r){let u,i,l=e.getValue(),{printer:p}=t;if(p.hasPrettierIgnore&&p.hasPrettierIgnore(e))({doc:u,printedComments:i}=function(e,t){let{originalText:n,[Symbol.for("comments")]:r,locStart:u,locEnd:i}=t,a=u(e),s=i(e),o=new Set;for(let e of r)u(e)>=a&&i(e)<=s&&(e.printed=!0,o.add(e));return{doc:n.slice(a,s),printedComments:o}}(l,t));else{if(l)try{u=s.printSubtree(e,n,t,o)}catch(e){if(globalThis.PRETTIER_DEBUG)throw e}u||(u=p.print(e,t,n,r))}return(!p.willPrintOwnComments||!p.willPrintOwnComments(e,t))&&(u=a(e,u,t,i)),u}(d,t,f,e);return r&&c.set(n,u),u}}t.exports=o}}),Xt=E({"src/main/range-util.js"(e,t){v();var n=Ut(),r=Jt();function u(e){let t=e.length-1;for(;;){let n=e[t];if(!n||"Program"!==n.type&&"File"!==n.type)break;t--}return e.slice(0,t+1)}function i(e,t,n,u){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[],s=arguments.length>5?arguments[5]:void 0,{locStart:o,locEnd:l}=n,p=o(e),c=l(e);if(!(t>c||t<p||"rangeEnd"===s&&t===p||"rangeStart"===s&&t===c)){for(let o of r.getSortedChildNodes(e,n)){let r=i(o,t,n,u,[e,...a],s);if(r)return r}if(!u||u(e,a[0]))return{node:e,parentNodes:a}}}var a=new Set(["ObjectExpression","ArrayExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","UnaryExpression","TemplateLiteral"]),s=new Set(["OperationDefinition","FragmentDefinition","VariableDefinition","TypeExtensionDefinition","ObjectTypeDefinition","FieldDefinition","DirectiveDefinition","EnumTypeDefinition","EnumValueDefinition","InputValueDefinition","InputObjectTypeDefinition","SchemaDefinition","OperationTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","ScalarTypeDefinition"]);function o(e,t,n){if(!t)return!1;switch(e.parser){case"flow":case"babel":case"babel-flow":case"babel-ts":case"typescript":case"acorn":case"espree":case"meriyah":case"__babel_estree":return function(e,t){return"DeclareExportDeclaration"!==t&&"TypeParameterDeclaration"!==e&&("Directive"===e||"TypeAlias"===e||"TSExportAssignment"===e||e.startsWith("Declare")||e.startsWith("TSDeclare")||e.endsWith("Statement")||e.endsWith("Declaration"))}(t.type,n&&n.type);case"json":case"json5":case"json-stringify":return a.has(t.type);case"graphql":return s.has(t.kind);case"vue":return"root"!==t.tag}return!1}t.exports={calculateRange:function(e,t,r){let{rangeStart:s,rangeEnd:l,locStart:p,locEnd:c}=t;n.ok(l>s);let d=e.slice(s,l).search(/\S/),D=-1===d;if(!D)for(s+=d;l>s&&!/\S/.test(e[l-1]);--l);let f,m,g=i(r,s,t,((e,n)=>o(t,e,n)),[],"rangeStart"),y=D?g:i(r,l,t,(e=>o(t,e)),[],"rangeEnd");if(!g||!y)return{rangeStart:0,rangeEnd:0};if((e=>{let{parser:t}=e;return"json"===t||"json5"===t||"json-stringify"===t})(t)){let e=function(e,t){let n=[e.node,...e.parentNodes],r=new Set([t.node,...t.parentNodes]);return n.find((e=>a.has(e.type)&&r.has(e)))}(g,y);f=e,m=e}else({startNode:f,endNode:m}=function(e,t,n){let{locStart:r,locEnd:i}=n,a=e.node,s=t.node;if(a===s)return{startNode:a,endNode:s};let o=r(e.node);for(let e of u(t.parentNodes)){if(!(r(e)>=o))break;s=e}let l=i(t.node);for(let t of u(e.parentNodes)){if(!(i(t)<=l))break;if(a=t,a===s)break}return{startNode:a,endNode:s}}(g,y,t));return{rangeStart:Math.min(p(f),p(m)),rangeEnd:Math.max(c(f),c(m))}},findNodeAtOffset:i}}}),Kt=E({"src/main/core.js"(e,t){v();var{diffArrays:n}=S(),{printer:{printDocToString:r},debug:{printDocToDebug:u}}=U(),{getAlignmentSize:i}=De(),{guessEndOfLine:a,convertEndOfLineToChars:s,countEndOfLineChars:o,normalizeEndOfLine:l}=B(),p=Wt().normalize,c=qt(),d=Jt(),D=Vt(),f=zt(),m=Xt(),g=Symbol("cursor");function y(e,t,n){let r=t.comments;return r&&(delete t.comments,d.attach(r,t,e,n)),n[Symbol.for("comments")]=r||[],n[Symbol.for("tokens")]=t.tokens||[],n.originalText=e,r}function h(e,t){let u=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(!e||0===e.trim().length)return{formatted:"",cursorOffset:-1,comments:[]};let{ast:i,text:a}=D.parse(e,t);if(t.cursorOffset>=0){let e=m.findNodeAtOffset(i,t.cursorOffset,t);e&&e.node&&(t.cursorNode=e.node)}let o=y(a,i,t),l=f(i,t,u),p=r(l,t);if(d.ensureAllCommentsPrinted(o),u>0){let e=p.formatted.trim();void 0!==p.cursorNodeStart&&(p.cursorNodeStart-=p.formatted.indexOf(e)),p.formatted=e+s(t.endOfLine)}if(t.cursorOffset>=0){let e,r,u,i,s;if(t.cursorNode&&p.cursorNodeText?(e=t.locStart(t.cursorNode),r=a.slice(e,t.locEnd(t.cursorNode)),u=t.cursorOffset-e,i=p.cursorNodeStart,s=p.cursorNodeText):(e=0,r=a,u=t.cursorOffset,i=0,s=p.formatted),r===s)return{formatted:p.formatted,cursorOffset:i+u,comments:o};let l=[...r];l.splice(u,0,g);let c=[...s],d=n(l,c),D=i;for(let e of d)if(e.removed){if(e.value.includes(g))break}else D+=e.count;return{formatted:p.formatted,cursorOffset:D,comments:o}}return{formatted:p.formatted,cursorOffset:-1,comments:o}}function E(e,t,n){return"number"!=typeof t||Number.isNaN(t)||t<0||t>e.length?n:t}function C(e,t){let{cursorOffset:n,rangeStart:r,rangeEnd:u}=t;return n=E(e,n,-1),r=E(e,r,0),u=E(e,u,e.length),Object.assign(Object.assign({},t),{},{cursorOffset:n,rangeStart:r,rangeEnd:u})}function A(e,t){let{cursorOffset:n,rangeStart:r,rangeEnd:u,endOfLine:i}=C(e,t),s="\ufeff"===e.charAt(0);if(s&&(e=e.slice(1),n--,r--,u--),"auto"===i&&(i=a(e)),e.includes("\r")){let t=t=>o(e.slice(0,Math.max(t,0)),"\r\n");n-=t(n),r-=t(r),u-=t(u),e=l(e)}return{hasBOM:s,text:e,options:C(e,Object.assign(Object.assign({},t),{},{cursorOffset:n,rangeStart:r,rangeEnd:u,endOfLine:i}))}}function F(e,t){let n=D.resolveParser(t);return!n.hasPragma||n.hasPragma(e)}function x(e,t){let n,{hasBOM:r,text:u,options:a}=A(e,p(t));return a.rangeStart>=a.rangeEnd&&""!==u||a.requirePragma&&!F(u,a)?{formatted:e,cursorOffset:t.cursorOffset,comments:[]}:(a.rangeStart>0||a.rangeEnd<u.length?n=function(e,t){let{ast:n,text:r}=D.parse(e,t),{rangeStart:u,rangeEnd:a}=m.calculateRange(r,t,n),l=r.slice(u,a),p=Math.min(u,r.lastIndexOf("\n",u)+1),c=r.slice(p,u).match(/^\s*/)[0],d=i(c,t.tabWidth),f=h(l,Object.assign(Object.assign({},t),{},{rangeStart:0,rangeEnd:Number.POSITIVE_INFINITY,cursorOffset:t.cursorOffset>u&&t.cursorOffset<=a?t.cursorOffset-u:-1,endOfLine:"lf"}),d),g=f.formatted.trimEnd(),{cursorOffset:y}=t;y>a?y+=g.length-l.length:f.cursorOffset>=0&&(y=f.cursorOffset+u);let E=r.slice(0,u)+g+r.slice(a);if("lf"!==t.endOfLine){let e=s(t.endOfLine);y>=0&&"\r\n"===e&&(y+=o(E.slice(0,y),"\n")),E=E.replace(/\n/g,e)}return{formatted:E,cursorOffset:y,comments:f.comments}}(u,a):(!a.requirePragma&&a.insertPragma&&a.printer.insertPragma&&!F(u,a)&&(u=a.printer.insertPragma(u)),n=h(u,a)),r&&(n.formatted="\ufeff"+n.formatted,n.cursorOffset>=0&&n.cursorOffset++),n)}t.exports={formatWithCursor:x,parse(e,t,n){let{text:r,options:u}=A(e,p(t)),i=D.parse(r,u);return n&&(i.ast=c(i.ast,u)),i},formatAST(e,t){t=p(t);let n=f(e,t);return r(n,t)},formatDoc:(e,t)=>x(u(e),Object.assign(Object.assign({},t),{},{parser:"__js_expression"})).formatted,printToDoc(e,t){t=p(t);let{ast:n,text:r}=D.parse(e,t);return y(r,n,t),f(n,t)},printDocToString:(e,t)=>r(e,p(t))}}}),Yt=E({"src/common/util-shared.js"(e,t){v();var{getMaxContinuousCount:n,getStringWidth:r,getAlignmentSize:u,getIndentSize:i,skip:a,skipWhitespace:s,skipSpaces:o,skipNewline:l,skipToLineEnd:p,skipEverythingButNewLine:c,skipInlineComment:d,skipTrailingComment:D,hasNewline:f,hasNewlineInRange:m,hasSpaces:g,isNextLineEmpty:y,isNextLineEmptyAfterIndex:h,isPreviousLineEmpty:E,getNextNonSpaceNonCommentCharacterIndex:C,makeString:A,addLeadingComment:F,addDanglingComment:x,addTrailingComment:b}=De();t.exports={getMaxContinuousCount:n,getStringWidth:r,getAlignmentSize:u,getIndentSize:i,skip:a,skipWhitespace:s,skipSpaces:o,skipNewline:l,skipToLineEnd:p,skipEverythingButNewLine:c,skipInlineComment:d,skipTrailingComment:D,hasNewline:f,hasNewlineInRange:m,hasSpaces:g,isNextLineEmpty:y,isNextLineEmptyAfterIndex:h,isPreviousLineEmpty:E,getNextNonSpaceNonCommentCharacterIndex:C,makeString:A,addLeadingComment:F,addDanglingComment:x,addTrailingComment:b}}}),Qt=E({"src/utils/create-language.js"(e,t){v(),t.exports=function(e,t){let{languageId:n}=e,r=p(e,l);return Object.assign(Object.assign({linguistLanguageId:n},r),t(e))}}}),Zt=E({"node_modules/esutils/lib/ast.js"(e,t){v(),function(){function e(e){if(null==e)return!1;switch(e.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function n(e){switch(e.type){case"IfStatement":return null!=e.alternate?e.alternate:e.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return e.body}return null}t.exports={isExpression:function(e){if(null==e)return!1;switch(e.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1},isStatement:e,isIterationStatement:function(e){if(null==e)return!1;switch(e.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1},isSourceElement:function(t){return e(t)||null!=t&&"FunctionDeclaration"===t.type},isProblematicIfStatement:function(e){var t;if("IfStatement"!==e.type||null==e.alternate)return!1;t=e.consequent;do{if("IfStatement"===t.type&&null==t.alternate)return!0;t=n(t)}while(t);return!1},trailingStatement:n}}()}}),en=E({"node_modules/esutils/lib/code.js"(e,t){v(),function(){var e,n,r,u,i,a;function s(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(Math.floor((e-65536)/1024)+55296)+String.fromCharCode((e-65536)%1024+56320)}for(n={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},e={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},r=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],u=new Array(128),a=0;a<128;++a)u[a]=a>=97&&a<=122||a>=65&&a<=90||36===a||95===a;for(i=new Array(128),a=0;a<128;++a)i[a]=a>=97&&a<=122||a>=65&&a<=90||a>=48&&a<=57||36===a||95===a;t.exports={isDecimalDigit:function(e){return 48<=e&&e<=57},isHexDigit:function(e){return 48<=e&&e<=57||97<=e&&e<=102||65<=e&&e<=70},isOctalDigit:function(e){return e>=48&&e<=55},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&r.indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStartES5:function(e){return e<128?u[e]:n.NonAsciiIdentifierStart.test(s(e))},isIdentifierPartES5:function(e){return e<128?i[e]:n.NonAsciiIdentifierPart.test(s(e))},isIdentifierStartES6:function(t){return t<128?u[t]:e.NonAsciiIdentifierStart.test(s(t))},isIdentifierPartES6:function(t){return t<128?i[t]:e.NonAsciiIdentifierPart.test(s(t))}}}()}}),tn=E({"node_modules/esutils/lib/keyword.js"(e,t){v(),function(){var e=en();function n(e,t){return!(!t&&"yield"===e)&&r(e,t)}function r(e,t){if(t&&function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function u(e,t){return"null"===e||"true"===e||"false"===e||n(e,t)}function i(e,t){return"null"===e||"true"===e||"false"===e||r(e,t)}function a(t){var n,r,u;if(0===t.length||(u=t.charCodeAt(0),!e.isIdentifierStartES5(u)))return!1;for(n=1,r=t.length;n<r;++n)if(u=t.charCodeAt(n),!e.isIdentifierPartES5(u))return!1;return!0}function s(e,t){return 1024*(e-55296)+(t-56320)+65536}function o(t){var n,r,u,i,a;if(0===t.length)return!1;for(a=e.isIdentifierStartES6,n=0,r=t.length;n<r;++n){if(55296<=(u=t.charCodeAt(n))&&u<=56319){if(++n>=r||!(56320<=(i=t.charCodeAt(n))&&i<=57343))return!1;u=s(u,i)}if(!a(u))return!1;a=e.isIdentifierPartES6}return!0}t.exports={isKeywordES5:n,isKeywordES6:r,isReservedWordES5:u,isReservedWordES6:i,isRestrictedWord:function(e){return"eval"===e||"arguments"===e},isIdentifierNameES5:a,isIdentifierNameES6:o,isIdentifierES5:function(e,t){return a(e)&&!u(e,t)},isIdentifierES6:function(e,t){return o(e)&&!i(e,t)}}}()}}),nn=E({"node_modules/esutils/lib/utils.js"(e){v(),e.ast=Zt(),e.code=en(),e.keyword=tn()}}),rn=E({"src/language-js/utils/is-block-comment.js"(e,t){v();var n=new Set(["Block","CommentBlock","MultiLine"]);t.exports=e=>n.has(null==e?void 0:e.type)}}),un=E({"src/language-js/utils/is-node-matches.js"(e,t){v(),t.exports=function(e,t){return t.some((t=>function(e,t){let n=t.split(".");for(let t=n.length-1;t>=0;t--){let r=n[t];if(0===t)return"Identifier"===e.type&&e.name===r;if("MemberExpression"!==e.type||e.optional||e.computed||"Identifier"!==e.property.type||e.property.name!==r)return!1;e=e.object}}(e,t)))}}}),an=E({"src/language-js/utils/index.js"(e,t){v();var n=nn().keyword.isIdentifierNameES5,{getLast:r,hasNewline:u,skipWhitespace:i,isNonEmptyArray:a,isNextLineEmptyAfterIndex:s,getStringWidth:o}=De(),{locStart:l,locEnd:p,hasSameLocStart:c}=_t(),d=rn(),D=un(),f="(?:(?=.)\\s)",m=new RegExp(`^${f}*:`),g=new RegExp(`^${f}*::`);function y(e){return e=new Set(e),t=>e.has(null==t?void 0:t.type)}var h=y(["Line","CommentLine","SingleLine","HashbangComment","HTMLOpen","HTMLClose"]),E=y(["ExportDefaultDeclaration","ExportDefaultSpecifier","DeclareExportDeclaration","ExportNamedDeclaration","ExportAllDeclaration"]);var C=y(["BooleanLiteral","DirectiveLiteral","Literal","NullLiteral","NumericLiteral","BigIntLiteral","DecimalLiteral","RegExpLiteral","StringLiteral","TemplateLiteral","TSTypeLiteral","JSXText"]);function A(e){return"NumericLiteral"===e.type||"Literal"===e.type&&"number"==typeof e.value}function F(e){return"StringLiteral"===e.type||"Literal"===e.type&&"string"==typeof e.value}var x=y(["ObjectTypeAnnotation","TSTypeLiteral","TSMappedType"]),b=y(["FunctionExpression","ArrowFunctionExpression"]);function S(e){return P(e)&&"Identifier"===e.callee.type&&["async","inject","fakeAsync","waitForAsync"].includes(e.callee.name)}var T=y(["JSXElement","JSXFragment"]);function B(e){return"get"===e.kind||"set"===e.kind}function w(e){return B(e)||c(e,e.value)}var N=y(["BinaryExpression","LogicalExpression","NGPipeExpression"]);var k=new Set(["AnyTypeAnnotation","TSAnyKeyword","NullLiteralTypeAnnotation","TSNullKeyword","ThisTypeAnnotation","TSThisType","NumberTypeAnnotation","TSNumberKeyword","VoidTypeAnnotation","TSVoidKeyword","BooleanTypeAnnotation","TSBooleanKeyword","BigIntTypeAnnotation","TSBigIntKeyword","SymbolTypeAnnotation","TSSymbolKeyword","StringTypeAnnotation","TSStringKeyword","BooleanLiteralTypeAnnotation","StringLiteralTypeAnnotation","BigIntLiteralTypeAnnotation","NumberLiteralTypeAnnotation","TSLiteralType","TSTemplateLiteralType","EmptyTypeAnnotation","MixedTypeAnnotation","TSNeverKeyword","TSObjectKeyword","TSUndefinedKeyword","TSUnknownKeyword"]);var j=["it","it.only","it.skip","describe","describe.only","describe.skip","test","test.only","test.skip","test.step","test.describe","test.describe.only","test.describe.parallel","test.describe.parallel.only","test.describe.serial","test.describe.serial.only","skip","xit","xdescribe","xtest","fit","fdescribe","ftest"];var P=y(["CallExpression","OptionalCallExpression"]),I=y(["MemberExpression","OptionalMemberExpression"]);function O(e){return/^(?:\d+|\d+\.\d+)$/.test(e)}function L(e){return e.quasis.some((e=>e.value.raw.includes("\n")))}function _(e){var t,n;return null!==(t=null===(n=e.extra)||void 0===n?void 0:n.raw)&&void 0!==t?t:e.raw}var M={"==":!0,"!=":!0,"===":!0,"!==":!0},$={"*":!0,"/":!0,"%":!0},R={">>":!0,">>>":!0,"<<":!0};var V=new Map([["|>"],["??"],["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].flatMap(((e,t)=>e.map((e=>[e,t])))));function W(e){return V.get(e)}var q=new WeakMap;function U(e){if(q.has(e))return q.get(e);let t=[];return e.this&&t.push(e.this),Array.isArray(e.parameters)?t.push(...e.parameters):Array.isArray(e.params)&&t.push(...e.params),e.rest&&t.push(e.rest),q.set(e,t),t}var J=new WeakMap;function H(e){if(J.has(e))return J.get(e);let t=e.arguments;return"ImportExpression"===e.type&&(t=[e.source],e.attributes&&t.push(e.attributes)),J.set(e,t),t}function G(e){return"prettier-ignore"===e.value.trim()&&!e.unignore}function z(e){return e&&(e.prettierIgnore||Y(e,X.PrettierIgnore))}var X={Leading:2,Trailing:4,Dangling:8,Block:16,Line:32,PrettierIgnore:64,First:128,Last:256},K=(e,t)=>{if("function"==typeof e&&(t=e,e=0),e||t)return(n,r,u)=>!(e&X.Leading&&!n.leading||e&X.Trailing&&!n.trailing||e&X.Dangling&&(n.leading||n.trailing)||e&X.Block&&!d(n)||e&X.Line&&!h(n)||e&X.First&&0!==r||e&X.Last&&r!==u.length-1||e&X.PrettierIgnore&&!G(n)||t&&!t(n))};function Y(e,t,n){if(!a(null==e?void 0:e.comments))return!1;let r=K(t,n);return!r||e.comments.some(r)}function Q(e,t,n){if(!Array.isArray(null==e?void 0:e.comments))return[];let r=K(t,n);return r?e.comments.filter(r):e.comments}function Z(e){return P(e)||"NewExpression"===e.type||"ImportExpression"===e.type}var ee=Symbol("ifWithoutBlockAndSameLineComment");function te(e){return"TSAsExpression"===e.type||"TSSatisfiesExpression"===e.type}t.exports={getFunctionParameters:U,iterateFunctionParametersPath:function(e,t){let n=e.getValue(),r=0,u=e=>t(e,r++);n.this&&e.call(u,"this"),Array.isArray(n.parameters)?e.each(u,"parameters"):Array.isArray(n.params)&&e.each(u,"params"),n.rest&&e.call(u,"rest")},getCallArguments:H,iterateCallArgumentsPath:function(e,t){let n=e.getValue();"ImportExpression"===n.type?(e.call((e=>t(e,0)),"source"),n.attributes&&e.call((e=>t(e,1)),"attributes")):e.each(t,"arguments")},hasRestParameter:function(e){var t;if(e.rest)return!0;let n=U(e);return"RestElement"===(null===(t=r(n))||void 0===t?void 0:t.type)},getLeftSide:function(e){var t,n,r,u,i,a;return e.expressions?e.expressions[0]:null!==(t=null!==(n=null!==(r=null!==(u=null!==(i=null!==(a=e.left)&&void 0!==a?a:e.test)&&void 0!==i?i:e.callee)&&void 0!==u?u:e.object)&&void 0!==r?r:e.tag)&&void 0!==n?n:e.argument)&&void 0!==t?t:e.expression},getLeftSidePathName:function(e,t){if(t.expressions)return["expressions",0];if(t.left)return["left"];if(t.test)return["test"];if(t.object)return["object"];if(t.callee)return["callee"];if(t.tag)return["tag"];if(t.argument)return["argument"];if(t.expression)return["expression"];throw new Error("Unexpected node has no left side.")},getParentExportDeclaration:function(e){let t=e.getParentNode();return"declaration"===e.getName()&&E(t)?t:null},getTypeScriptMappedTypeModifier:function(e,t){return"+"===e||"-"===e?e+t:t},hasFlowAnnotationComment:function(e){let t=null==e?void 0:e[0];return d(t)&&g.test(t.value)},hasFlowShorthandAnnotationComment:function(e){var t,n;return(null===(t=e.extra)||void 0===t?void 0:t.parenthesized)&&d(null===(n=e.trailingComments)||void 0===n?void 0:n[0])&&m.test(e.trailingComments[0].value)},hasLeadingOwnLineComment:function(e,t){return T(t)?z(t):Y(t,X.Leading,(t=>u(e,p(t))))},hasNakedLeftSide:function(e){return"AssignmentExpression"===e.type||"BinaryExpression"===e.type||"LogicalExpression"===e.type||"NGPipeExpression"===e.type||"ConditionalExpression"===e.type||P(e)||I(e)||"SequenceExpression"===e.type||"TaggedTemplateExpression"===e.type||"BindExpression"===e.type||"UpdateExpression"===e.type&&!e.prefix||te(e)||"TSNonNullExpression"===e.type},hasNode:function e(t,n){if(!t||"object"!=typeof t)return!1;if(Array.isArray(t))return t.some((t=>e(t,n)));let r=n(t);return"boolean"==typeof r?r:Object.values(t).some((t=>e(t,n)))},hasIgnoreComment:function(e){return z(e.getValue())},hasNodeIgnoreComment:z,identity:function(e){return e},isBinaryish:N,isCallLikeExpression:Z,isEnabledHackPipeline:function(e){return Boolean(e.__isUsingHackPipeline)},isLineComment:h,isPrettierIgnoreComment:G,isCallExpression:P,isMemberExpression:I,isExportDeclaration:E,isFlowAnnotationComment:function(e,t){let n=l(t),r=i(e,p(t));return!1!==r&&"/*"===e.slice(n,n+2)&&"*/"===e.slice(r,r+2)},isFunctionCompositionArgs:function(e){if(e.length<=1)return!1;let t=0;for(let n of e)if(b(n)){if(t+=1,t>1)return!0}else if(P(n))for(let e of n.arguments)if(b(e))return!0;return!1},isFunctionNotation:w,isFunctionOrArrowExpression:b,isGetterOrSetter:B,isJestEachTemplateLiteral:function(e,t){let n=/^[fx]?(?:describe|it|test)$/;return"TaggedTemplateExpression"===t.type&&t.quasi===e&&"MemberExpression"===t.tag.type&&"Identifier"===t.tag.property.type&&"each"===t.tag.property.name&&("Identifier"===t.tag.object.type&&n.test(t.tag.object.name)||"MemberExpression"===t.tag.object.type&&"Identifier"===t.tag.object.property.type&&("only"===t.tag.object.property.name||"skip"===t.tag.object.property.name)&&"Identifier"===t.tag.object.object.type&&n.test(t.tag.object.object.name))},isJsxNode:T,isLiteral:C,isLongCurriedCallExpression:function(e){let t=e.getValue(),n=e.getParentNode();return P(t)&&P(n)&&n.callee===t&&t.arguments.length>n.arguments.length&&n.arguments.length>0},isSimpleCallArgument:function e(t,n){if(n>=2)return!1;let r=t=>e(t,n+1),u="Literal"===t.type&&"regex"in t&&t.regex.pattern||"RegExpLiteral"===t.type&&t.pattern;return!(u&&o(u)>5)&&("Literal"===t.type||"BigIntLiteral"===t.type||"DecimalLiteral"===t.type||"BooleanLiteral"===t.type||"NullLiteral"===t.type||"NumericLiteral"===t.type||"RegExpLiteral"===t.type||"StringLiteral"===t.type||"Identifier"===t.type||"ThisExpression"===t.type||"Super"===t.type||"PrivateName"===t.type||"PrivateIdentifier"===t.type||"ArgumentPlaceholder"===t.type||"Import"===t.type||("TemplateLiteral"===t.type?t.quasis.every((e=>!e.value.raw.includes("\n")))&&t.expressions.every(r):"ObjectExpression"===t.type?t.properties.every((e=>!e.computed&&(e.shorthand||e.value&&r(e.value)))):"ArrayExpression"===t.type?t.elements.every((e=>null===e||r(e))):Z(t)?("ImportExpression"===t.type||e(t.callee,n))&&H(t).every(r):I(t)?e(t.object,n)&&e(t.property,n):"UnaryExpression"===t.type&&{"!":!0,"-":!0,"+":!0,"~":!0}[t.operator]||"UpdateExpression"===t.type&&{"++":!0,"--":!0}[t.operator]?e(t.argument,n):"TSNonNullExpression"===t.type&&e(t.expression,n)))},isMemberish:function(e){return I(e)||"BindExpression"===e.type&&Boolean(e.object)},isNumericLiteral:A,isSignedNumericLiteral:function(e){return"UnaryExpression"===e.type&&("+"===e.operator||"-"===e.operator)&&A(e.argument)},isObjectProperty:function(e){return e&&("ObjectProperty"===e.type||"Property"===e.type&&!e.method&&"init"===e.kind)},isObjectType:x,isObjectTypePropertyAFunction:function(e){return!("ObjectTypeProperty"!==e.type&&"ObjectTypeInternalSlot"!==e.type||"FunctionTypeAnnotation"!==e.value.type||e.static||w(e))},isSimpleType:function(e){return!(!e||("GenericTypeAnnotation"!==e.type&&"TSTypeReference"!==e.type||e.typeParameters)&&!k.has(e.type))},isSimpleNumber:O,isSimpleTemplateLiteral:function(e){let t="expressions";"TSTemplateLiteralType"===e.type&&(t="types");let n=e[t];return 0!==n.length&&n.every((e=>{if(Y(e))return!1;if("Identifier"===e.type||"ThisExpression"===e.type)return!0;if(I(e)){let t=e;for(;I(t);)if("Identifier"!==t.property.type&&"Literal"!==t.property.type&&"StringLiteral"!==t.property.type&&"NumericLiteral"!==t.property.type||(t=t.object,Y(t)))return!1;return"Identifier"===t.type||"ThisExpression"===t.type}return!1}))},isStringLiteral:F,isStringPropSafeToUnquote:function(e,t){return"json"!==t.parser&&F(e.key)&&_(e.key).slice(1,-1)===e.key.value&&(n(e.key.value)&&!("babel-ts"===t.parser&&"ClassProperty"===e.type||"typescript"===t.parser&&"PropertyDefinition"===e.type)||O(e.key.value)&&String(Number(e.key.value))===e.key.value&&("babel"===t.parser||"acorn"===t.parser||"espree"===t.parser||"meriyah"===t.parser||"__babel_estree"===t.parser))},isTemplateOnItsOwnLine:function(e,t){return("TemplateLiteral"===e.type&&L(e)||"TaggedTemplateExpression"===e.type&&L(e.quasi))&&!u(t,l(e),{backwards:!0})},isTestCall:function e(t,n){if("CallExpression"!==t.type)return!1;if(1===t.arguments.length){if(S(t)&&n&&e(n))return b(t.arguments[0]);if(function(e){return"Identifier"===e.callee.type&&/^(?:before|after)(?:Each|All)$/.test(e.callee.name)&&1===e.arguments.length}(t))return S(t.arguments[0])}else if((2===t.arguments.length||3===t.arguments.length)&&("TemplateLiteral"===t.arguments[0].type||F(t.arguments[0]))&&function(e){return D(e,j)}(t.callee))return!(t.arguments[2]&&!A(t.arguments[2]))&&((2===t.arguments.length?b(t.arguments[1]):function(e){return"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&"BlockStatement"===e.body.type}(t.arguments[1])&&U(t.arguments[1]).length<=1)||S(t.arguments[1]));return!1},isTheOnlyJsxElementInMarkdown:function(e,t){if("markdown"!==e.parentParser&&"mdx"!==e.parentParser)return!1;let n=t.getNode();if(!n.expression||!T(n.expression))return!1;let r=t.getParentNode();return"Program"===r.type&&1===r.body.length},isTSXFile:function(e){return e.filepath&&/\.tsx$/i.test(e.filepath)},isTypeAnnotationAFunction:function(e){return!("TypeAnnotation"!==e.type&&"TSTypeAnnotation"!==e.type||"FunctionTypeAnnotation"!==e.typeAnnotation.type||e.static||c(e,e.typeAnnotation))},isNextLineEmpty:(e,t)=>{let{originalText:n}=t;return s(n,p(e))},needsHardlineAfterDanglingComment:function(e){if(!Y(e))return!1;let t=r(Q(e,X.Dangling));return t&&!d(t)},rawText:_,shouldPrintComma:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"es5";return"es5"===e.trailingComma&&"es5"===t||"all"===e.trailingComma&&("all"===t||"es5"===t)},isBitwiseOperator:function(e){return Boolean(R[e])||"|"===e||"^"===e||"&"===e},shouldFlatten:function(e,t){return!(W(t)!==W(e)||"**"===e||M[e]&&M[t]||"%"===t&&$[e]||"%"===e&&$[t]||t!==e&&$[t]&&$[e]||R[e]&&R[t])},startsWithNoLookaheadToken:function e(t,n){switch(t.type){case"BinaryExpression":case"LogicalExpression":case"AssignmentExpression":case"NGPipeExpression":return e(t.left,n);case"MemberExpression":case"OptionalMemberExpression":return e(t.object,n);case"TaggedTemplateExpression":return"FunctionExpression"!==t.tag.type&&e(t.tag,n);case"CallExpression":case"OptionalCallExpression":return"FunctionExpression"!==t.callee.type&&e(t.callee,n);case"ConditionalExpression":return e(t.test,n);case"UpdateExpression":return!t.prefix&&e(t.argument,n);case"BindExpression":return t.object&&e(t.object,n);case"SequenceExpression":return e(t.expressions[0],n);case"TSSatisfiesExpression":case"TSAsExpression":case"TSNonNullExpression":return e(t.expression,n);default:return n(t)}},getPrecedence:W,hasComment:Y,getComments:Q,CommentCheckFlags:X,markerForIfWithoutBlockAndSameLineComment:ee,isTSTypeExpression:te}}}),sn=E({"src/language-js/print/template-literal.js"(e,t){v();var n=w(),{getStringWidth:r,getIndentSize:u}=De(),{builders:{join:i,hardline:a,softline:s,group:o,indent:l,align:p,lineSuffixBoundary:c,addAlignmentToDoc:d},printer:{printDocToString:D},utils:{mapDoc:f}}=U(),{isBinaryish:m,isJestEachTemplateLiteral:g,isSimpleTemplateLiteral:y,hasComment:h,isMemberExpression:E,isTSTypeExpression:C}=an();function A(e){return e.replace(/([\\`]|\${)/g,"\\$1")}t.exports={printTemplateLiteral:function(e,t,f){let A=e.getValue();if("TemplateLiteral"===A.type&&g(A,e.getParentNode())){let u=function(e,t,u){let s=e.getNode(),o=s.quasis[0].value.raw.trim().split(/\s*\|\s*/);if(o.length>1||o.some((e=>e.length>0))){t.__inJestEach=!0;let p=e.map(u,"expressions");t.__inJestEach=!1;let d=[],f=p.map((e=>"${"+D(e,Object.assign(Object.assign({},t),{},{printWidth:Number.POSITIVE_INFINITY,endOfLine:"lf"})).formatted+"}")),m=[{hasLineBreak:!1,cells:[]}];for(let e=1;e<s.quasis.length;e++){let t=n(m),r=f[e-1];t.cells.push(r),r.includes("\n")&&(t.hasLineBreak=!0),s.quasis[e].value.raw.includes("\n")&&m.push({hasLineBreak:!1,cells:[]})}let g=Math.max(o.length,...m.map((e=>e.cells.length))),y=Array.from({length:g}).fill(0),h=[{cells:o},...m.filter((e=>e.cells.length>0))];for(let{cells:e}of h.filter((e=>!e.hasLineBreak)))for(let[t,n]of e.entries())y[t]=Math.max(y[t],r(n));return d.push(c,"`",l([a,i(a,h.map((e=>i(" | ",e.cells.map(((t,n)=>e.hasLineBreak?t:t+" ".repeat(y[n]-r(t))))))))]),a,"`"),d}}(e,f,t);if(u)return u}let F="expressions";"TSTemplateLiteralType"===A.type&&(F="types");let v=[],x=e.map(t,F),b=y(A);return b&&(x=x.map((e=>D(e,Object.assign(Object.assign({},f),{},{printWidth:Number.POSITIVE_INFINITY})).formatted))),v.push(c,"`"),e.each((e=>{let n=e.getName();if(v.push(t()),n<x.length){let{tabWidth:t}=f,r=e.getValue(),i=u(r.value.raw,t),a=x[n];if(!b){let e=A[F][n];(h(e)||E(e)||"ConditionalExpression"===e.type||"SequenceExpression"===e.type||C(e)||m(e))&&(a=[l([s,a]),s])}let D=0===i&&r.value.raw.endsWith("\n")?p(Number.NEGATIVE_INFINITY,a):d(a,i,t);v.push(o(["${",D,c,"}"]))}}),"quasis"),v.push("`"),v},printTemplateExpressions:function(e,t){return e.map((e=>function(e,t){let n=e.getValue(),r=t();return h(n)&&(r=o([l([s,r]),s])),["${",r,c,"}"]}(e,t)),"expressions")},escapeTemplateCharacters:function(e,t){return f(e,(e=>"string"==typeof e?t?e.replace(/(\\*)`/g,"$1$1\\`"):A(e):e))},uncookTemplateElementValue:A}}}),on=E({"src/language-js/embed/markdown.js"(e,t){v();var{builders:{indent:n,softline:r,literalline:u,dedentToRoot:i}}=U(),{escapeTemplateCharacters:a}=sn();t.exports=function(e,t,s){let o=e.getValue().quasis[0].value.raw.replace(/((?:\\\\)*)\\`/g,((e,t)=>"\\".repeat(t.length/2)+"`")),l=function(e){let t=e.match(/^([^\S\n]*)\S/m);return null===t?"":t[1]}(o),p=""!==l;p&&(o=o.replace(new RegExp(`^${l}`,"gm"),""));let c=a(s(o,{parser:"markdown",__inJsTemplate:!0},{stripTrailingHardline:!0}),!0);return["`",p?n([r,c]):[u,i(c)],r,"`"]}}}),ln=E({"src/language-js/embed/css.js"(e,t){v();var{isNonEmptyArray:n}=De(),{builders:{indent:r,hardline:u,softline:i},utils:{mapDoc:a,replaceEndOfLine:s,cleanDoc:o}}=U(),{printTemplateExpressions:l}=sn();t.exports=function(e,t,p){let c=e.getValue(),d=c.quasis.map((e=>e.value.raw)),D=0;return function(e,t,l){if(1===t.quasis.length&&!t.quasis[0].value.raw.trim())return"``";let p=function(e,t){if(!n(t))return e;let r=0,u=a(o(e),(e=>"string"==typeof e&&e.includes("@prettier-placeholder")?e.split(/@prettier-placeholder-(\d+)-id/).map(((e,n)=>n%2==0?s(e):(r++,t[e]))):e));return t.length===r?u:null}(e,l);if(!p)throw new Error("Couldn't insert all the expressions");return["`",r([u,p]),i,"`"]}(p(d.reduce(((e,t,n)=>0===n?t:e+"@prettier-placeholder-"+D+++"-id"+t),""),{parser:"scss"},{stripTrailingHardline:!0}),c,l(e,t))}}}),pn=E({"src/language-js/embed/graphql.js"(e,t){v();var{builders:{indent:n,join:r,hardline:u}}=U(),{escapeTemplateCharacters:i,printTemplateExpressions:a}=sn();function s(e){let t=[],n=!1,i=e.map((e=>e.trim()));for(let[e,r]of i.entries())""!==r&&(""===i[e-1]&&n?t.push([u,r]):t.push(r),n=!0);return 0===t.length?null:r(u,t)}t.exports=function(e,t,o){let l=e.getValue(),p=l.quasis.length;if(1===p&&""===l.quasis[0].value.raw.trim())return"``";let c=a(e,t),d=[];for(let e=0;e<p;e++){let t=0===e,n=e===p-1,r=l.quasis[e].value.cooked,u=r.split("\n"),a=u.length,D=c[e],f=a>2&&""===u[0].trim()&&""===u[1].trim(),m=a>2&&""===u[a-1].trim()&&""===u[a-2].trim(),g=u.every((e=>/^\s*(?:#[^\n\r]*)?$/.test(e)));if(!n&&/#[^\n\r]*$/.test(u[a-1]))return null;let y=null;y=g?s(u):o(r,{parser:"graphql"},{stripTrailingHardline:!0}),y?(y=i(y,!1),!t&&f&&d.push(""),d.push(y),!n&&m&&d.push("")):!t&&!n&&f&&d.push(""),D&&d.push(D)}return["`",n([u,r(u,d)]),u,"`"]}}}),cn=E({"src/language-js/embed/html.js"(e,t){v();var{builders:{indent:n,line:r,hardline:u,group:i},utils:{mapDoc:a}}=U(),{printTemplateExpressions:s,uncookTemplateElementValue:o}=sn(),l=0;t.exports=function(e,t,p,c,d){let{parser:D}=d,f=e.getValue(),m=l;l=l+1>>>0;let g=e=>`PRETTIER_HTML_PLACEHOLDER_${e}_${m}_IN_JS`,y=f.quasis.map(((e,t,n)=>t===n.length-1?e.value.cooked:e.value.cooked+g(t))).join(""),h=s(e,t);if(0===h.length&&0===y.trim().length)return"``";let E=new RegExp(g("(\\d+)"),"g"),C=0,A=p(y,{parser:D,__onHtmlRoot(e){C=e.children.length}},{stripTrailingHardline:!0}),F=a(A,(e=>{if("string"!=typeof e)return e;let t=[],n=e.split(E);for(let e=0;e<n.length;e++){let r=n[e];if(e%2==0){r&&(r=o(r),c.__embeddedInHtml&&(r=r.replace(/<\/(script)\b/gi,"<\\/$1")),t.push(r));continue}let u=Number(r);t.push(h[u])}return t})),v=/^\s/.test(y)?" ":"",x=/\s$/.test(y)?" ":"",b="ignore"===c.htmlWhitespaceSensitivity?u:v&&x?r:null;return i(b?["`",n([b,i(F)]),b,"`"]:["`",v,C>1?n(i(F)):i(F),x,"`"])}}}),dn=E({"src/language-js/embed.js"(e,t){v();var{hasComment:n,CommentCheckFlags:r,isObjectProperty:u}=an(),i=on(),a=ln(),s=pn(),o=cn();function l(e){return function(e){let t=e.getValue(),n=e.getParentNode(),r=e.getParentNode(1);return r&&t.quasis&&"JSXExpressionContainer"===n.type&&"JSXElement"===r.type&&"style"===r.openingElement.name.name&&r.openingElement.attributes.some((e=>"jsx"===e.name.name))||n&&"TaggedTemplateExpression"===n.type&&"Identifier"===n.tag.type&&"css"===n.tag.name||n&&"TaggedTemplateExpression"===n.type&&"MemberExpression"===n.tag.type&&"css"===n.tag.object.name&&("global"===n.tag.property.name||"resolve"===n.tag.property.name)}(e)||function(e){let t=e.getParentNode();if(!t||"TaggedTemplateExpression"!==t.type)return!1;let n="ParenthesizedExpression"===t.tag.type?t.tag.expression:t.tag;switch(n.type){case"MemberExpression":return c(n.object)||d(n);case"CallExpression":return c(n.callee)||"MemberExpression"===n.callee.type&&("MemberExpression"===n.callee.object.type&&(c(n.callee.object.object)||d(n.callee.object))||"CallExpression"===n.callee.object.type&&c(n.callee.object.callee));case"Identifier":return"css"===n.name;default:return!1}}(e)||function(e){let t=e.getParentNode(),n=e.getParentNode(1);return n&&"JSXExpressionContainer"===t.type&&"JSXAttribute"===n.type&&"JSXIdentifier"===n.name.type&&"css"===n.name.name}(e)||function(e){return e.match((e=>"TemplateLiteral"===e.type),((e,t)=>"ArrayExpression"===e.type&&"elements"===t),((e,t)=>u(e)&&"Identifier"===e.key.type&&"styles"===e.key.name&&"value"===t),...p)}(e)?"css":function(e){let t=e.getValue(),n=e.getParentNode();return D(t,"GraphQL")||n&&("TaggedTemplateExpression"===n.type&&("MemberExpression"===n.tag.type&&"graphql"===n.tag.object.name&&"experimental"===n.tag.property.name||"Identifier"===n.tag.type&&("gql"===n.tag.name||"graphql"===n.tag.name))||"CallExpression"===n.type&&"Identifier"===n.callee.type&&"graphql"===n.callee.name)}(e)?"graphql":function(e){return D(e.getValue(),"HTML")||e.match((e=>"TemplateLiteral"===e.type),((e,t)=>"TaggedTemplateExpression"===e.type&&"Identifier"===e.tag.type&&"html"===e.tag.name&&"quasi"===t))}(e)?"html":function(e){return e.match((e=>"TemplateLiteral"===e.type),((e,t)=>u(e)&&"Identifier"===e.key.type&&"template"===e.key.name&&"value"===t),...p)}(e)?"angular":function(e){let t=e.getValue(),n=e.getParentNode();return n&&"TaggedTemplateExpression"===n.type&&1===t.quasis.length&&"Identifier"===n.tag.type&&("md"===n.tag.name||"markdown"===n.tag.name)}(e)?"markdown":void 0}var p=[(e,t)=>"ObjectExpression"===e.type&&"properties"===t,(e,t)=>"CallExpression"===e.type&&"Identifier"===e.callee.type&&"Component"===e.callee.name&&"arguments"===t,(e,t)=>"Decorator"===e.type&&"expression"===t];function c(e){return"Identifier"===e.type&&"styled"===e.name}function d(e){return/^[A-Z]/.test(e.object.name)&&"extend"===e.property.name}function D(e,t){return n(e,r.Block|r.Leading,(e=>{let{value:n}=e;return n===` ${t} `}))}t.exports=function(e,t,n,r){let u=e.getValue();if("TemplateLiteral"!==u.type||function(e){let{quasis:t}=e;return t.some((e=>{let{value:{cooked:t}}=e;return null===t}))}(u))return;let p=l(e);if(p){if("markdown"===p)return i(e,t,n);if("css"===p)return a(e,t,n);if("graphql"===p)return s(e,t,n);if("html"===p||"angular"===p)return o(e,t,n,r,{parser:p})}}}}),Dn=E({"src/language-js/clean.js"(e,t){v();var n=rn(),r=new Set(["range","raw","comments","leadingComments","trailingComments","innerComments","extra","start","end","loc","flags","errors","tokens"]),u=e=>{for(let t of e.quasis)delete t.value};function i(e,t,r){if("Program"===e.type&&delete t.sourceType,("BigIntLiteral"===e.type||"BigIntLiteralTypeAnnotation"===e.type)&&t.value&&(t.value=t.value.toLowerCase()),("BigIntLiteral"===e.type||"Literal"===e.type)&&t.bigint&&(t.bigint=t.bigint.toLowerCase()),"DecimalLiteral"===e.type&&(t.value=Number(t.value)),"Literal"===e.type&&t.decimal&&(t.decimal=Number(t.decimal)),"EmptyStatement"===e.type||"JSXText"===e.type||"JSXExpressionContainer"===e.type&&("Literal"===e.expression.type||"StringLiteral"===e.expression.type)&&" "===e.expression.value)return null;if(("Property"===e.type||"ObjectProperty"===e.type||"MethodDefinition"===e.type||"ClassProperty"===e.type||"ClassMethod"===e.type||"PropertyDefinition"===e.type||"TSDeclareMethod"===e.type||"TSPropertySignature"===e.type||"ObjectTypeProperty"===e.type)&&"object"==typeof e.key&&e.key&&("Literal"===e.key.type||"NumericLiteral"===e.key.type||"StringLiteral"===e.key.type||"Identifier"===e.key.type)&&delete t.key,"JSXElement"===e.type&&"style"===e.openingElement.name.name&&e.openingElement.attributes.some((e=>"jsx"===e.name.name)))for(let{type:e,expression:n}of t.children)"JSXExpressionContainer"===e&&"TemplateLiteral"===n.type&&u(n);"JSXAttribute"===e.type&&"css"===e.name.name&&"JSXExpressionContainer"===e.value.type&&"TemplateLiteral"===e.value.expression.type&&u(t.value.expression),"JSXAttribute"===e.type&&e.value&&"Literal"===e.value.type&&/["']|&quot;|&apos;/.test(e.value.value)&&(t.value.value=t.value.value.replace(/["']|&quot;|&apos;/g,'"'));let i=e.expression||e.callee;if("Decorator"===e.type&&"CallExpression"===i.type&&"Component"===i.callee.name&&1===i.arguments.length){let n=e.expression.arguments[0].properties;for(let[e,r]of t.expression.arguments[0].properties.entries())switch(n[e].key.name){case"styles":"ArrayExpression"===r.value.type&&u(r.value.elements[0]);break;case"template":"TemplateLiteral"===r.value.type&&u(r.value)}}var a;return"TaggedTemplateExpression"===e.type&&("MemberExpression"===e.tag.type||"Identifier"===e.tag.type&&("gql"===e.tag.name||"graphql"===e.tag.name||"css"===e.tag.name||"md"===e.tag.name||"markdown"===e.tag.name||"html"===e.tag.name)||"CallExpression"===e.tag.type)&&u(t.quasi),"TemplateLiteral"===e.type&&((null===(a=e.leadingComments)||void 0===a?void 0:a.some((e=>n(e)&&["GraphQL","HTML"].some((t=>e.value===` ${t} `)))))||"CallExpression"===r.type&&"graphql"===r.callee.name||!e.leadingComments)&&u(t),"InterpreterDirective"===e.type&&(t.value=t.value.trimEnd()),"TSIntersectionType"!==e.type&&"TSUnionType"!==e.type||1!==e.types.length?void 0:t.types[0]}i.ignoredProperties=r,t.exports=i}}),fn={};function mn(){if(typeof wn>"u"){var e=new ArrayBuffer(2),t=new Uint8Array(e),n=new Uint16Array(e);if(t[0]=1,t[1]=2,258===n[0])wn="BE";else{if(513!==n[0])throw new Error("unable to figure out endianess");wn="LE"}}return wn}function gn(){return typeof globalThis.location<"u"?globalThis.location.hostname:""}function yn(){return[]}function hn(){return 0}function En(){return Number.MAX_VALUE}function Cn(){return Number.MAX_VALUE}function An(){return[]}function Fn(){return"Browser"}function vn(){return typeof globalThis.navigator<"u"?globalThis.navigator.appVersion:""}function xn(){}function bn(){}function Sn(){return"javascript"}function Tn(){return"browser"}function Bn(){return"/tmp"}C(fn,{EOL:()=>kn,arch:()=>Sn,cpus:()=>An,default:()=>jn,endianness:()=>mn,freemem:()=>En,getNetworkInterfaces:()=>bn,hostname:()=>gn,loadavg:()=>yn,networkInterfaces:()=>xn,platform:()=>Tn,release:()=>vn,tmpDir:()=>Bn,tmpdir:()=>Nn,totalmem:()=>Cn,type:()=>Fn,uptime:()=>hn});var wn,Nn,kn,jn,Pn=h({"node-modules-polyfills:os"(){v(),jn={EOL:kn="\n",tmpdir:Nn=Bn,tmpDir:Bn,networkInterfaces:xn,getNetworkInterfaces:bn,release:vn,type:Fn,cpus:An,totalmem:Cn,freemem:En,uptime:hn,loadavg:yn,hostname:gn,endianness:mn}}}),In=E({"node-modules-polyfills-commonjs:os"(e,t){v();var n=(Pn(),F(fn));if(n&&n.default){t.exports=n.default;for(let e in n)t.exports[e]=n[e]}else n&&(t.exports=n)}}),On=E({"node_modules/detect-newline/index.js"(e,t){v();var n=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");let t=e.match(/(?:\r?\n)/g)||[];if(0===t.length)return;let n=t.filter((e=>"\r\n"===e)).length;return n>t.length-n?"\r\n":"\n"};t.exports=n,t.exports.graceful=e=>"string"==typeof e&&n(e)||"\n"}}),Ln=E({"node_modules/jest-docblock/build/index.js"(e){function t(){let e=In();return t=function(){return e},e}function n(){let e=function(e){return e&&e.__esModule?e:{default:e}}(On());return n=function(){return e},e}v(),Object.defineProperty(e,"__esModule",{value:!0}),e.extract=function(e){let t=e.match(i);return t?t[0].trimLeft():""},e.parse=function(e){return d(e).pragmas},e.parseWithComments=d,e.print=function(e){let{comments:r="",pragmas:u={}}=e,i=(0,n().default)(r)||t().EOL,a=" *",s=Object.keys(u),o=s.map((e=>D(e,u[e]))).reduce(((e,t)=>e.concat(t)),[]).map((e=>`${a} ${e}${i}`)).join("");if(!r){if(0===s.length)return"";if(1===s.length&&!Array.isArray(u[s[0]])){let e=u[s[0]];return`/** ${D(s[0],e)[0]} */`}}let l=r.split(i).map((e=>`${a} ${e}`)).join(i)+i;return"/**"+i+(r?l:"")+(r&&s.length?a+i:"")+o+" */"},e.strip=function(e){let t=e.match(i);return t&&t[0]?e.substring(t[0].length):e};var r=/\*\/$/,u=/^\/\*\*?/,i=/^\s*(\/\*\*?(.|\r?\n)*?\*\/)/,a=/(^|\s+)\/\/([^\r\n]*)/g,s=/^(\r?\n)+/,o=/(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g,l=/(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g,p=/(\r?\n|^) *\* ?/g,c=[];function d(e){let i=(0,n().default)(e)||t().EOL;e=e.replace(u,"").replace(r,"").replace(p,"$1");let d="";for(;d!==e;)d=e,e=e.replace(o,`${i}$1 $2${i}`);e=e.replace(s,"").trimRight();let D,f=Object.create(null),m=e.replace(l,"").replace(s,"").trimRight();for(;D=l.exec(e);){let e=D[2].replace(a,"");"string"==typeof f[D[1]]||Array.isArray(f[D[1]])?f[D[1]]=c.concat(f[D[1]],e):f[D[1]]=e}return{comments:m,pragmas:f}}function D(e,t){return c.concat(t).map((t=>`@${e} ${t}`.trim()))}}}),_n=E({"src/language-js/utils/get-shebang.js"(e,t){v(),t.exports=function(e){if(!e.startsWith("#!"))return"";let t=e.indexOf("\n");return-1===t?e:e.slice(0,t)}}}),Mn=E({"src/language-js/pragma.js"(e,t){v();var{parseWithComments:n,strip:r,extract:u,print:i}=Ln(),{normalizeEndOfLine:a}=B(),s=_n();function o(e){let t=s(e);t&&(e=e.slice(t.length+1));let r=u(e),{pragmas:i,comments:a}=n(r);return{shebang:t,text:e,pragmas:i,comments:a}}t.exports={hasPragma:function(e){let t=Object.keys(o(e).pragmas);return t.includes("prettier")||t.includes("format")},insertPragma:function(e){let{shebang:t,text:n,pragmas:u,comments:s}=o(e),l=r(n),p=i({pragmas:Object.assign({format:""},u),comments:s.trimStart()});return(t?`${t}\n`:"")+a(p)+(l.startsWith("\n")?"\n":"\n\n")+l}}}}),$n=E({"src/language-js/utils/is-type-cast-comment.js"(e,t){v();var n=rn();t.exports=function(e){return n(e)&&"*"===e.value[0]&&/@(?:type|satisfies)\b/.test(e.value)}}}),Rn=E({"src/language-js/comments.js"(e,t){v();var{getLast:n,hasNewline:r,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:u,getNextNonSpaceNonCommentCharacter:i,hasNewlineInRange:a,addLeadingComment:s,addTrailingComment:o,addDanglingComment:l,getNextNonSpaceNonCommentCharacterIndex:p,isNonEmptyArray:c}=De(),{getFunctionParameters:d,isPrettierIgnoreComment:D,isJsxNode:f,hasFlowShorthandAnnotationComment:m,hasFlowAnnotationComment:g,hasIgnoreComment:y,isCallLikeExpression:h,getCallArguments:E,isCallExpression:C,isMemberExpression:A,isObjectProperty:F,isLineComment:x,getComments:b,CommentCheckFlags:S,markerForIfWithoutBlockAndSameLineComment:T}=an(),{locStart:B,locEnd:w}=_t(),N=rn(),k=$n();function j(e,t){let n=(e.body||e.properties).find((e=>{let{type:t}=e;return"EmptyStatement"!==t}));n?s(n,t):l(e,t)}function P(e,t){"BlockStatement"===e.type?j(e,t):s(e,t)}function I(e){let{comment:t,followingNode:n}=e;return!(!n||!k(t)||(s(n,t),0))}function O(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:u,text:a}=e;if("IfStatement"!==(null==r?void 0:r.type)||!u)return!1;if(")"===i(a,t,w))return o(n,t),!0;if(n===r.consequent&&u===r.alternate){if("BlockStatement"===n.type)o(n,t);else{let e="SingleLine"===t.type||t.loc.start.line===t.loc.end.line,u=t.loc.start.line===n.loc.start.line;e&&u?l(n,t,T):l(r,t)}return!0}return"BlockStatement"===u.type?(j(u,t),!0):"IfStatement"===u.type?(P(u.consequent,t),!0):r.consequent===u&&(s(u,t),!0)}function L(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:u,text:a}=e;return!("WhileStatement"!==(null==r?void 0:r.type)||!u||(")"===i(a,t,w)?(o(n,t),0):"BlockStatement"===u.type?(j(u,t),0):r.body!==u||(s(u,t),0)))}function _(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:u}=e;return!("TryStatement"!==(null==r?void 0:r.type)&&"CatchClause"!==(null==r?void 0:r.type)||!u||("CatchClause"===r.type&&n?(o(n,t),0):"BlockStatement"===u.type?(j(u,t),0):"TryStatement"===u.type?(P(u.finalizer,t),0):"CatchClause"!==u.type||(P(u.body,t),0)))}function M(e){let{comment:t,enclosingNode:n,followingNode:r}=e;return!(!A(n)||"Identifier"!==(null==r?void 0:r.type)||(s(n,t),0))}function $(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:u,text:i}=e,o=n&&!a(i,w(n),B(t));return!(n&&o||"ConditionalExpression"!==(null==r?void 0:r.type)&&"TSConditionalType"!==(null==r?void 0:r.type)||!u||(s(u,t),0))}function R(e){let{comment:t,precedingNode:n,enclosingNode:r}=e;return!(!F(r)||!r.shorthand||r.key!==n||"AssignmentPattern"!==r.value.type||(o(r.value.left,t),0))}var V=new Set(["ClassDeclaration","ClassExpression","DeclareClass","DeclareInterface","InterfaceDeclaration","TSInterfaceDeclaration"]);function W(e){let{comment:t,precedingNode:r,enclosingNode:u,followingNode:i}=e;if(V.has(null==u?void 0:u.type)){if(c(u.decorators)&&(!i||"Decorator"!==i.type))return o(n(u.decorators),t),!0;if(u.body&&i===u.body)return j(u.body,t),!0;if(i){if(u.superClass&&i===u.superClass&&r&&(r===u.id||r===u.typeParameters))return o(r,t),!0;for(let e of["implements","extends","mixins"])if(u[e]&&i===u[e][0])return!r||r!==u.id&&r!==u.typeParameters&&r!==u.superClass?l(u,t,e):o(r,t),!0}}return!1}var q=new Set(["ClassMethod","ClassProperty","PropertyDefinition","TSAbstractPropertyDefinition","TSAbstractMethodDefinition","TSDeclareMethod","MethodDefinition","ClassAccessorProperty","AccessorProperty","TSAbstractAccessorProperty"]);function U(e){let{comment:t,precedingNode:n,enclosingNode:r,text:u}=e;return!!(r&&n&&"("===i(u,t,w)&&("Property"===r.type||"TSDeclareMethod"===r.type||"TSAbstractMethodDefinition"===r.type)&&"Identifier"===n.type&&r.key===n&&":"!==i(u,n,w)||"Decorator"===(null==n?void 0:n.type)&&q.has(null==r?void 0:r.type))&&(o(n,t),!0)}var J=new Set(["FunctionDeclaration","FunctionExpression","ClassMethod","MethodDefinition","ObjectMethod"]);function H(e){let{comment:t,precedingNode:n,enclosingNode:r,text:u}=e;return!("("!==i(u,t,w)||!n||!J.has(null==r?void 0:r.type)||(o(n,t),0))}function G(e){let{comment:t,enclosingNode:n,text:r}=e;if("ArrowFunctionExpression"!==(null==n?void 0:n.type))return!1;let u=p(r,t,w);return!1!==u&&"=>"===r.slice(u,u+2)&&(l(n,t),!0)}function z(e){let{comment:t,enclosingNode:n,text:r}=e;return!(")"!==i(r,t,w)||(n&&(de(n)&&0===d(n).length||h(n)&&0===E(n).length)?(l(n,t),0):"MethodDefinition"!==(null==n?void 0:n.type)&&"TSAbstractMethodDefinition"!==(null==n?void 0:n.type)||0!==d(n.value).length||(l(n.value,t),0)))}function X(e){let{comment:t,precedingNode:r,enclosingNode:a,followingNode:s,text:l}=e;if("FunctionTypeParam"===(null==r?void 0:r.type)&&"FunctionTypeAnnotation"===(null==a?void 0:a.type)&&"FunctionTypeParam"!==(null==s?void 0:s.type)||("Identifier"===(null==r?void 0:r.type)||"AssignmentPattern"===(null==r?void 0:r.type))&&a&&de(a)&&")"===i(l,t,w))return o(r,t),!0;if("FunctionDeclaration"===(null==a?void 0:a.type)&&"BlockStatement"===(null==s?void 0:s.type)){let e=(()=>{let e=d(a);if(e.length>0)return u(l,w(n(e)));let t=u(l,w(a.id));return!1!==t&&u(l,t+1)})();if(B(t)>e)return j(s,t),!0}return!1}function K(e){let{comment:t,enclosingNode:n}=e;return"LabeledStatement"===(null==n?void 0:n.type)&&(s(n,t),!0)}function Y(e){let{comment:t,enclosingNode:n}=e;return!("ContinueStatement"!==(null==n?void 0:n.type)&&"BreakStatement"!==(null==n?void 0:n.type)||n.label||(o(n,t),0))}function Q(e){let{comment:t,precedingNode:n,enclosingNode:r}=e;return!!(C(r)&&n&&r.callee===n&&r.arguments.length>0)&&(s(r.arguments[0],t),!0)}function Z(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:u}=e;return"UnionTypeAnnotation"===(null==r?void 0:r.type)||"TSUnionType"===(null==r?void 0:r.type)?(D(t)&&(u.prettierIgnore=!0,t.unignore=!0),!!n&&(o(n,t),!0)):(("UnionTypeAnnotation"===(null==u?void 0:u.type)||"TSUnionType"===(null==u?void 0:u.type))&&D(t)&&(u.types[0].prettierIgnore=!0,t.unignore=!0),!1)}function ee(e){let{comment:t,enclosingNode:n}=e;return!!F(n)&&(s(n,t),!0)}function te(e){let{comment:t,enclosingNode:n,followingNode:r,ast:u,isLastComment:i}=e;return u&&u.body&&0===u.body.length?(i?l(u,t):s(u,t),!0):"Program"!==(null==n?void 0:n.type)||0!==(null==n?void 0:n.body.length)||c(n.directives)?"Program"===(null==r?void 0:r.type)&&0===(null==r?void 0:r.body.length)&&"ModuleExpression"===(null==n?void 0:n.type)&&(l(r,t),!0):(i?l(n,t):s(n,t),!0)}function ne(e){let{comment:t,enclosingNode:n}=e;return("ForInStatement"===(null==n?void 0:n.type)||"ForOfStatement"===(null==n?void 0:n.type))&&(s(n,t),!0)}function re(e){let{comment:t,precedingNode:n,enclosingNode:u,text:i}=e;if("ImportSpecifier"===(null==u?void 0:u.type)||"ExportSpecifier"===(null==u?void 0:u.type))return s(u,t),!0;let a="ImportSpecifier"===(null==n?void 0:n.type)&&"ImportDeclaration"===(null==u?void 0:u.type),l="ExportSpecifier"===(null==n?void 0:n.type)&&"ExportNamedDeclaration"===(null==u?void 0:u.type);return!(!a&&!l||!r(i,w(t))||(o(n,t),0))}function ue(e){let{comment:t,enclosingNode:n}=e;return"AssignmentPattern"===(null==n?void 0:n.type)&&(s(n,t),!0)}var ie=new Set(["VariableDeclarator","AssignmentExpression","TypeAlias","TSTypeAliasDeclaration"]),ae=new Set(["ObjectExpression","ArrayExpression","TemplateLiteral","TaggedTemplateExpression","ObjectTypeAnnotation","TSTypeLiteral"]);function se(e){let{comment:t,enclosingNode:n,followingNode:r}=e;return!(!ie.has(null==n?void 0:n.type)||!r||!ae.has(r.type)&&!N(t)||(s(r,t),0))}function oe(e){let{comment:t,enclosingNode:n,followingNode:r,text:u}=e;return!(r||"TSMethodSignature"!==(null==n?void 0:n.type)&&"TSDeclareFunction"!==(null==n?void 0:n.type)&&"TSAbstractMethodDefinition"!==(null==n?void 0:n.type)||";"!==i(u,t,w)||(o(n,t),0))}function le(e){let{comment:t,enclosingNode:n,followingNode:r}=e;if(D(t)&&"TSMappedType"===(null==n?void 0:n.type)&&"TSTypeParameter"===(null==r?void 0:r.type)&&r.constraint)return n.prettierIgnore=!0,t.unignore=!0,!0}function pe(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:u}=e;return!("TSMappedType"!==(null==r?void 0:r.type)||("TSTypeParameter"===(null==u?void 0:u.type)&&u.name?(s(u.name,t),0):"TSTypeParameter"!==(null==n?void 0:n.type)||!n.constraint||(o(n.constraint,t),0)))}function ce(e){let{comment:t,enclosingNode:n,followingNode:r}=e;return!(!n||"SwitchCase"!==n.type||n.test||!r||r!==n.consequent[0]||("BlockStatement"===r.type&&x(t)?j(r,t):l(n,t),0))}function de(e){return"ArrowFunctionExpression"===e.type||"FunctionExpression"===e.type||"FunctionDeclaration"===e.type||"ObjectMethod"===e.type||"ClassMethod"===e.type||"TSDeclareFunction"===e.type||"TSCallSignatureDeclaration"===e.type||"TSConstructSignatureDeclaration"===e.type||"TSMethodSignature"===e.type||"TSConstructorType"===e.type||"TSFunctionType"===e.type||"TSDeclareMethod"===e.type}t.exports={handleOwnLineComment:function(e){return[le,X,M,O,L,_,W,ne,Z,te,re,ue,U,K,Y].some((t=>t(e)))},handleEndOfLineComment:function(e){return[I,X,$,re,O,L,_,W,K,Q,ee,te,se,Y,ce].some((t=>t(e)))},handleRemainingComment:function(e){return[le,O,L,R,z,U,te,G,H,pe,Y,oe].some((t=>t(e)))},getCommentChildNodes:function(e,t){if(("typescript"===t.parser||"flow"===t.parser||"acorn"===t.parser||"espree"===t.parser||"meriyah"===t.parser||"__babel_estree"===t.parser)&&"MethodDefinition"===e.type&&e.value&&"FunctionExpression"===e.value.type&&0===d(e.value).length&&!e.value.returnType&&!c(e.value.typeParameters)&&e.value.body)return[...e.decorators||[],e.key,e.value.body]},willPrintOwnComments:function(e){let t=e.getValue(),n=e.getParentNode();return(t&&(f(t)||m(t)||C(n)&&(g(b(r=t,S.Leading))||g(b(r,S.Trailing))))||n&&("JSXSpreadAttribute"===n.type||"JSXSpreadChild"===n.type||"UnionTypeAnnotation"===n.type||"TSUnionType"===n.type||("ClassDeclaration"===n.type||"ClassExpression"===n.type)&&n.superClass===t))&&(!y(e)||"UnionTypeAnnotation"===n.type||"TSUnionType"===n.type);var r}}}}),Vn=E({"src/language-js/needs-parens.js"(e,t){v();var n=w(),r=se(),{getFunctionParameters:u,getLeftSidePathName:i,hasFlowShorthandAnnotationComment:a,hasNakedLeftSide:s,hasNode:o,isBitwiseOperator:l,startsWithNoLookaheadToken:p,shouldFlatten:c,getPrecedence:d,isCallExpression:D,isMemberExpression:f,isObjectProperty:m,isTSTypeExpression:g}=an();function y(e,t){let n=e.getParentNode();if(!n)return!1;let i=e.getName(),s=e.getNode();if(t.__isInHtmlInterpolation&&!t.bracketSpacing&&function(e){return"ObjectExpression"===e.type}(s)&&h(e))return!0;if(function(e){return"BlockStatement"===e.type||"BreakStatement"===e.type||"ClassBody"===e.type||"ClassDeclaration"===e.type||"ClassMethod"===e.type||"ClassProperty"===e.type||"PropertyDefinition"===e.type||"ClassPrivateProperty"===e.type||"ContinueStatement"===e.type||"DebuggerStatement"===e.type||"DeclareClass"===e.type||"DeclareExportAllDeclaration"===e.type||"DeclareExportDeclaration"===e.type||"DeclareFunction"===e.type||"DeclareInterface"===e.type||"DeclareModule"===e.type||"DeclareModuleExports"===e.type||"DeclareVariable"===e.type||"DoWhileStatement"===e.type||"EnumDeclaration"===e.type||"ExportAllDeclaration"===e.type||"ExportDefaultDeclaration"===e.type||"ExportNamedDeclaration"===e.type||"ExpressionStatement"===e.type||"ForInStatement"===e.type||"ForOfStatement"===e.type||"ForStatement"===e.type||"FunctionDeclaration"===e.type||"IfStatement"===e.type||"ImportDeclaration"===e.type||"InterfaceDeclaration"===e.type||"LabeledStatement"===e.type||"MethodDefinition"===e.type||"ReturnStatement"===e.type||"SwitchStatement"===e.type||"ThrowStatement"===e.type||"TryStatement"===e.type||"TSDeclareFunction"===e.type||"TSEnumDeclaration"===e.type||"TSImportEqualsDeclaration"===e.type||"TSInterfaceDeclaration"===e.type||"TSModuleDeclaration"===e.type||"TSNamespaceExportDeclaration"===e.type||"TypeAlias"===e.type||"VariableDeclaration"===e.type||"WhileStatement"===e.type||"WithStatement"===e.type}(s))return!1;if("flow"!==t.parser&&a(e.getValue()))return!0;if("Identifier"===s.type){if(s.extra&&s.extra.parenthesized&&/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(s.name)||"left"===i&&("async"===s.name&&!n.await||"let"===s.name)&&"ForOfStatement"===n.type)return!0;if("let"===s.name){var y;let t=null===(y=e.findAncestor((e=>"ForOfStatement"===e.type)))||void 0===y?void 0:y.left;if(t&&p(t,(e=>e===s)))return!0}if("object"===i&&"let"===s.name&&"MemberExpression"===n.type&&n.computed&&!n.optional){let t=e.findAncestor((e=>"ExpressionStatement"===e.type||"ForStatement"===e.type||"ForInStatement"===e.type)),n=t?"ExpressionStatement"===t.type?t.expression:"ForStatement"===t.type?t.init:t.left:void 0;if(n&&p(n,(e=>e===s)))return!0}return!1}if("ObjectExpression"===s.type||"FunctionExpression"===s.type||"ClassExpression"===s.type||"DoExpression"===s.type){var C;let t=null===(C=e.findAncestor((e=>"ExpressionStatement"===e.type)))||void 0===C?void 0:C.expression;if(t&&p(t,(e=>e===s)))return!0}switch(n.type){case"ParenthesizedExpression":return!1;case"ClassDeclaration":case"ClassExpression":if("superClass"===i&&("ArrowFunctionExpression"===s.type||"AssignmentExpression"===s.type||"AwaitExpression"===s.type||"BinaryExpression"===s.type||"ConditionalExpression"===s.type||"LogicalExpression"===s.type||"NewExpression"===s.type||"ObjectExpression"===s.type||"SequenceExpression"===s.type||"TaggedTemplateExpression"===s.type||"UnaryExpression"===s.type||"UpdateExpression"===s.type||"YieldExpression"===s.type||"TSNonNullExpression"===s.type))return!0;break;case"ExportDefaultDeclaration":return E(e,t)||"SequenceExpression"===s.type;case"Decorator":if("expression"===i){if(f(s)&&s.computed)return!0;let e=!1,n=!1,r=s;for(;r;)switch(r.type){case"MemberExpression":n=!0,r=r.object;break;case"CallExpression":if(n||e)return"typescript"!==t.parser;e=!0,r=r.callee;break;case"Identifier":return!1;case"TaggedTemplateExpression":return"typescript"!==t.parser;default:return!0}return!0}break;case"ArrowFunctionExpression":if("body"===i&&"SequenceExpression"!==s.type&&p(s,(e=>"ObjectExpression"===e.type)))return!0}switch(s.type){case"UpdateExpression":if("UnaryExpression"===n.type)return s.prefix&&("++"===s.operator&&"+"===n.operator||"--"===s.operator&&"-"===n.operator);case"UnaryExpression":switch(n.type){case"UnaryExpression":return s.operator===n.operator&&("+"===s.operator||"-"===s.operator);case"BindExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===i;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===i;case"BinaryExpression":return"left"===i&&"**"===n.operator;default:return!1}case"BinaryExpression":if("UpdateExpression"===n.type||"in"===s.operator&&function(e){let t=0,n=e.getValue();for(;n;){let r=e.getParentNode(t++);if(r&&"ForStatement"===r.type&&r.init===n)return!0;n=r}return!1}(e))return!0;if("|>"===s.operator&&s.extra&&s.extra.parenthesized){let t=e.getParentNode(1);if("BinaryExpression"===t.type&&"|>"===t.operator)return!0}case"TSTypeAssertion":case"TSAsExpression":case"TSSatisfiesExpression":case"LogicalExpression":switch(n.type){case"TSSatisfiesExpression":case"TSAsExpression":return!g(s);case"ConditionalExpression":return g(s);case"CallExpression":case"NewExpression":case"OptionalCallExpression":return"callee"===i;case"ClassExpression":case"ClassDeclaration":return"superClass"===i;case"TSTypeAssertion":case"TaggedTemplateExpression":case"UnaryExpression":case"JSXSpreadAttribute":case"SpreadElement":case"SpreadProperty":case"BindExpression":case"AwaitExpression":case"TSNonNullExpression":case"UpdateExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===i;case"AssignmentExpression":case"AssignmentPattern":return"left"===i&&("TSTypeAssertion"===s.type||g(s));case"LogicalExpression":if("LogicalExpression"===s.type)return n.operator!==s.operator;case"BinaryExpression":{let{operator:e,type:t}=s;if(!e&&"TSTypeAssertion"!==t)return!0;let r=d(e),u=n.operator,a=d(u);return a>r||"right"===i&&a===r||a===r&&!c(u,e)||(a<r&&"%"===e?"+"===u||"-"===u:!!l(u))}default:return!1}case"SequenceExpression":switch(n.type){case"ReturnStatement":case"ForStatement":return!1;case"ExpressionStatement":return"expression"!==i;case"ArrowFunctionExpression":return"body"!==i;default:return!0}case"YieldExpression":if("UnaryExpression"===n.type||"AwaitExpression"===n.type||g(n)||"TSNonNullExpression"===n.type)return!0;case"AwaitExpression":switch(n.type){case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"SpreadElement":case"SpreadProperty":case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":case"BindExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===i;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===i;case"ConditionalExpression":return"test"===i;case"BinaryExpression":return!(!s.argument&&"|>"===n.operator);default:return!1}case"TSConditionalType":case"TSFunctionType":case"TSConstructorType":if("extendsType"===i&&"TSConditionalType"===n.type){if("TSConditionalType"===s.type)return!0;let{typeAnnotation:e}=s.returnType||s.typeAnnotation;if("TSTypePredicate"===e.type&&e.typeAnnotation&&(e=e.typeAnnotation.typeAnnotation),"TSInferType"===e.type&&e.typeParameter.constraint)return!0}if("checkType"===i&&"TSConditionalType"===n.type)return!0;case"TSUnionType":case"TSIntersectionType":if(("TSUnionType"===n.type||"TSIntersectionType"===n.type)&&n.types.length>1&&(!s.types||s.types.length>1))return!0;case"TSInferType":if("TSInferType"===s.type&&"TSRestType"===n.type)return!1;case"TSTypeOperator":return"TSArrayType"===n.type||"TSOptionalType"===n.type||"TSRestType"===n.type||"objectType"===i&&"TSIndexedAccessType"===n.type||"TSTypeOperator"===n.type||"TSTypeAnnotation"===n.type&&e.getParentNode(1).type.startsWith("TSJSDoc");case"TSTypeQuery":return"objectType"===i&&"TSIndexedAccessType"===n.type||"elementType"===i&&"TSArrayType"===n.type;case"TypeofTypeAnnotation":return"objectType"===i&&("IndexedAccessType"===n.type||"OptionalIndexedAccessType"===n.type)||"elementType"===i&&"ArrayTypeAnnotation"===n.type;case"ArrayTypeAnnotation":return"NullableTypeAnnotation"===n.type;case"IntersectionTypeAnnotation":case"UnionTypeAnnotation":return"ArrayTypeAnnotation"===n.type||"NullableTypeAnnotation"===n.type||"IntersectionTypeAnnotation"===n.type||"UnionTypeAnnotation"===n.type||"objectType"===i&&("IndexedAccessType"===n.type||"OptionalIndexedAccessType"===n.type);case"NullableTypeAnnotation":return"ArrayTypeAnnotation"===n.type||"objectType"===i&&("IndexedAccessType"===n.type||"OptionalIndexedAccessType"===n.type);case"FunctionTypeAnnotation":{let t="NullableTypeAnnotation"===n.type?e.getParentNode(1):n;return"UnionTypeAnnotation"===t.type||"IntersectionTypeAnnotation"===t.type||"ArrayTypeAnnotation"===t.type||"objectType"===i&&("IndexedAccessType"===t.type||"OptionalIndexedAccessType"===t.type)||"NullableTypeAnnotation"===t.type||"FunctionTypeParam"===n.type&&null===n.name&&u(s).some((e=>e.typeAnnotation&&"NullableTypeAnnotation"===e.typeAnnotation.type))}case"OptionalIndexedAccessType":return"objectType"===i&&"IndexedAccessType"===n.type;case"StringLiteral":case"NumericLiteral":case"Literal":if("string"==typeof s.value&&"ExpressionStatement"===n.type&&!n.directive){let t=e.getParentNode(1);return"Program"===t.type||"BlockStatement"===t.type}return"object"===i&&"MemberExpression"===n.type&&"number"==typeof s.value;case"AssignmentExpression":{let t=e.getParentNode(1);return"body"===i&&"ArrowFunctionExpression"===n.type||("key"!==i||"ClassProperty"!==n.type&&"PropertyDefinition"!==n.type||!n.computed)&&("init"!==i&&"update"!==i||"ForStatement"!==n.type)&&("ExpressionStatement"===n.type?"ObjectPattern"===s.left.type:!("key"===i&&"TSPropertySignature"===n.type||"AssignmentExpression"===n.type||"SequenceExpression"===n.type&&t&&"ForStatement"===t.type&&(t.init===n||t.update===n)||"value"===i&&"Property"===n.type&&t&&"ObjectPattern"===t.type&&t.properties.includes(n)||"NGChainedExpression"===n.type))}case"ConditionalExpression":switch(n.type){case"TaggedTemplateExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":case"ExportDefaultDeclaration":case"AwaitExpression":case"JSXSpreadAttribute":case"TSTypeAssertion":case"TypeCastExpression":case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":return!0;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===i;case"ConditionalExpression":return"test"===i;case"MemberExpression":case"OptionalMemberExpression":return"object"===i;default:return!1}case"FunctionExpression":switch(n.type){case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===i;case"TaggedTemplateExpression":return!0;default:return!1}case"ArrowFunctionExpression":switch(n.type){case"BinaryExpression":return"|>"!==n.operator||s.extra&&s.extra.parenthesized;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===i;case"MemberExpression":case"OptionalMemberExpression":return"object"===i;case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":case"BindExpression":case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"AwaitExpression":case"TSTypeAssertion":return!0;case"ConditionalExpression":return"test"===i;default:return!1}case"ClassExpression":return!!r(s.decorators)||"NewExpression"===n.type&&"callee"===i;case"OptionalMemberExpression":case"OptionalCallExpression":{let t=e.getParentNode(1);if("object"===i&&"MemberExpression"===n.type||"callee"===i&&("CallExpression"===n.type||"NewExpression"===n.type)||"TSNonNullExpression"===n.type&&"MemberExpression"===t.type&&t.object===n)return!0}case"CallExpression":case"MemberExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":if("callee"===i&&("BindExpression"===n.type||"NewExpression"===n.type)){let e=s;for(;e;)switch(e.type){case"CallExpression":case"OptionalCallExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":case"BindExpression":e=e.object;break;case"TaggedTemplateExpression":e=e.tag;break;case"TSNonNullExpression":e=e.expression;break;default:return!1}}return!1;case"BindExpression":return"callee"===i&&("BindExpression"===n.type||"NewExpression"===n.type)||"object"===i&&f(n);case"NGPipeExpression":return!("NGRoot"===n.type||"NGMicrosyntaxExpression"===n.type||"ObjectProperty"===n.type&&(!s.extra||!s.extra.parenthesized)||"ArrayExpression"===n.type||D(n)&&n.arguments[i]===s||"right"===i&&"NGPipeExpression"===n.type||"property"===i&&"MemberExpression"===n.type||"AssignmentExpression"===n.type);case"JSXFragment":case"JSXElement":return"callee"===i||"left"===i&&"BinaryExpression"===n.type&&"<"===n.operator||"ArrayExpression"!==n.type&&"ArrowFunctionExpression"!==n.type&&"AssignmentExpression"!==n.type&&"AssignmentPattern"!==n.type&&"BinaryExpression"!==n.type&&"NewExpression"!==n.type&&"ConditionalExpression"!==n.type&&"ExpressionStatement"!==n.type&&"JsExpressionRoot"!==n.type&&"JSXAttribute"!==n.type&&"JSXElement"!==n.type&&"JSXExpressionContainer"!==n.type&&"JSXFragment"!==n.type&&"LogicalExpression"!==n.type&&!D(n)&&!m(n)&&"ReturnStatement"!==n.type&&"ThrowStatement"!==n.type&&"TypeCastExpression"!==n.type&&"VariableDeclarator"!==n.type&&"YieldExpression"!==n.type;case"TypeAnnotation":return"returnType"===i&&"ArrowFunctionExpression"===n.type&&function(e){return o(e,(e=>"ObjectTypeAnnotation"===e.type&&o(e,(e=>"FunctionTypeAnnotation"===e.type||void 0))||void 0))}(s)}return!1}function h(e){let t=e.getValue(),r=e.getParentNode(),u=e.getName();switch(r.type){case"NGPipeExpression":if("number"==typeof u&&r.arguments[u]===t&&r.arguments.length-1===u)return e.callParent(h);break;case"ObjectProperty":if("value"===u){let t=e.getParentNode(1);return n(t.properties)===r}break;case"BinaryExpression":case"LogicalExpression":if("right"===u)return e.callParent(h);break;case"ConditionalExpression":if("alternate"===u)return e.callParent(h);break;case"UnaryExpression":if(r.prefix)return e.callParent(h)}return!1}function E(e,t){let n=e.getValue(),r=e.getParentNode();return"FunctionExpression"===n.type||"ClassExpression"===n.type?"ExportDefaultDeclaration"===r.type||!y(e,t):!(!s(n)||"ExportDefaultDeclaration"!==r.type&&y(e,t))&&e.call((e=>E(e,t)),...i(e,n))}t.exports=y}}),Wn=E({"src/language-js/print-preprocess.js"(e,t){v(),t.exports=function(e,t){switch(t.parser){case"json":case"json5":case"json-stringify":case"__js_expression":case"__vue_expression":case"__vue_ts_expression":return Object.assign(Object.assign({},e),{},{type:t.parser.startsWith("__")?"JsExpressionRoot":"JsonRoot",node:e,comments:[],rootMarker:t.rootMarker});default:return e}}}}),qn=E({"src/language-js/print/html-binding.js"(e,t){v();var{builders:{join:n,line:r,group:u,softline:i,indent:a}}=U();t.exports={isVueEventBindingExpression:function e(t){switch(t.type){case"MemberExpression":switch(t.property.type){case"Identifier":case"NumericLiteral":case"StringLiteral":return e(t.object)}return!1;case"Identifier":return!0;default:return!1}},printHtmlBinding:function(e,t,s){let o=e.getValue();if(t.__onHtmlBindingRoot&&null===e.getName()&&t.__onHtmlBindingRoot(o,t),"File"===o.type){if(t.__isVueForBindingLeft)return e.call((e=>{let t=n([",",r],e.map(s,"params")),{params:o}=e.getValue();return 1===o.length?t:["(",a([i,u(t)]),i,")"]}),"program","body",0);if(t.__isVueBindings)return e.call((e=>n([",",r],e.map(s,"params"))),"program","body",0)}}}}}),Un=E({"src/language-js/print/binaryish.js"(e,t){v();var{printComments:n}=Jt(),{getLast:r}=De(),{builders:{join:u,line:i,softline:a,group:s,indent:o,align:l,indentIfBreak:p},utils:{cleanDoc:c,getDocParts:d,isConcat:D}}=U(),{hasLeadingOwnLineComment:f,isBinaryish:m,isJsxNode:g,shouldFlatten:y,hasComment:h,CommentCheckFlags:E,isCallExpression:C,isMemberExpression:A,isObjectProperty:F,isEnabledHackPipeline:x}=an(),b=0;function S(e,t,r,a,p){let g=e.getValue();if(!m(g))return[s(t())];let C=[];y(g.operator,g.left.operator)?C=e.call((e=>S(e,t,r,!0,p)),"left"):C.push(s(t("left")));let A,F=T(g),v=("|>"===g.operator||"NGPipeExpression"===g.type||"|"===g.operator&&"__vue_expression"===r.parser)&&!f(r.originalText,g.right),b="NGPipeExpression"===g.type?"|":g.operator,B="NGPipeExpression"===g.type&&g.arguments.length>0?s(o([i,": ",u([i,": "],e.map(t,"arguments").map((e=>l(2,s(e)))))])):"";if(F)A=[b," ",t("right"),B];else{let n=x(r)&&"|>"===b?e.call((e=>S(e,t,r,!0,p)),"right"):t("right");A=[v?i:"",b,v?" ":i,n,B]}let w=e.getParentNode(),N=h(g.left,E.Trailing|E.Line),k=N||!(p&&"LogicalExpression"===g.type)&&w.type!==g.type&&g.left.type!==g.type&&g.right.type!==g.type;if(C.push(v?"":" ",k?s(A,{shouldBreak:N}):A),a&&h(g)){let t=c(n(e,C,r));return D(t)||"fill"===t.type?d(t):[t]}return C}function T(e){return"LogicalExpression"===e.type&&!!("ObjectExpression"===e.right.type&&e.right.properties.length>0||"ArrayExpression"===e.right.type&&e.right.elements.length>0||g(e.right))}t.exports={printBinaryishExpression:function(e,t,n){let u=e.getValue(),i=e.getParentNode(),l=e.getParentNode(1),c=u!==i.body&&("IfStatement"===i.type||"WhileStatement"===i.type||"SwitchStatement"===i.type||"DoWhileStatement"===i.type),d=x(t)&&"|>"===u.operator,D=S(e,n,t,!1,c);if(c)return D;if(d)return s(D);if(C(i)&&i.callee===u||"UnaryExpression"===i.type||A(i)&&!i.computed)return s([o([a,...D]),a]);let f="ReturnStatement"===i.type||"ThrowStatement"===i.type||"JSXExpressionContainer"===i.type&&"JSXAttribute"===l.type||"|"!==u.operator&&"JsExpressionRoot"===i.type||"NGPipeExpression"!==u.type&&("NGRoot"===i.type&&"__ng_binding"===t.parser||"NGMicrosyntaxExpression"===i.type&&"NGMicrosyntax"===l.type&&1===l.body.length)||u===i.body&&"ArrowFunctionExpression"===i.type||u!==i.body&&"ForStatement"===i.type||"ConditionalExpression"===i.type&&"ReturnStatement"!==l.type&&"ThrowStatement"!==l.type&&!C(l)||"TemplateLiteral"===i.type,h="AssignmentExpression"===i.type||"VariableDeclarator"===i.type||"ClassProperty"===i.type||"PropertyDefinition"===i.type||"TSAbstractPropertyDefinition"===i.type||"ClassPrivateProperty"===i.type||F(i),E=m(u.left)&&y(u.operator,u.left.operator);if(f||T(u)&&!E||!T(u)&&h)return s(D);if(0===D.length)return"";let v=g(u.right),B=D.findIndex((e=>"string"!=typeof e&&!Array.isArray(e)&&"group"===e.type)),w=D.slice(0,-1===B?1:B+1),N=D.slice(w.length,v?-1:void 0),k=Symbol("logicalChain-"+ ++b),j=s([...w,o(N)],{id:k});if(!v)return j;let P=r(D);return s([j,p(P,{groupId:k})])},shouldInlineLogicalExpression:T}}}),Jn=E({"src/language-js/print/angular.js"(e,t){v();var{builders:{join:n,line:r,group:u}}=U(),{hasNode:i,hasComment:a,getComments:s}=an(),{printBinaryishExpression:o}=Un();function l(e,t,n){return"NGMicrosyntaxKeyedExpression"===e.type&&"of"===e.key.name&&1===t&&"NGMicrosyntaxLet"===n.body[0].type&&null===n.body[0].value}t.exports={printAngular:function(e,t,p){let c=e.getValue();if(c.type.startsWith("NG"))switch(c.type){case"NGRoot":return[p("node"),a(c.node)?" //"+s(c.node)[0].value.trimEnd():""];case"NGPipeExpression":return o(e,t,p);case"NGChainedExpression":return u(n([";",r],e.map((e=>function(e){return i(e.getValue(),(e=>{switch(e.type){case void 0:return!1;case"CallExpression":case"OptionalCallExpression":case"AssignmentExpression":return!0}}))}(e)?p():["(",p(),")"]),"expressions")));case"NGEmptyExpression":return"";case"NGQuotedExpression":return[c.prefix,": ",c.value.trim()];case"NGMicrosyntax":return e.map(((e,t)=>[0===t?"":l(e.getValue(),t,c)?" ":[";",r],p()]),"body");case"NGMicrosyntaxKey":return/^[$_a-z][\w$]*(?:-[$_a-z][\w$])*$/i.test(c.name)?c.name:JSON.stringify(c.name);case"NGMicrosyntaxExpression":return[p("expression"),null===c.alias?"":[" as ",p("alias")]];case"NGMicrosyntaxKeyedExpression":{let t=e.getName(),n=e.getParentNode(),r=l(c,t,n)||(1===t&&("then"===c.key.name||"else"===c.key.name)||2===t&&"else"===c.key.name&&"NGMicrosyntaxKeyedExpression"===n.body[t-1].type&&"then"===n.body[t-1].key.name)&&"NGMicrosyntaxExpression"===n.body[0].type;return[p("key"),r?" ":": ",p("expression")]}case"NGMicrosyntaxLet":return["let ",p("key"),null===c.value?"":[" = ",p("value")]];case"NGMicrosyntaxAs":return[p("key")," as ",p("alias")];default:throw new Error(`Unknown Angular node type: ${JSON.stringify(c.type)}.`)}}}}}),Hn=E({"src/language-js/print/jsx.js"(e,t){v();var{printComments:n,printDanglingComments:r,printCommentsSeparately:u}=Jt(),{builders:{line:i,hardline:a,softline:s,group:o,indent:l,conditionalGroup:p,fill:c,ifBreak:d,lineSuffixBoundary:D,join:f},utils:{willBreak:m}}=U(),{getLast:g,getPreferredQuote:y}=De(),{isJsxNode:h,rawText:E,isCallExpression:C,isStringLiteral:A,isBinaryish:F,hasComment:x,CommentCheckFlags:b,hasNodeIgnoreComment:S}=an(),T=Vn(),{willPrintOwnComments:B}=Rn(),w=e=>""===e||e===i||e===a||e===s;function N(e,t,n){let r=e.getValue();if("JSXElement"===r.type&&function(e){if(0===e.children.length)return!0;if(e.children.length>1)return!1;let t=e.children[0];return"JSXText"===t.type&&!M(t)}(r))return[n("openingElement"),n("closingElement")];let u="JSXElement"===r.type?n("openingElement"):n("openingFragment"),D="JSXElement"===r.type?n("closingElement"):n("closingFragment");if(1===r.children.length&&"JSXExpressionContainer"===r.children[0].type&&("TemplateLiteral"===r.children[0].expression.type||"TaggedTemplateExpression"===r.children[0].expression.type))return[u,...e.map(n,"children"),D];r.children=r.children.map((e=>function(e){return"JSXExpressionContainer"===e.type&&A(e.expression)&&" "===e.expression.value&&!x(e.expression)}(e)?{type:"JSXText",value:" ",raw:" "}:e));let f=r.children.some(h),y=r.children.filter((e=>"JSXExpressionContainer"===e.type)).length>1,C="JSXElement"===r.type&&r.openingElement.attributes.length>1,F=m(u)||f||C||y,v="mdx"===e.getParentNode().rootMarker,b=t.singleQuote?"{' '}":'{" "}',S=v?" ":d([b,s]," "),T=function(e,t,n,r,u){let s=[];return e.each(((e,t,o)=>{let l=e.getValue();if("JSXText"===l.type){let e=E(l);if(M(l)){let n,a=e.split(O);if(""===a[0]){if(s.push(""),a.shift(),/\n/.test(a[0])){let e=o[t+1];s.push(j(u,a[1],l,e))}else s.push(r);a.shift()}if(""===g(a)&&(a.pop(),n=a.pop()),0===a.length)return;for(let[e,t]of a.entries())e%2==1?s.push(i):s.push(t);if(void 0!==n)if(/\n/.test(n)){let e=o[t+1];s.push(j(u,g(s),l,e))}else s.push(r);else{let e=o[t+1];s.push(k(u,g(s),l,e))}}else/\n/.test(e)?e.match(/\n/g).length>1&&s.push("",a):s.push("",r)}else{let e=n();s.push(e);let r=o[t+1];if(r&&M(r)){let e=_(E(r)).split(O)[0];s.push(k(u,e,l,r))}else s.push(a)}}),"children"),s}(e,0,n,S,r.openingElement&&r.openingElement.name&&"fbt"===r.openingElement.name.name),B=r.children.some((e=>M(e)));for(let e=T.length-2;e>=0;e--){let t=""===T[e]&&""===T[e+1],n=T[e]===a&&""===T[e+1]&&T[e+2]===a,r=(T[e]===s||T[e]===a)&&""===T[e+1]&&T[e+2]===S,u=T[e]===S&&""===T[e+1]&&(T[e+2]===s||T[e+2]===a),i=T[e]===S&&""===T[e+1]&&T[e+2]===S,o=T[e]===s&&""===T[e+1]&&T[e+2]===a||T[e]===a&&""===T[e+1]&&T[e+2]===s;n&&B||t||r||i||o?T.splice(e,2):u&&T.splice(e+1,2)}for(;T.length>0&&w(g(T));)T.pop();for(;T.length>1&&w(T[0])&&w(T[1]);)T.shift(),T.shift();let N=[];for(let[e,t]of T.entries()){if(t===S){if(1===e&&""===T[e-1]){if(2===T.length){N.push(b);continue}N.push([b,a]);continue}if(e===T.length-1){N.push(b);continue}if(""===T[e-1]&&T[e-2]===a){N.push(b);continue}}N.push(t),m(t)&&(F=!0)}let P=B?c(N):o(N,{shouldBreak:!0});if(v)return P;let I=o([u,l([a,P]),a,D]);return F?I:p([o([u,...T,D]),I])}function k(e,t,n,r){return e?"":"JSXElement"===n.type&&!n.closingElement||r&&"JSXElement"===r.type&&!r.closingElement?1===t.length?s:a:s}function j(e,t,n,r){return e?a:1===t.length?"JSXElement"===n.type&&!n.closingElement||r&&"JSXElement"===r.type&&!r.closingElement?a:s:a}function P(e,t,n){return e.selfClosing?[i,"/>"]:function(e,t,n){let r=e.attributes.length>0&&x(g(e.attributes),b.Trailing);return 0===e.attributes.length&&!n||(t.bracketSameLine||t.jsxBracketSameLine)&&(!n||e.attributes.length>0)&&!r}(e,t,n)?[">"]:[s,">"]}function I(e,t,r){return function(e,t,n){let r=e.getParentNode();if(!r||{ArrayExpression:!0,JSXAttribute:!0,JSXElement:!0,JSXExpressionContainer:!0,JSXFragment:!0,ExpressionStatement:!0,CallExpression:!0,OptionalCallExpression:!0,ConditionalExpression:!0,JsExpressionRoot:!0}[r.type])return t;let u=e.match(void 0,(e=>"ArrowFunctionExpression"===e.type),C,(e=>"JSXExpressionContainer"===e.type)),i=T(e,n);return o([i?"":d("("),l([s,t]),s,i?"":d(")")],{shouldBreak:u})}(e,n(e,N(e,t,r),t),t)}var O=new RegExp("([ \n\r\t]+)"),L=new RegExp("[^ \n\r\t]"),_=e=>e.replace(new RegExp("(?:^"+O.source+"|"+O.source+"$)"),"");function M(e){return"JSXText"===e.type&&(L.test(E(e))||!/\n/.test(E(e)))}t.exports={hasJsxIgnoreComment:function(e){let t=e.getValue(),n=e.getParentNode();if(!(n&&t&&h(t)&&h(n)))return!1;let r=null;for(let e=n.children.indexOf(t);e>0;e--){let t=n.children[e-1];if("JSXText"!==t.type||M(t)){r=t;break}}return r&&"JSXExpressionContainer"===r.type&&"JSXEmptyExpression"===r.expression.type&&S(r.expression)},printJsx:function(e,t,p){let c=e.getValue();if(c.type.startsWith("JSX"))switch(c.type){case"JSXAttribute":return function(e,t,n){let r=e.getValue(),i=[];if(i.push(n("name")),r.value){let a;if(A(r.value)){let n=E(r.value).slice(1,-1).replace(/&apos;/g,"'").replace(/&quot;/g,'"'),{escaped:i,quote:s,regex:o}=y(n,t.jsxSingleQuote?"'":'"');n=n.replace(o,i);let{leading:l,trailing:p}=e.call((()=>u(e,t)),"value");a=[l,s,n,s,p]}else a=n("value");i.push("=",a)}return i}(e,t,p);case"JSXIdentifier":return String(c.name);case"JSXNamespacedName":return f(":",[p("namespace"),p("name")]);case"JSXMemberExpression":return f(".",[p("object"),p("property")]);case"JSXSpreadAttribute":case"JSXSpreadChild":return function(e,t,r){let u=e.getValue();return["{",e.call((e=>{let u=["...",r()],i=e.getValue();return x(i)&&B(e)?[l([s,n(e,u,t)]),s]:u}),"JSXSpreadAttribute"===u.type?"argument":"expression"),"}"]}(e,t,p);case"JSXExpressionContainer":return function(e,t,n){let r=e.getValue(),u=(e,t)=>"JSXEmptyExpression"===e.type||!x(e)&&("ArrayExpression"===e.type||"ObjectExpression"===e.type||"ArrowFunctionExpression"===e.type||"AwaitExpression"===e.type&&(u(e.argument,e)||"JSXElement"===e.argument.type)||C(e)||"FunctionExpression"===e.type||"TemplateLiteral"===e.type||"TaggedTemplateExpression"===e.type||"DoExpression"===e.type||h(t)&&("ConditionalExpression"===e.type||F(e)));return u(r.expression,e.getParentNode(0))?o(["{",n("expression"),D,"}"]):o(["{",l([s,n("expression")]),s,D,"}"])}(e,0,p);case"JSXFragment":case"JSXElement":return I(e,t,p);case"JSXOpeningElement":return function(e,t,n){let r=e.getValue(),u=r.name&&x(r.name)||r.typeParameters&&x(r.typeParameters);if(r.selfClosing&&0===r.attributes.length&&!u)return["<",n("name"),n("typeParameters")," />"];if(r.attributes&&1===r.attributes.length&&r.attributes[0].value&&A(r.attributes[0].value)&&!r.attributes[0].value.value.includes("\n")&&!u&&!x(r.attributes[0]))return o(["<",n("name"),n("typeParameters")," ",...e.map(n,"attributes"),r.selfClosing?" />":">"]);let s=r.attributes&&r.attributes.some((e=>e.value&&A(e.value)&&e.value.value.includes("\n"))),p=t.singleAttributePerLine&&r.attributes.length>1?a:i;return o(["<",n("name"),n("typeParameters"),l(e.map((()=>[p,n()]),"attributes")),...P(r,t,u)],{shouldBreak:s})}(e,t,p);case"JSXClosingElement":return function(e,t,n){let r=e.getValue(),u=[];u.push("</");let i=n("name");return x(r.name,b.Leading|b.Line)?u.push(l([a,i]),a):x(r.name,b.Leading|b.Block)?u.push(" ",i):u.push(i),u.push(">"),u}(e,0,p);case"JSXOpeningFragment":case"JSXClosingFragment":return function(e,t){let n=e.getValue(),u=x(n),i=x(n,b.Line),s="JSXOpeningFragment"===n.type;return[s?"<":"</",l([i?a:u&&!s?" ":"",r(e,t,!0)]),i?a:"",">"]}(e,t);case"JSXEmptyExpression":return function(e,t){let n=e.getValue(),u=x(n,b.Line);return[r(e,t,!u),u?a:""]}(e,t);case"JSXText":throw new Error("JSXText should be handled by JSXElement");default:throw new Error(`Unknown JSX node type: ${JSON.stringify(c.type)}.`)}}}}}),Gn=E({"src/language-js/print/misc.js"(e,t){v();var{isNonEmptyArray:n}=De(),{builders:{indent:r,join:u,line:i}}=U(),{isFlowAnnotationComment:a}=an();function s(e,t,n){let r=e.getValue();if(!r.typeAnnotation)return"";let u=e.getParentNode(),i="DeclareFunction"===u.type&&u.id===r;return a(t.originalText,r.typeAnnotation)?[" /*: ",n("typeAnnotation")," */"]:[i?"":": ",n("typeAnnotation")]}t.exports={printOptionalToken:function(e){let t=e.getValue();return!t.optional||"Identifier"===t.type&&t===e.getParentNode().key?"":"OptionalCallExpression"===t.type||"OptionalMemberExpression"===t.type&&t.computed?"?.":"?"},printDefiniteToken:function(e){return e.getValue().definite||e.match(void 0,((e,t)=>"id"===t&&"VariableDeclarator"===e.type&&e.definite))?"!":""},printFunctionTypeParameters:function(e,t,n){let r=e.getValue();return r.typeArguments?n("typeArguments"):r.typeParameters?n("typeParameters"):""},printBindExpressionCallee:function(e,t,n){return["::",n("callee")]},printTypeScriptModifiers:function(e,t,r){let i=e.getValue();return n(i.modifiers)?[u(" ",e.map(r,"modifiers"))," "]:""},printTypeAnnotation:s,printRestSpread:function(e,t,n){return["...",n("argument"),s(e,t,n)]},adjustClause:function(e,t,n){return"EmptyStatement"===e.type?";":"BlockStatement"===e.type||n?[" ",t]:r([i,t])},printDirective:function(e,t){let n=e.slice(1,-1);if(n.includes('"')||n.includes("'"))return e;let r=t.singleQuote?"'":'"';return r+n+r}}}}),zn=E({"src/language-js/print/array.js"(e,t){v();var{printDanglingComments:n}=Jt(),{builders:{line:r,softline:u,hardline:i,group:a,indent:s,ifBreak:o,fill:l}}=U(),{getLast:p,hasNewline:c}=De(),{shouldPrintComma:d,hasComment:D,CommentCheckFlags:f,isNextLineEmpty:m,isNumericLiteral:g,isSignedNumericLiteral:y}=an(),{locStart:h}=_t(),{printOptionalToken:E,printTypeAnnotation:C}=Gn();function A(e,t){return e.elements.length>1&&e.elements.every((e=>e&&(g(e)||y(e)&&!D(e.argument))&&!D(e,f.Trailing|f.Line,(e=>!c(t.originalText,h(e),{backwards:!0})))))}function F(e,t,n,i){let s=[],o=[];return e.each((e=>{s.push(o,a(i())),o=[",",r],e.getValue()&&m(e.getValue(),t)&&o.push(u)}),n),s}function x(e,t,n,u){let a=[];return e.each(((e,s,o)=>{let l=s===o.length-1;a.push([n(),l?u:","]),l||a.push(m(e.getValue(),t)?[i,i]:D(o[s+1],f.Leading|f.Line)?i:r)}),"elements"),l(a)}t.exports={printArray:function(e,t,r){let i=e.getValue(),l=[],c="TupleExpression"===i.type?"#[":"[";if(0===i.elements.length)D(i,f.Dangling)?l.push(a([c,n(e,t),u,"]"])):l.push(c,"]");else{let D=p(i.elements),f=!(D&&"RestElement"===D.type),m=null===D,g=Symbol("array"),y=!t.__inJestEach&&i.elements.length>1&&i.elements.every(((e,t,n)=>{let r=e&&e.type;if("ArrayExpression"!==r&&"ObjectExpression"!==r)return!1;let u=n[t+1];if(u&&r!==u.type)return!1;let i="ArrayExpression"===r?"elements":"properties";return e[i]&&e[i].length>1})),h=A(i,t),E=f?m?",":d(t)?h?o(",","",{groupId:g}):o(","):"":"";l.push(a([c,s([u,h?x(e,t,r,E):[F(e,t,"elements",r),E],n(e,t,!0)]),u,"]"],{shouldBreak:y,id:g}))}return l.push(E(e),C(e,t,r)),l},printArrayItems:F,isConciselyPrintedArray:A}}}),Xn=E({"src/language-js/print/call-arguments.js"(e,t){v();var{printDanglingComments:n}=Jt(),{getLast:r,getPenultimate:u}=De(),{getFunctionParameters:i,hasComment:a,CommentCheckFlags:s,isFunctionCompositionArgs:o,isJsxNode:l,isLongCurriedCallExpression:p,shouldPrintComma:c,getCallArguments:d,iterateCallArgumentsPath:D,isNextLineEmpty:f,isCallExpression:m,isStringLiteral:g,isObjectProperty:y,isTSTypeExpression:h}=an(),{builders:{line:E,hardline:C,softline:A,group:F,indent:x,conditionalGroup:b,ifBreak:S,breakParent:T},utils:{willBreak:B}}=U(),{ArgExpansionBailout:w}=Ie(),{isConciselyPrintedArray:N}=zn();function k(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return"ObjectExpression"===e.type&&(e.properties.length>0||a(e))||"ArrayExpression"===e.type&&(e.elements.length>0||a(e))||"TSTypeAssertion"===e.type&&k(e.expression)||h(e)&&k(e.expression)||"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&(!e.returnType||!e.returnType.typeAnnotation||"TSTypeReference"!==e.returnType.typeAnnotation.type||function(e){return"BlockStatement"===e.type&&(e.body.some((e=>"EmptyStatement"!==e.type))||a(e,s.Dangling))}(e.body))&&("BlockStatement"===e.body.type||"ArrowFunctionExpression"===e.body.type&&k(e.body,!0)||"ObjectExpression"===e.body.type||"ArrayExpression"===e.body.type||!t&&(m(e.body)||"ConditionalExpression"===e.body.type)||l(e.body))||"DoExpression"===e.type||"ModuleExpression"===e.type}t.exports=function(e,t,l){let m=e.getValue(),h="ImportExpression"===m.type,v=d(m);if(0===v.length)return["(",n(e,t,!0),")"];if(function(e){return 2===e.length&&"ArrowFunctionExpression"===e[0].type&&0===i(e[0]).length&&"BlockStatement"===e[0].body.type&&"ArrayExpression"===e[1].type&&!e.some((e=>a(e)))}(v))return["(",l(["arguments",0]),", ",l(["arguments",1]),")"];let j=!1,P=!1,I=v.length-1,O=[];D(e,((e,n)=>{let r=e.getNode(),u=[l()];n===I||(f(r,t)?(0===n&&(P=!0),j=!0,u.push(",",C,C)):u.push(",",E)),O.push(u)}));let L=h||m.callee&&"Import"===m.callee.type||!c(t,"all")?"":",";function _(){return F(["(",x([E,...O]),L,E,")"],{shouldBreak:!0})}if(j||"Decorator"!==e.getParentNode().type&&o(v))return _();let M=function(e){if(2!==e.length)return!1;let[t,n]=e;return!("ModuleExpression"!==t.type||!function(e){return"ObjectExpression"===e.type&&1===e.properties.length&&y(e.properties[0])&&"Identifier"===e.properties[0].key.type&&"type"===e.properties[0].key.name&&g(e.properties[0].value)&&"module"===e.properties[0].value.value}(n))||!a(t)&&("FunctionExpression"===t.type||"ArrowFunctionExpression"===t.type&&"BlockStatement"===t.body.type)&&"FunctionExpression"!==n.type&&"ArrowFunctionExpression"!==n.type&&"ConditionalExpression"!==n.type&&!k(n)}(v),$=function(e,t){let n=r(e),i=u(e);return!a(n,s.Leading)&&!a(n,s.Trailing)&&k(n)&&(!i||i.type!==n.type)&&(2!==e.length||"ArrowFunctionExpression"!==i.type||"ArrayExpression"!==n.type)&&!(e.length>1&&"ArrayExpression"===n.type&&N(n,t))}(v,t);if(M||$){if(M?O.slice(1).some(B):O.slice(0,-1).some(B))return _();let t=[];try{e.try((()=>{D(e,((e,n)=>{M&&0===n&&(t=[[l([],{expandFirstArg:!0}),O.length>1?",":"",P?C:E,P?C:""],...O.slice(1)]),$&&n===I&&(t=[...O.slice(0,-1),l([],{expandLastArg:!0})])}))}))}catch(e){if(e instanceof w)return _();throw e}return[O.some(B)?T:"",b([["(",...t,")"],M?["(",F(t[0],{shouldBreak:!0}),...t.slice(1),")"]:["(",...O.slice(0,-1),F(r(t),{shouldBreak:!0}),")"],_()])]}let R=["(",x([A,...O]),S(L),A,")"];return p(e)?R:F(R,{shouldBreak:O.some(B)||j})}}}),Kn=E({"src/language-js/print/member.js"(e,t){v();var{builders:{softline:n,group:r,indent:u,label:i}}=U(),{isNumericLiteral:a,isMemberExpression:s,isCallExpression:o}=an(),{printOptionalToken:l}=Gn();function p(e,t,i){let s=i("property"),o=e.getValue(),p=l(e);return o.computed?!o.property||a(o.property)?[p,"[",s,"]"]:r([p,"[",u([n,s]),n,"]"]):[p,".",s]}t.exports={printMemberExpression:function(e,t,a){let l,c=e.getValue(),d=e.getParentNode(),D=0;do{l=e.getParentNode(D),D++}while(l&&(s(l)||"TSNonNullExpression"===l.type));let f=a("object"),m=p(e,0,a),g=l&&("NewExpression"===l.type||"BindExpression"===l.type||"AssignmentExpression"===l.type&&"Identifier"!==l.left.type)||c.computed||"Identifier"===c.object.type&&"Identifier"===c.property.type&&!s(d)||("AssignmentExpression"===d.type||"VariableDeclarator"===d.type)&&(o(c.object)&&c.object.arguments.length>0||"TSNonNullExpression"===c.object.type&&o(c.object.expression)&&c.object.expression.arguments.length>0||"member-chain"===f.label);return i("member-chain"===f.label?"member-chain":"member",[f,g?m:r(u([n,m]))])},printMemberLookup:p}}}),Yn=E({"src/language-js/print/member-chain.js"(e,t){v();var{printComments:n}=Jt(),{getLast:r,isNextLineEmptyAfterIndex:u,getNextNonSpaceNonCommentCharacterIndex:i}=De(),a=Vn(),{isCallExpression:s,isMemberExpression:o,isFunctionOrArrowExpression:l,isLongCurriedCallExpression:p,isMemberish:c,isNumericLiteral:d,isSimpleCallArgument:D,hasComment:f,CommentCheckFlags:m,isNextLineEmpty:g}=an(),{locEnd:y}=_t(),{builders:{join:h,hardline:E,group:C,indent:A,conditionalGroup:F,breakParent:x,label:b},utils:{willBreak:S}}=U(),T=Xn(),{printMemberLookup:B}=Kn(),{printOptionalToken:w,printFunctionTypeParameters:N,printBindExpressionCallee:k}=Gn();t.exports=function(e,t,v){let j=e.getParentNode(),P=!j||"ExpressionStatement"===j.type,I=[];function O(e){let{originalText:n}=t,r=i(n,e,y);return")"===n.charAt(r)?!1!==r&&u(n,r+1):g(e,t)}function L(e){let r=e.getValue();s(r)&&(c(r.callee)||s(r.callee))?(I.unshift({node:r,printed:[n(e,[w(e),N(e,t,v),T(e,t,v)],t),O(r)?E:""]}),e.call((e=>L(e)),"callee")):c(r)?(I.unshift({node:r,needsParens:a(e,t),printed:n(e,o(r)?B(e,t,v):k(e,t,v),t)}),e.call((e=>L(e)),"object")):"TSNonNullExpression"===r.type?(I.unshift({node:r,printed:n(e,"!",t)}),e.call((e=>L(e)),"expression")):I.unshift({node:r,printed:v()})}let _=e.getValue();I.unshift({node:_,printed:[w(e),N(e,t,v),T(e,t,v)]}),_.callee&&e.call((e=>L(e)),"callee");let M=[],$=[I[0]],R=1;for(;R<I.length&&("TSNonNullExpression"===I[R].node.type||s(I[R].node)||o(I[R].node)&&I[R].node.computed&&d(I[R].node.property));++R)$.push(I[R]);if(!s(I[0].node))for(;R+1<I.length&&c(I[R].node)&&c(I[R+1].node);++R)$.push(I[R]);M.push($),$=[];let V=!1;for(;R<I.length;++R){if(V&&c(I[R].node)){if(I[R].node.computed&&d(I[R].node.property)){$.push(I[R]);continue}M.push($),$=[],V=!1}(s(I[R].node)||"ImportExpression"===I[R].node.type)&&(V=!0),$.push(I[R]),f(I[R].node,m.Trailing)&&(M.push($),$=[],V=!1)}function W(e){return/^[A-Z]|^[$_]+$/.test(e)}$.length>0&&M.push($);let q=M.length>=2&&!f(M[1][0].node)&&function(e){let n=e[1].length>0&&e[1][0].node.computed;if(1===e[0].length){let r=e[0][0].node;return"ThisExpression"===r.type||"Identifier"===r.type&&(W(r.name)||P&&function(e){return e.length<=t.tabWidth}(r.name)||n)}let u=r(e[0]).node;return o(u)&&"Identifier"===u.property.type&&(W(u.property.name)||n)}(M);function U(e){let t=e.map((e=>e.printed));return e.length>0&&r(e).needsParens?["(",...t,")"]:t}let J=M.map(U),H=J,G=q?3:2,z=M.flat(),X=z.slice(1,-1).some((e=>f(e.node,m.Leading)))||z.slice(0,-1).some((e=>f(e.node,m.Trailing)))||M[G]&&f(M[G][0].node,m.Leading);if(M.length<=G&&!X)return p(e)?H:C(H);let K,Y=r(M[q?1:0]).node,Q=!s(Y)&&O(Y),Z=[U(M[0]),q?M.slice(1,2).map(U):"",Q?E:"",(te=M.slice(q?2:1),0===te.length?"":A(C([E,h(E,te.map(U))])))],ee=I.map((e=>{let{node:t}=e;return t})).filter(s);var te;return K=X||ee.length>2&&ee.some((e=>!e.arguments.every((e=>D(e,0)))))||J.slice(0,-1).some(S)||function(){let e=r(r(M)).node,t=r(J);return s(e)&&S(t)&&ee.slice(0,-1).some((e=>e.arguments.some(l)))}()?C(Z):[S(H)||Q?x:"",F([H,Z])],b("member-chain",K)}}}),Qn=E({"src/language-js/print/call-expression.js"(e,t){v();var{builders:{join:n,group:r}}=U(),u=Vn(),{getCallArguments:i,hasFlowAnnotationComment:a,isCallExpression:s,isMemberish:o,isStringLiteral:l,isTemplateOnItsOwnLine:p,isTestCall:c,iterateCallArgumentsPath:d}=an(),D=Yn(),f=Xn(),{printOptionalToken:m,printFunctionTypeParameters:g}=Gn();t.exports={printCallExpression:function(e,t,y){let h=e.getValue(),E=e.getParentNode(),C="NewExpression"===h.type,A="ImportExpression"===h.type,F=m(e),v=i(h);if(v.length>0&&(!A&&!C&&function(e,t){if("Identifier"!==e.callee.type)return!1;if("require"===e.callee.name)return!0;if("define"===e.callee.name){let n=i(e);return"ExpressionStatement"===t.type&&(1===n.length||2===n.length&&"ArrayExpression"===n[0].type||3===n.length&&l(n[0])&&"ArrayExpression"===n[1].type)}return!1}(h,E)||1===v.length&&p(v[0],t.originalText)||!C&&c(h,E))){let r=[];return d(e,(()=>{r.push(y())})),[C?"new ":"",y("callee"),F,g(e,t,y),"(",n(", ",r),")"]}let x=("babel"===t.parser||"babel-flow"===t.parser)&&h.callee&&"Identifier"===h.callee.type&&a(h.callee.trailingComments);if(x&&(h.callee.trailingComments[0].printed=!0),!A&&!C&&o(h.callee)&&!e.call((e=>u(e,t)),"callee"))return D(e,t,y);let b=[C?"new ":"",A?"import":y("callee"),F,x?`/*:: ${h.callee.trailingComments[0].value.slice(2).trim()} */`:"",g(e,t,y),f(e,t,y)];return A||s(h.callee)?r(b):b}}}}),Zn=E({"src/language-js/print/assignment.js"(e,t){v();var{isNonEmptyArray:n,getStringWidth:r}=De(),{builders:{line:u,group:i,indent:a,indentIfBreak:s,lineSuffixBoundary:o},utils:{cleanDoc:l,willBreak:p,canBreak:c}}=U(),{hasLeadingOwnLineComment:d,isBinaryish:D,isStringLiteral:f,isLiteral:m,isNumericLiteral:g,isCallExpression:y,isMemberExpression:h,getCallArguments:E,rawText:C,hasComment:A,isSignedNumericLiteral:F,isObjectProperty:x}=an(),{shouldInlineLogicalExpression:b}=Un(),{printCallExpression:S}=Qn();function T(e,t,p,m,y,h){let E=function(e,t,u,i,a){let s=e.getValue(),o=s[a];if(!o)return"only-left";let p=!B(o);if(e.match(B,w,(e=>!p||"ExpressionStatement"!==e.type&&"VariableDeclaration"!==e.type)))return p?"ArrowFunctionExpression"===o.type&&"ArrowFunctionExpression"===o.body.type?"chain-tail-arrow-chain":"chain-tail":"chain";if(!p&&B(o.right)||d(t.originalText,o))return"break-after-operator";if("CallExpression"===o.type&&"require"===o.callee.name||"json5"===t.parser||"json"===t.parser)return"never-break-after-operator";if(function(e){if(w(e)){let t=e.left||e.id;return"ObjectPattern"===t.type&&t.properties.length>2&&t.properties.some((e=>x(e)&&(!e.shorthand||e.value&&"AssignmentPattern"===e.value.type)))}return!1}(s)||function(e){let t=function(e){return function(e){return"TSTypeAliasDeclaration"===e.type||"TypeAlias"===e.type}(e)&&e.typeParameters&&e.typeParameters.params?e.typeParameters.params:null}(e);if(n(t)){let n="TSTypeAliasDeclaration"===e.type?"constraint":"bound";if(t.length>1&&t.some((e=>e[n]||e.default)))return!0}return!1}(s)||function(e){if("VariableDeclarator"!==e.type)return!1;let{typeAnnotation:t}=e.id;if(!t||!t.typeAnnotation)return!1;let r=k(t.typeAnnotation);return n(r)&&r.length>1&&r.some((e=>n(k(e))||"TSConditionalType"===e.type))}(s)||N(s)&&c(i))return"break-lhs";let m=function(e,t,n){if(!x(e))return!1;let u=3;return"string"==typeof(t=l(t))&&r(t)<n.tabWidth+u}(s,i,t);return e.call((()=>function(e,t,r,u){let i=e.getValue();if(D(i)&&!b(i))return!0;switch(i.type){case"StringLiteralTypeAnnotation":case"SequenceExpression":return!0;case"ConditionalExpression":{let{test:e}=i;return D(e)&&!b(e)}case"ClassExpression":return n(i.decorators)}if(u)return!1;let a=i,s=[];for(;;)if("UnaryExpression"===a.type)a=a.argument,s.push("argument");else{if("TSNonNullExpression"!==a.type)break;a=a.expression,s.push("expression")}return!(!f(a)&&!e.call((()=>j(e,t,r)),...s))}(e,t,u,m)),a)?"break-after-operator":m||"TemplateLiteral"===o.type||"TaggedTemplateExpression"===o.type||"BooleanLiteral"===o.type||g(o)||"ClassExpression"===o.type?"never-break-after-operator":"fluid"}(e,t,p,m,h),C=p(h,{assignmentLayout:E});switch(E){case"break-after-operator":return i([i(m),y,i(a([u,C]))]);case"never-break-after-operator":return i([i(m),y," ",C]);case"fluid":{let e=Symbol("assignment");return i([i(m),y,i(a(u),{id:e}),o,s(C,{groupId:e})])}case"break-lhs":return i([m,y," ",i(C)]);case"chain":return[i(m),y,u,C];case"chain-tail":return[i(m),y,a([u,C])];case"chain-tail-arrow-chain":return[i(m),y,C];case"only-left":return m}}function B(e){return"AssignmentExpression"===e.type}function w(e){return B(e)||"VariableDeclarator"===e.type}function N(e){return"VariableDeclarator"===e.type&&e.init&&"ArrowFunctionExpression"===e.init.type}function k(e){return function(e){return"TSTypeReference"===e.type||"GenericTypeAnnotation"===e.type}(e)&&e.typeParameters&&e.typeParameters.params?e.typeParameters.params:null}function j(e,t,r){let u=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=e.getValue(),a=()=>j(e,t,r,!0);if("TSNonNullExpression"===i.type)return e.call(a,"expression");if(y(i)){if("member-chain"===S(e,t,r).label)return!1;let u=E(i);return!(!(0===u.length||1===u.length&&function(e,t){let{printWidth:n}=t;if(A(e))return!1;let r=.25*n;if("ThisExpression"===e.type||"Identifier"===e.type&&e.name.length<=r||F(e)&&!A(e.argument))return!0;let u="Literal"===e.type&&"regex"in e&&e.regex.pattern||"RegExpLiteral"===e.type&&e.pattern;return u?u.length<=r:f(e)?C(e).length<=r:"TemplateLiteral"===e.type?0===e.expressions.length&&e.quasis[0].value.raw.length<=r&&!e.quasis[0].value.raw.includes("\n"):m(e)}(u[0],t))||function(e,t){let r=function(e){return e.typeParameters&&e.typeParameters.params||e.typeArguments&&e.typeArguments.params}(e);if(n(r)){if(r.length>1)return!0;if(1===r.length){let e=r[0];if("TSUnionType"===e.type||"UnionTypeAnnotation"===e.type||"TSIntersectionType"===e.type||"IntersectionTypeAnnotation"===e.type||"TSTypeLiteral"===e.type||"ObjectTypeAnnotation"===e.type)return!0}let n=e.typeParameters?"typeParameters":"typeArguments";if(p(t(n)))return!0}return!1}(i,r))&&e.call(a,"callee")}return h(i)?e.call(a,"object"):u&&("Identifier"===i.type||"ThisExpression"===i.type)}t.exports={printVariableDeclarator:function(e,t,n){return T(e,t,n,n("id")," =","init")},printAssignmentExpression:function(e,t,n){let r=e.getValue();return T(e,t,n,n("left"),[" ",r.operator],"right")},printAssignment:T,isArrowFunctionVariableDeclarator:N}}}),er=E({"src/language-js/print/function-parameters.js"(e,t){v();var{getNextNonSpaceNonCommentCharacter:n}=De(),{printDanglingComments:r}=Jt(),{builders:{line:u,hardline:i,softline:a,group:s,indent:o,ifBreak:l},utils:{removeLines:p,willBreak:c}}=U(),{getFunctionParameters:d,iterateFunctionParametersPath:D,isSimpleType:f,isTestCall:m,isTypeAnnotationAFunction:g,isObjectType:y,isObjectTypePropertyAFunction:h,hasRestParameter:E,shouldPrintComma:C,hasComment:A,isNextLineEmpty:F}=an(),{locEnd:x}=_t(),{ArgExpansionBailout:b}=Ie(),{printFunctionTypeParameters:S}=Gn();function T(e){if(!e)return!1;let t=d(e);if(1!==t.length)return!1;let[n]=t;return!A(n)&&("ObjectPattern"===n.type||"ArrayPattern"===n.type||"Identifier"===n.type&&n.typeAnnotation&&("TypeAnnotation"===n.typeAnnotation.type||"TSTypeAnnotation"===n.typeAnnotation.type)&&y(n.typeAnnotation.typeAnnotation)||"FunctionTypeParam"===n.type&&y(n.typeAnnotation)||"AssignmentPattern"===n.type&&("ObjectPattern"===n.left.type||"ArrayPattern"===n.left.type)&&("Identifier"===n.right.type||"ObjectExpression"===n.right.type&&0===n.right.properties.length||"ArrayExpression"===n.right.type&&0===n.right.elements.length))}t.exports={printFunctionParameters:function(e,t,y,A,v){let B=e.getValue(),w=d(B),N=v?S(e,y,t):"";if(0===w.length)return[N,"(",r(e,y,!0,(e=>")"===n(y.originalText,e,x))),")"];let k=e.getParentNode(),j=m(k),P=T(B),I=[];if(D(e,((e,n)=>{let r=n===w.length-1;r&&B.rest&&I.push("..."),I.push(t()),!r&&(I.push(","),j||P?I.push(" "):F(w[n],y)?I.push(i,i):I.push(u))})),A){if(c(N)||c(I))throw new b;return s([p(N),"(",p(I),")"])}let O=w.every((e=>!e.decorators));return P&&O||j?[N,"(",...I,")"]:(h(k)||g(k)||"TypeAlias"===k.type||"UnionTypeAnnotation"===k.type||"TSUnionType"===k.type||"IntersectionTypeAnnotation"===k.type||"FunctionTypeAnnotation"===k.type&&k.returnType===B)&&1===w.length&&null===w[0].name&&B.this!==w[0]&&w[0].typeAnnotation&&null===B.typeParameters&&f(w[0].typeAnnotation)&&!B.rest?"always"===y.arrowParens?["(",...I,")"]:I:[N,"(",o([a,...I]),l(!E(B)&&C(y,"all")?",":""),a,")"]},shouldHugFunctionParameters:T,shouldGroupFunctionParameters:function(e,t){let n=function(e){let t;return e.returnType?(t=e.returnType,t.typeAnnotation&&(t=t.typeAnnotation)):e.typeAnnotation&&(t=e.typeAnnotation),t}(e);if(!n)return!1;let r=e.typeParameters&&e.typeParameters.params;if(r){if(r.length>1)return!1;if(1===r.length){let e=r[0];if(e.constraint||e.default)return!1}}return 1===d(e).length&&(y(n)||c(t))}}}}),tr=E({"src/language-js/print/type-annotation.js"(e,t){v();var{printComments:n,printDanglingComments:r}=Jt(),{isNonEmptyArray:u}=De(),{builders:{group:i,join:a,line:s,softline:o,indent:l,align:p,ifBreak:c}}=U(),d=Vn(),{locStart:D}=_t(),{isSimpleType:f,isObjectType:m,hasLeadingOwnLineComment:g,isObjectTypePropertyAFunction:y,shouldPrintComma:h}=an(),{printAssignment:E}=Zn(),{printFunctionParameters:C,shouldGroupFunctionParameters:A}=er(),{printArrayItems:F}=zn();function x(e){if(f(e)||m(e))return!0;if("UnionTypeAnnotation"===e.type||"TSUnionType"===e.type){let t=e.types.filter((e=>"VoidTypeAnnotation"===e.type||"TSVoidKeyword"===e.type||"NullLiteralTypeAnnotation"===e.type||"TSNullKeyword"===e.type)).length,n=e.types.some((e=>"ObjectTypeAnnotation"===e.type||"TSTypeLiteral"===e.type||"GenericTypeAnnotation"===e.type||"TSTypeReference"===e.type));if(e.types.length-1===t&&n)return!0}return!1}t.exports={printOpaqueType:function(e,t,n){let r=t.semi?";":"",u=e.getValue(),i=[];return i.push("opaque type ",n("id"),n("typeParameters")),u.supertype&&i.push(": ",n("supertype")),u.impltype&&i.push(" = ",n("impltype")),i.push(r),i},printTypeAlias:function(e,t,n){let r=t.semi?";":"",u=e.getValue(),i=[];u.declare&&i.push("declare "),i.push("type ",n("id"),n("typeParameters"));let a="TSTypeAliasDeclaration"===u.type?"typeAnnotation":"right";return[E(e,t,n,i," =",a),r]},printIntersectionType:function(e,t,n){let r=e.getValue(),u=e.map(n,"types"),a=[],o=!1;for(let e=0;e<u.length;++e)0===e?a.push(u[e]):m(r.types[e-1])&&m(r.types[e])?a.push([" & ",o?l(u[e]):u[e]]):m(r.types[e-1])||m(r.types[e])?(e>1&&(o=!0),a.push(" & ",e>1?l(u[e]):u[e])):a.push(l([" &",s,u[e]]));return i(a)},printUnionType:function(e,t,r){let u=e.getValue(),D=e.getParentNode(),f=!("TypeParameterInstantiation"===D.type||"TSTypeParameterInstantiation"===D.type||"GenericTypeAnnotation"===D.type||"TSTypeReference"===D.type||"TSTypeAssertion"===D.type||"TupleTypeAnnotation"===D.type||"TSTupleType"===D.type||"FunctionTypeParam"===D.type&&!D.name&&e.getParentNode(1).this!==D||("TypeAlias"===D.type||"VariableDeclarator"===D.type||"TSTypeAliasDeclaration"===D.type)&&g(t.originalText,u)),m=x(u),y=e.map((e=>{let u=r();return m||(u=p(2,u)),n(e,u,t)}),"types");if(m)return a(" | ",y);let h=f&&!g(t.originalText,u),E=[c([h?s:"","| "]),a([s,"| "],y)];return d(e,t)?i([l(E),o]):"TupleTypeAnnotation"===D.type&&D.types.length>1||"TSTupleType"===D.type&&D.elementTypes.length>1?i([l([c(["(",o]),E]),o,c(")")]):i(f?l(E):E)},printFunctionType:function(e,t,n){let r=e.getValue(),u=[],a=e.getParentNode(0),s=e.getParentNode(1),o=e.getParentNode(2),l="TSFunctionType"===r.type||!(("ObjectTypeProperty"===a.type||"ObjectTypeInternalSlot"===a.type)&&!a.variance&&!a.optional&&D(a)===D(r)||"ObjectTypeCallProperty"===a.type||o&&"DeclareFunction"===o.type),p=l&&("TypeAnnotation"===a.type||"TSTypeAnnotation"===a.type),c=p&&l&&("TypeAnnotation"===a.type||"TSTypeAnnotation"===a.type)&&"ArrowFunctionExpression"===s.type;y(a)&&(l=!0,p=!0),c&&u.push("(");let d=C(e,n,t,!1,!0),f=r.returnType||r.predicate||r.typeAnnotation?[l?" => ":": ",n("returnType"),n("predicate"),n("typeAnnotation")]:"",m=A(r,f);return u.push(m?i(d):d),f&&u.push(f),c&&u.push(")"),i(u)},printTupleType:function(e,t,n){let a=e.getValue(),s="TSTupleType"===a.type?"elementTypes":"types",p=a[s],d=u(p),D=d?o:"";return i(["[",l([D,F(e,t,s,n)]),c(d&&h(t,"all")?",":""),r(e,t,!0),D,"]"])},printIndexedAccessType:function(e,t,n){let r=e.getValue(),u="OptionalIndexedAccessType"===r.type&&r.optional?"?.[":"[";return[n("objectType"),u,n("indexType"),"]"]},shouldHugType:x,printJSDocType:function(e,t,n){let r=e.getValue();return[r.postfix?"":n,t("typeAnnotation"),r.postfix?n:""]}}}}),nr=E({"src/language-js/print/type-parameters.js"(e,t){v();var{printDanglingComments:n}=Jt(),{builders:{join:r,line:u,hardline:i,softline:a,group:s,indent:o,ifBreak:l}}=U(),{isTestCall:p,hasComment:c,CommentCheckFlags:d,isTSXFile:D,shouldPrintComma:f,getFunctionParameters:m,isObjectType:g,getTypeScriptMappedTypeModifier:y}=an(),{createGroupIdMapper:h}=De(),{shouldHugType:E}=tr(),{isArrowFunctionVariableDeclarator:C}=Zn(),A=h("typeParameters");function F(e,t){let r=e.getValue();if(!c(r,d.Dangling))return"";let u=!c(r,d.Line),a=n(e,t,u);return u?a:[a,i]}t.exports={printTypeParameter:function(e,t,n){let r=e.getValue(),u=["TSTypeParameter"===r.type&&r.const?"const ":""],i=e.getParentNode();return"TSMappedType"===i.type?(i.readonly&&u.push(y(i.readonly,"readonly")," "),u.push("[",n("name")),r.constraint&&u.push(" in ",n("constraint")),i.nameType&&u.push(" as ",e.callParent((()=>n("nameType")))),u.push("]"),u):(r.variance&&u.push(n("variance")),r.in&&u.push("in "),r.out&&u.push("out "),u.push(n("name")),r.bound&&u.push(": ",n("bound")),r.constraint&&u.push(" extends ",n("constraint")),r.default&&u.push(" = ",n("default")),u)},printTypeParameters:function(e,t,n,i){let c=e.getValue();if(!c[i])return"";if(!Array.isArray(c[i]))return n(i);let d=e.getNode(2),y=d&&p(d),h=e.match((e=>!(1===e[i].length&&g(e[i][0]))),void 0,((e,t)=>"typeAnnotation"===t),(e=>"Identifier"===e.type),C);if(0===c[i].length||!h&&(y||1===c[i].length&&("NullableTypeAnnotation"===c[i][0].type||E(c[i][0]))))return["<",r(", ",e.map(n,i)),F(e,t),">"];let v="TSTypeParameterInstantiation"===c.type?"":1===m(c).length&&D(t)&&!c[i][0].constraint&&"ArrowFunctionExpression"===e.getParentNode().type?",":f(t,"all")?l(","):"";return s(["<",o([a,r([",",u],e.map(n,i))]),v,a,">"],{id:A(c)})},getTypeParametersGroupId:A}}}),rr=E({"src/language-js/print/property.js"(e,t){v();var{printComments:n}=Jt(),{printString:r,printNumber:u}=De(),{isNumericLiteral:i,isSimpleNumber:a,isStringLiteral:s,isStringPropSafeToUnquote:o,rawText:l}=an(),{printAssignment:p}=Zn(),c=new WeakMap;function d(e,t,p){let d=e.getNode();if(d.computed)return["[",p("key"),"]"];let D=e.getParentNode(),{key:f}=d;if("consistent"===t.quoteProps&&!c.has(D)){let e=(D.properties||D.body||D.members).some((e=>!e.computed&&e.key&&s(e.key)&&!o(e,t)));c.set(D,e)}if(("Identifier"===f.type||i(f)&&a(u(l(f)))&&String(f.value)===u(l(f))&&"typescript"!==t.parser&&"babel-ts"!==t.parser)&&("json"===t.parser||"consistent"===t.quoteProps&&c.get(D))){let u=r(JSON.stringify("Identifier"===f.type?f.name:f.value.toString()),t);return e.call((e=>n(e,u,t)),"key")}return o(d,t)&&("as-needed"===t.quoteProps||"consistent"===t.quoteProps&&!c.get(D))?e.call((e=>n(e,/^\d/.test(f.value)?u(f.value):f.value,t)),"key"):p("key")}t.exports={printProperty:function(e,t,n){return e.getValue().shorthand?n("value"):p(e,t,n,d(e,t,n),":","value")},printPropertyKey:d}}}),ur=E({"src/language-js/print/function.js"(e,t){v();var n=Ut(),{printDanglingComments:r,printCommentsSeparately:u}=Jt(),i=w(),{getNextNonSpaceNonCommentCharacterIndex:a}=De(),{builders:{line:s,softline:o,group:l,indent:p,ifBreak:c,hardline:d,join:D,indentIfBreak:f},utils:{removeLines:m,willBreak:g}}=U(),{ArgExpansionBailout:y}=Ie(),{getFunctionParameters:h,hasLeadingOwnLineComment:E,isFlowAnnotationComment:C,isJsxNode:A,isTemplateOnItsOwnLine:F,shouldPrintComma:x,startsWithNoLookaheadToken:b,isBinaryish:S,isLineComment:T,hasComment:B,getComments:N,CommentCheckFlags:k,isCallLikeExpression:j,isCallExpression:P,getCallArguments:I,hasNakedLeftSide:O,getLeftSide:L}=an(),{locEnd:_}=_t(),{printFunctionParameters:M,shouldGroupFunctionParameters:$}=er(),{printPropertyKey:R}=rr(),{printFunctionTypeParameters:V}=Gn();function W(e,t,n){let r=e.getNode(),u=M(e,n,t),i=J(e,n,t),a=$(r,i),s=[V(e,t,n),l([a?l(u):u,i])];return r.body?s.push(" ",n("body")):s.push(t.semi?";":""),s}function q(e,t){return"always"!==t.arrowParens&&"avoid"===t.arrowParens&&function(e){let t=h(e);return!(1!==t.length||e.typeParameters||B(e,k.Dangling)||"Identifier"!==t[0].type||t[0].typeAnnotation||B(t[0])||t[0].optional||e.predicate||e.returnType)}(e.getValue())}function J(e,t,n){let r=e.getValue(),u=t("returnType");if(r.returnType&&C(n.originalText,r.returnType))return[" /*: ",u," */"];let i=[u];return r.returnType&&r.returnType.typeAnnotation&&i.unshift(": "),r.predicate&&i.push(r.returnType?" ":": ",t("predicate")),i}function H(e,t,n){let u=e.getValue(),a=t.semi?";":"",s=[];u.argument&&(function(e,t){if(E(e.originalText,t))return!0;if(O(t)){let n,r=t;for(;n=L(r);)if(r=n,E(e.originalText,r))return!0}return!1}(t,u.argument)?s.push([" (",p([d,n("argument")]),d,")"]):S(u.argument)||"SequenceExpression"===u.argument.type?s.push(l([c(" ("," "),p([o,n("argument")]),o,c(")")])):s.push(" ",n("argument")));let D=N(u),f=i(D),m=f&&T(f);return m&&s.push(a),B(u,k.Dangling)&&s.push(" ",r(e,t,!0)),m||s.push(a),s}t.exports={printFunction:function(e,t,n,r){let u=e.getValue(),i=!1;if(("FunctionDeclaration"===u.type||"FunctionExpression"===u.type)&&r&&r.expandLastArg){let t=e.getParentNode();P(t)&&I(t).length>1&&(i=!0)}let a=[];"TSDeclareFunction"===u.type&&u.declare&&a.push("declare "),u.async&&a.push("async "),u.generator?a.push("function* "):a.push("function "),u.id&&a.push(t("id"));let s=M(e,t,n,i),o=J(e,t,n),p=$(u,o);return a.push(V(e,n,t),l([p?l(s):s,o]),u.body?" ":"",t("body")),n.semi&&(u.declare||!u.body)&&a.push(";"),a},printArrowFunction:function(e,t,n,i){let d=e.getValue(),C=[],v=[],S=!1;if(function s(){let o=function(e,t,n,u){let i=[];if(e.getValue().async&&i.push("async "),q(e,t))i.push(n(["params",0]));else{let r=u&&(u.expandLastArg||u.expandFirstArg),a=J(e,n,t);if(r){if(g(a))throw new y;a=l(m(a))}i.push(l([M(e,n,t,r,!0),a]))}let s=r(e,t,!0,(e=>{let n=a(t.originalText,e,_);return!1!==n&&"=>"===t.originalText.slice(n,n+2)}));return s&&i.push(" ",s),i}(e,t,n,i);if(0===C.length)C.push(o);else{let{leading:n,trailing:r}=u(e,t);C.push([n,o]),v.unshift(r)}S=S||d.returnType&&h(d).length>0||d.typeParameters||h(d).some((e=>"Identifier"!==e.type)),"ArrowFunctionExpression"!==d.body.type||i&&i.expandLastArg?v.unshift(n("body",i)):(d=d.body,e.call(s,"body"))}(),C.length>1)return function(e,t,n,r,u,i){let a=e.getName(),d=e.getParentNode(),m=j(d)&&"callee"===a,g=Boolean(t&&t.assignmentLayout),y="BlockStatement"!==i.body.type&&"ObjectExpression"!==i.body.type&&"SequenceExpression"!==i.body.type,h=m&&y||t&&"chain-tail-arrow-chain"===t.assignmentLayout,E=Symbol("arrow-chain");return"SequenceExpression"===i.body.type&&(u=l(["(",p([o,u]),o,")"])),l([l(p([m||g?o:"",l(D([" =>",s],n),{shouldBreak:r})]),{id:E,shouldBreak:h})," =>",f(y?p([s,u]):[" ",u],{groupId:E}),m?c(o,"",{groupId:E}):""])}(e,i,C,S,v,d);let T=C;if(T.push(" =>"),!E(t.originalText,d.body)&&("ArrayExpression"===d.body.type||"ObjectExpression"===d.body.type||"BlockStatement"===d.body.type||A(d.body)||F(d.body,t.originalText)||"ArrowFunctionExpression"===d.body.type||"DoExpression"===d.body.type))return l([...T," ",v]);if("SequenceExpression"===d.body.type)return l([...T,l([" (",p([o,v]),o,")"])]);let w=(i&&i.expandLastArg||"JSXExpressionContainer"===e.getParentNode().type)&&!B(d),N=i&&i.expandLastArg&&x(t,"all"),k="ConditionalExpression"===d.body.type&&!b(d.body,(e=>"ObjectExpression"===e.type));return l([...T,l([p([s,k?c("","("):"",v,k?c("",")"):""]),w?[c(N?",":""),o]:""])])},printMethod:function(e,t,r){let u=e.getNode(),{kind:i}=u,a=u.value||u,s=[];return i&&"init"!==i&&"method"!==i&&"constructor"!==i?(n.ok("get"===i||"set"===i),s.push(i," ")):a.async&&s.push("async "),a.generator&&s.push("*"),s.push(R(e,t,r),u.optional||u.key.optional?"?":""),u===a?s.push(W(e,t,r)):"FunctionExpression"===a.type?s.push(e.call((e=>W(e,t,r)),"value")):s.push(r("value")),s},printReturnStatement:function(e,t,n){return["return",H(e,t,n)]},printThrowStatement:function(e,t,n){return["throw",H(e,t,n)]},printMethodInternal:W,shouldPrintParamsWithoutParens:q}}}),ir=E({"src/language-js/print/decorators.js"(e,t){v();var{isNonEmptyArray:n,hasNewline:r}=De(),{builders:{line:u,hardline:i,join:a,breakParent:s,group:o}}=U(),{locStart:l,locEnd:p}=_t(),{getParentExportDeclaration:c}=an();function d(e,t){return e.decorators.some((e=>r(t.originalText,p(e))))}function D(e){if("ExportDefaultDeclaration"!==e.type&&"ExportNamedDeclaration"!==e.type&&"DeclareExportDeclaration"!==e.type)return!1;let t=e.declaration&&e.declaration.decorators;return n(t)&&l(e)===l(t[0])}t.exports={printDecorators:function(e,t,r){let o=e.getValue(),{decorators:l}=o;if(!n(l)||D(e.getParentNode()))return;let p="ClassExpression"===o.type||"ClassDeclaration"===o.type||d(o,t);return[c(e)?i:p?s:"",a(u,e.map(r,"decorators")),u]},printClassMemberDecorators:function(e,t,n){let r=e.getValue();return o([a(u,e.map(n,"decorators")),d(r,t)?i:u])},printDecoratorsBeforeExport:function(e,t,n){return[a(i,e.map(n,"declaration","decorators")),i]},hasDecoratorsBeforeExport:D}}}),ar=E({"src/language-js/print/class.js"(e,t){v();var{isNonEmptyArray:n,createGroupIdMapper:r}=De(),{printComments:u,printDanglingComments:i}=Jt(),{builders:{join:a,line:s,hardline:o,softline:l,group:p,indent:c,ifBreak:d}}=U(),{hasComment:D,CommentCheckFlags:f}=an(),{getTypeParametersGroupId:m}=nr(),{printMethod:g}=ur(),{printOptionalToken:y,printTypeAnnotation:h,printDefiniteToken:E}=Gn(),{printPropertyKey:C}=rr(),{printAssignment:A}=Zn(),{printClassMemberDecorators:F}=ir();var x=r("heritageGroup");function b(e){return e.typeParameters&&!D(e.typeParameters,f.Trailing|f.Line)&&!function(e){return["superClass","extends","mixins","implements"].filter((t=>Boolean(e[t]))).length>1}(e)}function S(e,t,r,u){let l=e.getValue();if(!n(l[u]))return"";let D=i(e,t,!0,(e=>{let{marker:t}=e;return t===u}));return[b(l)?d(" ",s,{groupId:m(l.typeParameters)}):s,D,D&&o,u,p(c([s,a([",",s],e.map(r,u))]))]}function T(e,t,n){let r=n("superClass");return"AssignmentExpression"===e.getParentNode().type?p(d(["(",c([l,r]),l,")"],r)):r}t.exports={printClass:function(e,t,r){let i=e.getValue(),a=[];i.declare&&a.push("declare "),i.abstract&&a.push("abstract "),a.push("class");let o=i.id&&D(i.id,f.Trailing)||i.typeParameters&&D(i.typeParameters,f.Trailing)||i.superClass&&D(i.superClass)||n(i.extends)||n(i.mixins)||n(i.implements),l=[],d=[];if(i.id&&l.push(" ",r("id")),l.push(r("typeParameters")),i.superClass){let n=[T(e,0,r),r("superTypeParameters")],i=e.call((e=>["extends ",u(e,n,t)]),"superClass");o?d.push(s,p(i)):d.push(" ",i)}else d.push(S(e,t,r,"extends"));if(d.push(S(e,t,r,"mixins"),S(e,t,r,"implements")),o){let e;e=b(i)?[...l,c(d)]:c([...l,d]),a.push(p(e,{id:x(i)}))}else a.push(...l,...d);return a.push(" ",r("body")),a},printClassMethod:function(e,t,r){let u=e.getValue(),i=[];return n(u.decorators)&&i.push(F(e,t,r)),u.accessibility&&i.push(u.accessibility+" "),u.readonly&&i.push("readonly "),u.declare&&i.push("declare "),u.static&&i.push("static "),("TSAbstractMethodDefinition"===u.type||u.abstract)&&i.push("abstract "),u.override&&i.push("override "),i.push(g(e,t,r)),i},printClassProperty:function(e,t,r){let u=e.getValue(),i=[],a=t.semi?";":"";return n(u.decorators)&&i.push(F(e,t,r)),u.accessibility&&i.push(u.accessibility+" "),u.declare&&i.push("declare "),u.static&&i.push("static "),("TSAbstractPropertyDefinition"===u.type||"TSAbstractAccessorProperty"===u.type||u.abstract)&&i.push("abstract "),u.override&&i.push("override "),u.readonly&&i.push("readonly "),u.variance&&i.push(r("variance")),("ClassAccessorProperty"===u.type||"AccessorProperty"===u.type||"TSAbstractAccessorProperty"===u.type)&&i.push("accessor "),i.push(C(e,t,r),y(e),E(e),h(e,t,r)),[A(e,t,r,i," =","value"),a]},printHardlineAfterHeritage:function(e){return d(o,"",{groupId:x(e)})}}}}),sr=E({"src/language-js/print/interface.js"(e,t){v();var{isNonEmptyArray:n}=De(),{builders:{join:r,line:u,group:i,indent:a,ifBreak:s}}=U(),{hasComment:o,identity:l,CommentCheckFlags:p}=an(),{getTypeParametersGroupId:c}=nr(),{printTypeScriptModifiers:d}=Gn();t.exports={printInterface:function(e,t,D){let f=e.getValue(),m=[];f.declare&&m.push("declare "),"TSInterfaceDeclaration"===f.type&&m.push(f.abstract?"abstract ":"",d(e,t,D)),m.push("interface");let g=[],y=[];"InterfaceTypeAnnotation"!==f.type&&g.push(" ",D("id"),D("typeParameters"));let h=f.typeParameters&&!o(f.typeParameters,p.Trailing|p.Line);return n(f.extends)&&y.push(h?s(" ",u,{groupId:c(f.typeParameters)}):u,"extends ",(1===f.extends.length?l:a)(r([",",u],e.map(D,"extends")))),f.id&&o(f.id,p.Trailing)||n(f.extends)?h?m.push(i([...g,a(y)])):m.push(i(a([...g,...y]))):m.push(...g,...y),m.push(" ",D("body")),i(m)}}}}),or=E({"src/language-js/print/module.js"(e,t){v();var{isNonEmptyArray:n}=De(),{builders:{softline:r,group:u,indent:i,join:a,line:s,ifBreak:o,hardline:l}}=U(),{printDanglingComments:p}=Jt(),{hasComment:c,CommentCheckFlags:d,shouldPrintComma:D,needsHardlineAfterDanglingComment:f,isStringLiteral:m,rawText:g}=an(),{locStart:y,hasSameLoc:h}=_t(),{hasDecoratorsBeforeExport:E,printDecoratorsBeforeExport:C}=ir();function A(e,t,n){let r=e.getValue();if(!r.source)return"";let u=[];return x(r,t)||u.push(" from"),u.push(" ",n("source")),u}function F(e,t,l){let p=e.getValue();if(x(p,t))return"";let d=[" "];if(n(p.specifiers)){let n=[],f=[];e.each((()=>{let t=e.getValue().type;if("ExportNamespaceSpecifier"===t||"ExportDefaultSpecifier"===t||"ImportNamespaceSpecifier"===t||"ImportDefaultSpecifier"===t)n.push(l());else{if("ExportSpecifier"!==t&&"ImportSpecifier"!==t)throw new Error(`Unknown specifier type ${JSON.stringify(t)}`);f.push(l())}}),"specifiers"),d.push(a(", ",n)),f.length>0&&(n.length>0&&d.push(", "),f.length>1||n.length>0||p.specifiers.some((e=>c(e)))?d.push(u(["{",i([t.bracketSpacing?s:r,a([",",s],f)]),o(D(t)?",":""),t.bracketSpacing?s:r,"}"])):d.push(["{",t.bracketSpacing?" ":"",...f,t.bracketSpacing?" ":"","}"]))}else d.push("{}");return d}function x(e,t){let{type:r,importKind:u,source:i,specifiers:a}=e;return"ImportDeclaration"===r&&!n(a)&&"type"!==u&&!/{\s*}/.test(t.originalText.slice(y(e),y(i)))}function b(e,t,r){let u=e.getNode();return n(u.assertions)?[" assert {",t.bracketSpacing?" ":"",a(", ",e.map(r,"assertions")),t.bracketSpacing?" ":"","}"]:""}t.exports={printImportDeclaration:function(e,t,n){let r=e.getValue(),u=t.semi?";":"",i=[],{importKind:a}=r;return i.push("import"),a&&"value"!==a&&i.push(" ",a),i.push(F(e,t,n),A(e,t,n),b(e,t,n),u),i},printExportDeclaration:function(e,t,n){let r=e.getValue(),u=[];E(r)&&u.push(C(e,t,n));let{type:i,exportKind:a,declaration:s}=r;return u.push("export"),(r.default||"ExportDefaultDeclaration"===i)&&u.push(" default"),c(r,d.Dangling)&&(u.push(" ",p(e,t,!0)),f(r)&&u.push(l)),s?u.push(" ",n("declaration")):u.push("type"===a?" type":"",F(e,t,n),A(e,t,n),b(e,t,n)),function(e,t){if(!t.semi)return!1;let{type:n,declaration:r}=e,u=e.default||"ExportDefaultDeclaration"===n;if(!r)return!0;let{type:i}=r;return!(!u||"ClassDeclaration"===i||"FunctionDeclaration"===i||"TSInterfaceDeclaration"===i||"DeclareClass"===i||"DeclareFunction"===i||"TSDeclareFunction"===i||"EnumDeclaration"===i)}(r,t)&&u.push(";"),u},printExportAllDeclaration:function(e,t,n){let r=e.getValue(),u=t.semi?";":"",i=[],{exportKind:a,exported:s}=r;return i.push("export"),"type"===a&&i.push(" type"),i.push(" *"),s&&i.push(" as ",n("exported")),i.push(A(e,t,n),b(e,t,n),u),i},printModuleSpecifier:function(e,t,n){let r=e.getNode(),{type:u}=r,i=[],a="ImportSpecifier"===u?r.importKind:r.exportKind;a&&"value"!==a&&i.push(a," ");let s=u.startsWith("Import"),o=s?"imported":"local",l=s?"local":"exported",p=r[o],c=r[l],d="",D="";return"ExportNamespaceSpecifier"===u||"ImportNamespaceSpecifier"===u?d="*":p&&(d=n(o)),c&&!function(e){if("ImportSpecifier"!==e.type&&"ExportSpecifier"!==e.type)return!1;let{local:t,["ImportSpecifier"===e.type?"imported":"exported"]:n}=e;return!(t.type!==n.type||!h(t,n))&&(m(t)?t.value===n.value&&g(t)===g(n):"Identifier"===t.type&&t.name===n.name)}(r)&&(D=n(l)),i.push(d,d&&D?" as ":"",D),i}}}}),lr=E({"src/language-js/print/object.js"(e,t){v();var{printDanglingComments:n}=Jt(),{builders:{line:r,softline:u,group:i,indent:a,ifBreak:s,hardline:o}}=U(),{getLast:l,hasNewlineInRange:p,hasNewline:c,isNonEmptyArray:d}=De(),{shouldPrintComma:D,hasComment:f,getComments:m,CommentCheckFlags:g,isNextLineEmpty:y}=an(),{locStart:h,locEnd:E}=_t(),{printOptionalToken:C,printTypeAnnotation:A}=Gn(),{shouldHugFunctionParameters:F}=er(),{shouldHugType:x}=tr(),{printHardlineAfterHeritage:b}=ar();t.exports={printObject:function(e,t,v){let S,T=t.semi?";":"",B=e.getValue();S="TSTypeLiteral"===B.type?"members":"TSInterfaceBody"===B.type?"body":"properties";let w="ObjectTypeAnnotation"===B.type,N=[S];w&&N.push("indexers","callProperties","internalSlots");let k=N.map((e=>B[e][0])).sort(((e,t)=>h(e)-h(t)))[0],j=e.getParentNode(0),P=w&&j&&("InterfaceDeclaration"===j.type||"DeclareInterface"===j.type||"DeclareClass"===j.type)&&"body"===e.getName(),I="TSInterfaceBody"===B.type||P||"ObjectPattern"===B.type&&"FunctionDeclaration"!==j.type&&"FunctionExpression"!==j.type&&"ArrowFunctionExpression"!==j.type&&"ObjectMethod"!==j.type&&"ClassMethod"!==j.type&&"ClassPrivateMethod"!==j.type&&"AssignmentPattern"!==j.type&&"CatchClause"!==j.type&&B.properties.some((e=>e.value&&("ObjectPattern"===e.value.type||"ArrayPattern"===e.value.type)))||"ObjectPattern"!==B.type&&k&&p(t.originalText,h(B),h(k)),O=P?";":"TSInterfaceBody"===B.type||"TSTypeLiteral"===B.type?s(T,";"):",",L="RecordExpression"===B.type?"#{":B.exact?"{|":"{",_=B.exact?"|}":"}",M=[];for(let t of N)e.each((e=>{let t=e.getValue();M.push({node:t,printed:v(),loc:h(t)})}),t);N.length>1&&M.sort(((e,t)=>e.loc-t.loc));let $=[],R=M.map((e=>{let n=[...$,i(e.printed)];return $=[O,r],("TSPropertySignature"===e.node.type||"TSMethodSignature"===e.node.type||"TSConstructSignatureDeclaration"===e.node.type)&&f(e.node,g.PrettierIgnore)&&$.shift(),y(e.node,t)&&$.push(o),n}));if(B.inexact){let u;if(f(B,g.Dangling)){let i=f(B,g.Line);u=[n(e,t,!0),i||c(t.originalText,E(l(m(B))))?o:r,"..."]}else u=["..."];R.push([...$,...u])}let V,W=l(B[S]),q=!(B.inexact||W&&"RestElement"===W.type||W&&("TSPropertySignature"===W.type||"TSCallSignatureDeclaration"===W.type||"TSMethodSignature"===W.type||"TSConstructSignatureDeclaration"===W.type)&&f(W,g.PrettierIgnore));if(0===R.length){if(!f(B,g.Dangling))return[L,_,A(e,t,v)];V=i([L,n(e,t),u,_,C(e),A(e,t,v)])}else V=[P&&d(B.properties)?b(j):"",L,a([t.bracketSpacing?r:u,...R]),s(q&&(","!==O||D(t))?O:""),t.bracketSpacing?r:u,_,C(e),A(e,t,v)];return e.match((e=>"ObjectPattern"===e.type&&!e.decorators),((e,t,n)=>F(e)&&("params"===t||"parameters"===t||"this"===t||"rest"===t)&&0===n))||e.match(x,((e,t)=>"typeAnnotation"===t),((e,t)=>"typeAnnotation"===t),((e,t,n)=>F(e)&&("params"===t||"parameters"===t||"this"===t||"rest"===t)&&0===n))||!I&&e.match((e=>"ObjectPattern"===e.type),(e=>"AssignmentExpression"===e.type||"VariableDeclarator"===e.type))?V:i(V,{shouldBreak:I})}}}}),pr=E({"src/language-js/print/flow.js"(e,t){v();var n=Ut(),{printDanglingComments:r}=Jt(),{printString:u,printNumber:i}=De(),{builders:{hardline:a,softline:s,group:o,indent:l}}=U(),{getParentExportDeclaration:p,isFunctionNotation:c,isGetterOrSetter:d,rawText:D,shouldPrintComma:f}=an(),{locStart:m,locEnd:g}=_t(),{replaceTextEndOfLine:y}=V(),{printClass:h}=ar(),{printOpaqueType:E,printTypeAlias:C,printIntersectionType:A,printUnionType:F,printFunctionType:x,printTupleType:b,printIndexedAccessType:S}=tr(),{printInterface:T}=sr(),{printTypeParameter:B,printTypeParameters:w}=nr(),{printExportDeclaration:N,printExportAllDeclaration:k}=or(),{printArrayItems:j}=zn(),{printObject:P}=lr(),{printPropertyKey:I}=rr(),{printOptionalToken:O,printTypeAnnotation:L,printRestSpread:_}=Gn();function M(e,t){let r=p(e);return r?(n.strictEqual(r.type,"DeclareExportDeclaration"),t):["declare ",t]}t.exports={printFlow:function(e,t,p){let v=e.getValue(),$=t.semi?";":"",R=[];switch(v.type){case"DeclareClass":return M(e,h(e,t,p));case"DeclareFunction":return M(e,["function ",p("id"),v.predicate?" ":"",p("predicate"),$]);case"DeclareModule":return M(e,["module ",p("id")," ",p("body")]);case"DeclareModuleExports":return M(e,["module.exports",": ",p("typeAnnotation"),$]);case"DeclareVariable":return M(e,["var ",p("id"),$]);case"DeclareOpaqueType":return M(e,E(e,t,p));case"DeclareInterface":return M(e,T(e,t,p));case"DeclareTypeAlias":return M(e,C(e,t,p));case"DeclareExportDeclaration":return M(e,N(e,t,p));case"DeclareExportAllDeclaration":return M(e,k(e,t,p));case"OpaqueType":return E(e,t,p);case"TypeAlias":return C(e,t,p);case"IntersectionTypeAnnotation":return A(e,t,p);case"UnionTypeAnnotation":return F(e,t,p);case"FunctionTypeAnnotation":return x(e,t,p);case"TupleTypeAnnotation":return b(e,t,p);case"GenericTypeAnnotation":return[p("id"),w(e,t,p,"typeParameters")];case"IndexedAccessType":case"OptionalIndexedAccessType":return S(e,t,p);case"TypeAnnotation":return p("typeAnnotation");case"TypeParameter":return B(e,t,p);case"TypeofTypeAnnotation":return["typeof ",p("argument")];case"ExistsTypeAnnotation":return"*";case"EmptyTypeAnnotation":return"empty";case"MixedTypeAnnotation":return"mixed";case"ArrayTypeAnnotation":return[p("elementType"),"[]"];case"BooleanLiteralTypeAnnotation":return String(v.value);case"EnumDeclaration":return["enum ",p("id")," ",p("body")];case"EnumBooleanBody":case"EnumNumberBody":case"EnumStringBody":case"EnumSymbolBody":if("EnumSymbolBody"===v.type||v.explicitType){let e=null;switch(v.type){case"EnumBooleanBody":e="boolean";break;case"EnumNumberBody":e="number";break;case"EnumStringBody":e="string";break;case"EnumSymbolBody":e="symbol"}R.push("of ",e," ")}if(0!==v.members.length||v.hasUnknownMembers){let n=v.members.length>0?[a,j(e,t,"members",p),v.hasUnknownMembers||f(t)?",":""]:[];R.push(o(["{",l([...n,...v.hasUnknownMembers?[a,"..."]:[]]),r(e,t,!0),a,"}"]))}else R.push(o(["{",r(e,t),s,"}"]));return R;case"EnumBooleanMember":case"EnumNumberMember":case"EnumStringMember":return[p("id")," = ","object"==typeof v.init?p("init"):String(v.init)];case"EnumDefaultedMember":return p("id");case"FunctionTypeParam":{let t=v.name?p("name"):e.getParentNode().this===v?"this":"";return[t,O(e),t?": ":"",p("typeAnnotation")]}case"InterfaceDeclaration":case"InterfaceTypeAnnotation":return T(e,t,p);case"ClassImplements":case"InterfaceExtends":return[p("id"),p("typeParameters")];case"NullableTypeAnnotation":return["?",p("typeAnnotation")];case"Variance":{let{kind:e}=v;return n.ok("plus"===e||"minus"===e),"plus"===e?"+":"-"}case"ObjectTypeCallProperty":return v.static&&R.push("static "),R.push(p("value")),R;case"ObjectTypeIndexer":return[v.static?"static ":"",v.variance?p("variance"):"","[",p("id"),v.id?": ":"",p("key"),"]: ",p("value")];case"ObjectTypeProperty":{let n="";return v.proto?n="proto ":v.static&&(n="static "),[n,d(v)?v.kind+" ":"",v.variance?p("variance"):"",I(e,t,p),O(e),c(v)?"":": ",p("value")]}case"ObjectTypeAnnotation":return P(e,t,p);case"ObjectTypeInternalSlot":return[v.static?"static ":"","[[",p("id"),"]]",O(e),v.method?"":": ",p("value")];case"ObjectTypeSpreadProperty":return _(e,t,p);case"QualifiedTypeofIdentifier":case"QualifiedTypeIdentifier":return[p("qualification"),".",p("id")];case"StringLiteralTypeAnnotation":return y(u(D(v),t));case"NumberLiteralTypeAnnotation":n.strictEqual(typeof v.value,"number");case"BigIntLiteralTypeAnnotation":return v.extra?i(v.extra.raw):i(v.raw);case"TypeCastExpression":return["(",p("expression"),L(e,t,p),")"];case"TypeParameterDeclaration":case"TypeParameterInstantiation":{let n=w(e,t,p,"params");if("flow"===t.parser){let e=m(v),r=g(v),u=t.originalText.lastIndexOf("/*",e),i=t.originalText.indexOf("*/",r);if(-1!==u&&-1!==i){let e=t.originalText.slice(u+2,i).trim();if(e.startsWith("::")&&!e.includes("/*")&&!e.includes("*/"))return["/*:: ",n," */"]}}return n}case"InferredPredicate":return"%checks";case"DeclaredPredicate":return["%checks(",p("value"),")"];case"AnyTypeAnnotation":return"any";case"BooleanTypeAnnotation":return"boolean";case"BigIntTypeAnnotation":return"bigint";case"NullLiteralTypeAnnotation":return"null";case"NumberTypeAnnotation":return"number";case"SymbolTypeAnnotation":return"symbol";case"StringTypeAnnotation":return"string";case"VoidTypeAnnotation":return"void";case"ThisTypeAnnotation":return"this";case"Node":case"Printable":case"SourceLocation":case"Position":case"Statement":case"Function":case"Pattern":case"Expression":case"Declaration":case"Specifier":case"NamedSpecifier":case"Comment":case"MemberTypeAnnotation":case"Type":throw new Error("unprintable type: "+JSON.stringify(v.type))}}}}}),cr=E({"src/language-js/utils/is-ts-keyword-type.js"(e,t){v(),t.exports=function(e){let{type:t}=e;return t.startsWith("TS")&&t.endsWith("Keyword")}}}),dr=E({"src/language-js/print/ternary.js"(e,t){v();var{hasNewlineInRange:n}=De(),{isJsxNode:r,getComments:u,isCallExpression:i,isMemberExpression:a,isTSTypeExpression:s}=an(),{locStart:o,locEnd:l}=_t(),p=rn(),{builders:{line:c,softline:d,group:D,indent:f,align:m,ifBreak:g,dedent:y,breakParent:h}}=U();function E(e,t,n){let r=e.getValue(),u="ConditionalExpression"===r.type,i=u?"alternate":"falseType",a=e.getParentNode(),s=u?n("test"):[n("checkType")," ","extends"," ",n("extendsType")];return a.type===r.type&&a[i]===r?m(2,s):s}var C=new Map([["AssignmentExpression","right"],["VariableDeclarator","init"],["ReturnStatement","argument"],["ThrowStatement","argument"],["UnaryExpression","argument"],["YieldExpression","argument"]]);t.exports={printTernary:function(e,t,A){let F,v,x=e.getValue(),b="ConditionalExpression"===x.type,S=b?"consequent":"trueType",T=b?"alternate":"falseType",B=b?["test"]:["checkType","extendsType"],w=x[S],N=x[T],k=[],j=!1,P=e.getParentNode(),I=P.type===x.type&&B.some((e=>P[e]===x)),O=P.type===x.type&&!I,L=0;do{v=F||x,F=e.getParentNode(L),L++}while(F&&F.type===x.type&&B.every((e=>F[e]!==v)));let _=F||P,M=v;if(b&&(r(x[B[0]])||r(w)||r(N)||function(e){let t=[e];for(let e=0;e<t.length;e++){let n=t[e];for(let e of["test","consequent","alternate"]){let u=n[e];if(r(u))return!0;"ConditionalExpression"===u.type&&t.push(u)}}return!1}(M))){j=!0,O=!0;let e=e=>[g("("),f([d,e]),d,g(")")],t=e=>"NullLiteral"===e.type||"Literal"===e.type&&null===e.value||"Identifier"===e.type&&"undefined"===e.name;k.push(" ? ",t(w)?A(S):e(A(S))," : ",N.type===x.type||t(N)?A(T):e(A(T)))}else{let e=[c,"? ",w.type===x.type?g("","("):"",m(2,A(S)),w.type===x.type?g("",")"):"",c,": ",N.type===x.type?A(T):m(2,A(T))];k.push(P.type!==x.type||P[T]===x||I?e:t.useTabs?y(f(e)):m(Math.max(0,t.tabWidth-2),e))}let $=[...B.map((e=>u(x[e]))),u(w),u(N)].flat().some((e=>p(e)&&n(t.originalText,o(e),l(e)))),R=!j&&(a(P)||"NGPipeExpression"===P.type&&P.left===x)&&!P.computed,V=function(e){let t=e.getValue();if("ConditionalExpression"!==t.type)return!1;let n,r=t;for(let t=0;!n;t++){let u=e.getParentNode(t);i(u)&&u.callee===r||a(u)&&u.object===r||"TSNonNullExpression"===u.type&&u.expression===r?r=u:"NewExpression"===u.type&&u.callee===r||s(u)&&u.expression===r?(n=e.getParentNode(t+1),r=u):n=u}return r!==t&&n[C.get(n.type)]===r}(e),W=(q=[E(e,0,A),O?k:f(k),b&&R&&!V?d:""],P===_?D(q,{shouldBreak:$}):$?[q,h]:q);var q;return I||V?D([f([d,W]),d]):W}}}}),Dr=E({"src/language-js/print/statement.js"(e,t){v();var{builders:{hardline:n}}=U(),r=Vn(),{getLeftSidePathName:u,hasNakedLeftSide:i,isJsxNode:a,isTheOnlyJsxElementInMarkdown:s,hasComment:o,CommentCheckFlags:l,isNextLineEmpty:p}=an(),{shouldPrintParamsWithoutParens:c}=ur();function d(e,t,r,u){let i=e.getValue(),a=[],c="ClassBody"===i.type,d=function(e){for(let t=e.length-1;t>=0;t--){let n=e[t];if("EmptyStatement"!==n.type)return n}}(i[u]);return e.each(((e,u,i)=>{let m=e.getValue();if("EmptyStatement"===m.type)return;let g=r();t.semi||c||s(t,e)||!function(e,t){return"ExpressionStatement"===e.getNode().type&&e.call((e=>D(e,t)),"expression")}(e,t)?a.push(g):o(m,l.Leading)?a.push(r([],{needsSemi:!0})):a.push(";",g),!t.semi&&c&&f(m)&&function(e,t){let{type:n,name:r}=e.key;if(!(e.computed||"Identifier"!==n||"static"!==r&&"get"!==r&&"set"!==r&&"accessor"!==r||e.value||e.typeAnnotation))return!0;if(!t||t.static||t.accessibility)return!1;if(!t.computed){let e=t.key&&t.key.name;if("in"===e||"instanceof"===e)return!0}if(f(t)&&t.variance&&!t.static&&!t.declare)return!0;switch(t.type){case"ClassProperty":case"PropertyDefinition":case"TSAbstractPropertyDefinition":return t.computed;case"MethodDefinition":case"TSAbstractMethodDefinition":case"ClassMethod":case"ClassPrivateMethod":{if((t.value?t.value.async:t.async)||"get"===t.kind||"set"===t.kind)return!1;let e=t.value?t.value.generator:t.generator;return!(!t.computed&&!e)}case"TSIndexSignature":return!0}return!1}(m,i[u+1])&&a.push(";"),m!==d&&(a.push(n),p(m,t)&&a.push(n))}),u),a}function D(e,t){let n=e.getValue();switch(n.type){case"ParenthesizedExpression":case"TypeCastExpression":case"ArrayExpression":case"ArrayPattern":case"TemplateLiteral":case"TemplateElement":case"RegExpLiteral":return!0;case"ArrowFunctionExpression":if(!c(e,t))return!0;break;case"UnaryExpression":{let{prefix:e,operator:t}=n;if(e&&("+"===t||"-"===t))return!0;break}case"BindExpression":if(!n.object)return!0;break;case"Literal":if(n.regex)return!0;break;default:if(a(n))return!0}return!!r(e,t)||!!i(n)&&e.call((e=>D(e,t)),...u(e,n))}var f=e=>{let{type:t}=e;return"ClassProperty"===t||"PropertyDefinition"===t||"ClassPrivateProperty"===t||"ClassAccessorProperty"===t||"AccessorProperty"===t||"TSAbstractPropertyDefinition"===t||"TSAbstractAccessorProperty"===t};t.exports={printBody:function(e,t,n){return d(e,t,n,"body")},printSwitchCaseConsequent:function(e,t,n){return d(e,t,n,"consequent")}}}}),fr=E({"src/language-js/print/block.js"(e,t){v();var{printDanglingComments:n}=Jt(),{isNonEmptyArray:r}=De(),{builders:{hardline:u,indent:i}}=U(),{hasComment:a,CommentCheckFlags:s,isNextLineEmpty:o}=an(),{printHardlineAfterHeritage:l}=ar(),{printBody:p}=Dr();function c(e,t,i){let l=e.getValue(),c=r(l.directives),d=l.body.some((e=>"EmptyStatement"!==e.type)),D=a(l,s.Dangling);if(!c&&!d&&!D)return"";let f=[];if(c&&e.each(((e,n,r)=>{f.push(i()),(n<r.length-1||d||D)&&(f.push(u),o(e.getValue(),t)&&f.push(u))}),"directives"),d&&f.push(p(e,t,i)),D&&f.push(n(e,t,!0)),"Program"===l.type){let t=e.getParentNode();(!t||"ModuleExpression"!==t.type)&&f.push(u)}return f}t.exports={printBlock:function(e,t,n){let a=e.getValue(),s=[];if("StaticBlock"===a.type&&s.push("static "),"ClassBody"===a.type&&r(a.body)){let t=e.getParentNode();s.push(l(t))}s.push("{");let o=c(e,t,n);if(o)s.push(i([u,o]),u);else{let t=e.getParentNode(),n=e.getParentNode(1);"ArrowFunctionExpression"===t.type||"FunctionExpression"===t.type||"FunctionDeclaration"===t.type||"ObjectMethod"===t.type||"ClassMethod"===t.type||"ClassPrivateMethod"===t.type||"ForStatement"===t.type||"WhileStatement"===t.type||"DoWhileStatement"===t.type||"DoExpression"===t.type||"CatchClause"===t.type&&!n.finalizer||"TSModuleDeclaration"===t.type||"TSDeclareFunction"===t.type||"StaticBlock"===a.type||"ClassBody"===a.type||s.push(u)}return s.push("}"),s},printBlockBody:c}}}),mr=E({"src/language-js/print/typescript.js"(e,t){v();var{printDanglingComments:n}=Jt(),{hasNewlineInRange:r}=De(),{builders:{join:u,line:i,hardline:a,softline:s,group:o,indent:l,conditionalGroup:p,ifBreak:c}}=U(),{isStringLiteral:d,getTypeScriptMappedTypeModifier:D,shouldPrintComma:f,isCallExpression:m,isMemberExpression:g}=an(),y=cr(),{locStart:h,locEnd:E}=_t(),{printOptionalToken:C,printTypeScriptModifiers:A}=Gn(),{printTernary:F}=dr(),{printFunctionParameters:x,shouldGroupFunctionParameters:b}=er(),{printTemplateLiteral:S}=sn(),{printArrayItems:T}=zn(),{printObject:B}=lr(),{printClassProperty:w,printClassMethod:N}=ar(),{printTypeParameter:k,printTypeParameters:j}=nr(),{printPropertyKey:P}=rr(),{printFunction:I,printMethodInternal:O}=ur(),{printInterface:L}=sr(),{printBlock:_}=fr(),{printTypeAlias:M,printIntersectionType:$,printUnionType:R,printFunctionType:V,printTupleType:W,printIndexedAccessType:q,printJSDocType:J}=tr();t.exports={printTypescript:function(e,t,v){let U=e.getValue();if(!U.type.startsWith("TS"))return;if(y(U))return U.type.slice(2,-7).toLowerCase();let H=t.semi?";":"",G=[];switch(U.type){case"TSThisType":return"this";case"TSTypeAssertion":{let e=!("ArrayExpression"===U.expression.type||"ObjectExpression"===U.expression.type),t=o(["<",l([s,v("typeAnnotation")]),s,">"]),n=[c("("),l([s,v("expression")]),s,c(")")];return e?p([[t,v("expression")],[t,o(n,{shouldBreak:!0})],[t,v("expression")]]):o([t,v("expression")])}case"TSDeclareFunction":return I(e,v,t);case"TSExportAssignment":return["export = ",v("expression"),H];case"TSModuleBlock":return _(e,t,v);case"TSInterfaceBody":case"TSTypeLiteral":return B(e,t,v);case"TSTypeAliasDeclaration":return M(e,t,v);case"TSQualifiedName":return u(".",[v("left"),v("right")]);case"TSAbstractMethodDefinition":case"TSDeclareMethod":return N(e,t,v);case"TSAbstractAccessorProperty":case"TSAbstractPropertyDefinition":return w(e,t,v);case"TSInterfaceHeritage":case"TSExpressionWithTypeArguments":return G.push(v("expression")),U.typeParameters&&G.push(v("typeParameters")),G;case"TSTemplateLiteralType":return S(e,v,t);case"TSNamedTupleMember":return[v("label"),U.optional?"?":"",": ",v("elementType")];case"TSRestType":return["...",v("typeAnnotation")];case"TSOptionalType":return[v("typeAnnotation"),"?"];case"TSInterfaceDeclaration":return L(e,t,v);case"TSClassImplements":case"TSInstantiationExpression":return[v("expression"),v("typeParameters")];case"TSTypeParameterDeclaration":case"TSTypeParameterInstantiation":return j(e,t,v,"params");case"TSTypeParameter":return k(e,t,v);case"TSSatisfiesExpression":case"TSAsExpression":{let t="TSAsExpression"===U.type?"as":"satisfies";G.push(v("expression"),` ${t} `,v("typeAnnotation"));let n=e.getParentNode();return m(n)&&n.callee===U||g(n)&&n.object===U?o([l([s,...G]),s]):G}case"TSArrayType":return[v("elementType"),"[]"];case"TSPropertySignature":return U.readonly&&G.push("readonly "),G.push(P(e,t,v),C(e)),U.typeAnnotation&&G.push(": ",v("typeAnnotation")),U.initializer&&G.push(" = ",v("initializer")),G;case"TSParameterProperty":return U.accessibility&&G.push(U.accessibility+" "),U.export&&G.push("export "),U.static&&G.push("static "),U.override&&G.push("override "),U.readonly&&G.push("readonly "),G.push(v("parameter")),G;case"TSTypeQuery":return["typeof ",v("exprName"),v("typeParameters")];case"TSIndexSignature":{let n=e.getParentNode(),r=U.parameters.length>1?c(f(t)?",":""):"",i=o([l([s,u([", ",s],e.map(v,"parameters"))]),r,s]);return[U.export?"export ":"",U.accessibility?[U.accessibility," "]:"",U.static?"static ":"",U.readonly?"readonly ":"",U.declare?"declare ":"","[",U.parameters?i:"",U.typeAnnotation?"]: ":"]",U.typeAnnotation?v("typeAnnotation"):"","ClassBody"===n.type?H:""]}case"TSTypePredicate":return[U.asserts?"asserts ":"",v("parameterName"),U.typeAnnotation?[" is ",v("typeAnnotation")]:""];case"TSNonNullExpression":return[v("expression"),"!"];case"TSImportType":return[U.isTypeOf?"typeof ":"","import(",v(U.parameter?"parameter":"argument"),")",U.qualifier?[".",v("qualifier")]:"",j(e,t,v,"typeParameters")];case"TSLiteralType":return v("literal");case"TSIndexedAccessType":return q(e,t,v);case"TSConstructSignatureDeclaration":case"TSCallSignatureDeclaration":case"TSConstructorType":if("TSConstructorType"===U.type&&U.abstract&&G.push("abstract "),"TSCallSignatureDeclaration"!==U.type&&G.push("new "),G.push(o(x(e,v,t,!1,!0))),U.returnType||U.typeAnnotation){let e="TSConstructorType"===U.type;G.push(e?" => ":": ",v("returnType"),v("typeAnnotation"))}return G;case"TSTypeOperator":return[U.operator," ",v("typeAnnotation")];case"TSMappedType":{let u=r(t.originalText,h(U),E(U));return o(["{",l([t.bracketSpacing?i:s,v("typeParameter"),U.optional?D(U.optional,"?"):"",U.typeAnnotation?": ":"",v("typeAnnotation"),c(H)]),n(e,t,!0),t.bracketSpacing?i:s,"}"],{shouldBreak:u})}case"TSMethodSignature":{let n=U.kind&&"method"!==U.kind?`${U.kind} `:"";G.push(U.accessibility?[U.accessibility," "]:"",n,U.export?"export ":"",U.static?"static ":"",U.readonly?"readonly ":"",U.abstract?"abstract ":"",U.declare?"declare ":"",U.computed?"[":"",v("key"),U.computed?"]":"",C(e));let r=x(e,v,t,!1,!0),u=U.returnType?"returnType":"typeAnnotation",i=U[u],a=i?v(u):"",s=b(U,a);return G.push(s?o(r):r),i&&G.push(": ",o(a)),o(G)}case"TSNamespaceExportDeclaration":return G.push("export as namespace ",v("id")),t.semi&&G.push(";"),o(G);case"TSEnumDeclaration":return U.declare&&G.push("declare "),U.modifiers&&G.push(A(e,t,v)),U.const&&G.push("const "),G.push("enum ",v("id")," "),0===U.members.length?G.push(o(["{",n(e,t),s,"}"])):G.push(o(["{",l([a,T(e,t,"members",v),f(t,"es5")?",":""]),n(e,t,!0),a,"}"])),G;case"TSEnumMember":return U.computed?G.push("[",v("id"),"]"):G.push(v("id")),U.initializer&&G.push(" = ",v("initializer")),G;case"TSImportEqualsDeclaration":return U.isExport&&G.push("export "),G.push("import "),U.importKind&&"value"!==U.importKind&&G.push(U.importKind," "),G.push(v("id")," = ",v("moduleReference")),t.semi&&G.push(";"),o(G);case"TSExternalModuleReference":return["require(",v("expression"),")"];case"TSModuleDeclaration":{let n=e.getParentNode(),r=d(U.id),u="TSModuleDeclaration"===n.type,i=U.body&&"TSModuleDeclaration"===U.body.type;if(u)G.push(".");else{U.declare&&G.push("declare "),G.push(A(e,t,v));let n=t.originalText.slice(h(U),h(U.id));"Identifier"===U.id.type&&"global"===U.id.name&&!/namespace|module/.test(n)||G.push(r||/(?:^|\s)module(?:\s|$)/.test(n)?"module ":"namespace ")}return G.push(v("id")),i?G.push(v("body")):U.body?G.push(" ",o(v("body"))):G.push(H),G}case"TSConditionalType":return F(e,t,v);case"TSInferType":return["infer"," ",v("typeParameter")];case"TSIntersectionType":return $(e,t,v);case"TSUnionType":return R(e,t,v);case"TSFunctionType":return V(e,t,v);case"TSTupleType":return W(e,t,v);case"TSTypeReference":return[v("typeName"),j(e,t,v,"typeParameters")];case"TSTypeAnnotation":return v("typeAnnotation");case"TSEmptyBodyFunctionExpression":return O(e,t,v);case"TSJSDocAllType":return"*";case"TSJSDocUnknownType":return"?";case"TSJSDocNullableType":return J(e,v,"?");case"TSJSDocNonNullableType":return J(e,v,"!");default:throw new Error(`Unknown TypeScript node type: ${JSON.stringify(U.type)}.`)}}}}}),gr=E({"src/language-js/print/comment.js"(e,t){v();var{hasNewline:n}=De(),{builders:{join:r,hardline:u},utils:{replaceTextEndOfLine:i}}=U(),{isLineComment:a}=an(),{locStart:s,locEnd:o}=_t(),l=rn();t.exports={printComment:function(e,t){let p=e.getValue();if(a(p))return t.originalText.slice(s(p),o(p)).trimEnd();if(l(p)){if(function(e){let t=`*${e.value}*`.split("\n");return t.length>1&&t.every((e=>"*"===e.trim()[0]))}(p)){let e=function(e){let t=e.value.split("\n");return["/*",r(u,t.map(((e,n)=>0===n?e.trimEnd():" "+(n<t.length-1?e.trim():e.trimStart())))),"*/"]}(p);return p.trailing&&!n(t.originalText,s(p),{backwards:!0})?[u,e]:e}let e=o(p),a="*-/"===t.originalText.slice(e-3,e);return["/*",i(p.value),a?"*-/":"*/"]}throw new Error("Not a comment: "+JSON.stringify(p))}}}}),yr=E({"src/language-js/print/literal.js"(e,t){v();var{printString:n,printNumber:r}=De(),{replaceTextEndOfLine:u}=V(),{printDirective:i}=Gn();function a(e){return e.toLowerCase()}function s(e){let{pattern:t,flags:n}=e;return n=[...n].sort().join(""),`/${t}/${n}`}t.exports={printLiteral:function(e,t){let o=e.getNode();switch(o.type){case"RegExpLiteral":return s(o);case"BigIntLiteral":return a(o.bigint||o.extra.raw);case"NumericLiteral":return r(o.extra.raw);case"StringLiteral":return u(n(o.extra.raw,t));case"NullLiteral":return"null";case"BooleanLiteral":return String(o.value);case"DecimalLiteral":return r(o.value)+"m";case"Literal":{if(o.regex)return s(o.regex);if(o.bigint)return a(o.raw);if(o.decimal)return r(o.decimal)+"m";let{value:l}=o;return"number"==typeof l?r(o.raw):"string"==typeof l?function(e){if("expression"!==e.getName())return;let t=e.getParentNode();return"ExpressionStatement"===t.type&&t.directive}(e)?i(o.raw,t):u(n(o.raw,t)):String(l)}}}}}}),hr=E({"src/language-js/printer-estree.js"(e,t){v();var{printDanglingComments:n}=Jt(),{hasNewline:r}=De(),{builders:{join:u,line:i,hardline:a,softline:s,group:o,indent:l},utils:{replaceTextEndOfLine:p}}=U(),c=dn(),d=Dn(),{insertPragma:D}=Mn(),f=Rn(),m=Vn(),g=Wn(),{hasFlowShorthandAnnotationComment:y,hasComment:h,CommentCheckFlags:E,isTheOnlyJsxElementInMarkdown:C,isLineComment:A,isNextLineEmpty:F,needsHardlineAfterDanglingComment:x,hasIgnoreComment:b,isCallExpression:S,isMemberExpression:T,markerForIfWithoutBlockAndSameLineComment:B}=an(),{locStart:w,locEnd:N}=_t(),k=rn(),{printHtmlBinding:j,isVueEventBindingExpression:P}=qn(),{printAngular:I}=Jn(),{printJsx:O,hasJsxIgnoreComment:L}=Hn(),{printFlow:_}=pr(),{printTypescript:M}=mr(),{printOptionalToken:$,printBindExpressionCallee:R,printTypeAnnotation:V,adjustClause:W,printRestSpread:q,printDefiniteToken:J,printDirective:H}=Gn(),{printImportDeclaration:G,printExportDeclaration:z,printExportAllDeclaration:X,printModuleSpecifier:K}=or(),{printTernary:Y}=dr(),{printTemplateLiteral:Q}=sn(),{printArray:Z}=zn(),{printObject:ee}=lr(),{printClass:te,printClassMethod:ne,printClassProperty:re}=ar(),{printProperty:ue}=rr(),{printFunction:ie,printArrowFunction:ae,printMethod:se,printReturnStatement:oe,printThrowStatement:le}=ur(),{printCallExpression:pe}=Qn(),{printVariableDeclarator:ce,printAssignmentExpression:de}=Zn(),{printBinaryishExpression:fe}=Un(),{printSwitchCaseConsequent:me}=Dr(),{printMemberExpression:ge}=Kn(),{printBlock:ye,printBlockBody:he}=fr(),{printComment:Ee}=gr(),{printLiteral:Ce}=yr(),{printDecorators:Ae}=ir();t.exports={preprocess:g,print:function(e,t,c,d){let D=function(e,t,c,d){let D=e.getValue(),f=t.semi?";":"";if(!D)return"";if("string"==typeof D)return D;for(let n of[Ce,j,I,O,_,M]){let r=n(e,t,c);if(typeof r<"u")return r}let m=[];switch(D.type){case"JsExpressionRoot":return c("node");case"JsonRoot":return[c("node"),a];case"File":return D.program&&D.program.interpreter&&m.push(c(["program","interpreter"])),m.push(c("program")),m;case"Program":return he(e,t,c);case"EmptyStatement":return"";case"ExpressionStatement":{if("__vue_event_binding"===t.parser||"__vue_ts_event_binding"===t.parser){let t=e.getParentNode();if("Program"===t.type&&1===t.body.length&&t.body[0]===D)return[c("expression"),P(D.expression)?";":""]}let r=n(e,t,!0,(e=>{let{marker:t}=e;return t===B}));return[c("expression"),C(t,e)?"":f,r?[" ",r]:""]}case"ParenthesizedExpression":return h(D.expression)||"ObjectExpression"!==D.expression.type&&"ArrayExpression"!==D.expression.type?o(["(",l([s,c("expression")]),s,")"]):["(",c("expression"),")"];case"AssignmentExpression":return de(e,t,c);case"VariableDeclarator":return ce(e,t,c);case"BinaryExpression":case"LogicalExpression":return fe(e,t,c);case"AssignmentPattern":return[c("left")," = ",c("right")];case"OptionalMemberExpression":case"MemberExpression":return ge(e,t,c);case"MetaProperty":return[c("meta"),".",c("property")];case"BindExpression":return D.object&&m.push(c("object")),m.push(o(l([s,R(e,t,c)]))),m;case"Identifier":return[D.name,$(e),J(e),V(e,t,c)];case"V8IntrinsicIdentifier":return["%",D.name];case"SpreadElement":case"SpreadElementPattern":case"SpreadProperty":case"SpreadPropertyPattern":case"RestElement":return q(e,t,c);case"FunctionDeclaration":case"FunctionExpression":return ie(e,c,t,d);case"ArrowFunctionExpression":return ae(e,t,c,d);case"YieldExpression":return m.push("yield"),D.delegate&&m.push("*"),D.argument&&m.push(" ",c("argument")),m;case"AwaitExpression":if(m.push("await"),D.argument){m.push(" ",c("argument"));let t=e.getParentNode();if(S(t)&&t.callee===D||T(t)&&t.object===D){m=[l([s,...m]),s];let t=e.findAncestor((e=>"AwaitExpression"===e.type||"BlockStatement"===e.type));if(!t||"AwaitExpression"!==t.type)return o(m)}}return m;case"ExportDefaultDeclaration":case"ExportNamedDeclaration":return z(e,t,c);case"ExportAllDeclaration":return X(e,t,c);case"ImportDeclaration":return G(e,t,c);case"ImportSpecifier":case"ExportSpecifier":case"ImportNamespaceSpecifier":case"ExportNamespaceSpecifier":case"ImportDefaultSpecifier":case"ExportDefaultSpecifier":return K(e,t,c);case"ImportAttribute":return[c("key"),": ",c("value")];case"Import":return"import";case"BlockStatement":case"StaticBlock":case"ClassBody":return ye(e,t,c);case"ThrowStatement":return le(e,t,c);case"ReturnStatement":return oe(e,t,c);case"NewExpression":case"ImportExpression":case"OptionalCallExpression":case"CallExpression":return pe(e,t,c);case"ObjectExpression":case"ObjectPattern":case"RecordExpression":return ee(e,t,c);case"ObjectProperty":case"Property":return D.method||"get"===D.kind||"set"===D.kind?se(e,t,c):ue(e,t,c);case"ObjectMethod":return se(e,t,c);case"Decorator":return["@",c("expression")];case"ArrayExpression":case"ArrayPattern":case"TupleExpression":return Z(e,t,c);case"SequenceExpression":{let t=e.getParentNode(0);if("ExpressionStatement"===t.type||"ForStatement"===t.type){let t=[];return e.each(((e,n)=>{0===n?t.push(c()):t.push(",",l([i,c()]))}),"expressions"),o(t)}return o(u([",",i],e.map(c,"expressions")))}case"ThisExpression":return"this";case"Super":return"super";case"Directive":return[c("value"),f];case"DirectiveLiteral":return H(D.extra.raw,t);case"UnaryExpression":return m.push(D.operator),/[a-z]$/.test(D.operator)&&m.push(" "),h(D.argument)?m.push(o(["(",l([s,c("argument")]),s,")"])):m.push(c("argument")),m;case"UpdateExpression":return m.push(c("argument"),D.operator),D.prefix&&m.reverse(),m;case"ConditionalExpression":return Y(e,t,c);case"VariableDeclaration":{let t,n=e.map(c,"declarations"),r=e.getParentNode(),u="ForStatement"===r.type||"ForInStatement"===r.type||"ForOfStatement"===r.type,s=D.declarations.some((e=>e.init));return 1!==n.length||h(D.declarations[0])?n.length>0&&(t=l(n[0])):t=n[0],m=[D.declare?"declare ":"",D.kind,t?[" ",t]:"",l(n.slice(1).map((e=>[",",s&&!u?a:i,e])))],u&&r.body!==D||m.push(f),o(m)}case"WithStatement":return o(["with (",c("object"),")",W(D.body,c("body"))]);case"IfStatement":{let r=W(D.consequent,c("consequent")),u=o(["if (",o([l([s,c("test")]),s]),")",r]);if(m.push(u),D.alternate){let r=h(D.consequent,E.Trailing|E.Line)||x(D),u="BlockStatement"===D.consequent.type&&!r;m.push(u?" ":a),h(D,E.Dangling)&&m.push(n(e,t,!0),r?a:" "),m.push("else",o(W(D.alternate,c("alternate"),"IfStatement"===D.alternate.type)))}return m}case"ForStatement":{let r=W(D.body,c("body")),u=n(e,t,!0),a=u?[u,s]:"";return D.init||D.test||D.update?[a,o(["for (",o([l([s,c("init"),";",i,c("test"),";",i,c("update")]),s]),")",r])]:[a,o(["for (;;)",r])]}case"WhileStatement":return o(["while (",o([l([s,c("test")]),s]),")",W(D.body,c("body"))]);case"ForInStatement":return o(["for (",c("left")," in ",c("right"),")",W(D.body,c("body"))]);case"ForOfStatement":return o(["for",D.await?" await":""," (",c("left")," of ",c("right"),")",W(D.body,c("body"))]);case"DoWhileStatement":{let e=W(D.body,c("body"));return m=[o(["do",e])],"BlockStatement"===D.body.type?m.push(" "):m.push(a),m.push("while (",o([l([s,c("test")]),s]),")",f),m}case"DoExpression":return[D.async?"async ":"","do ",c("body")];case"BreakStatement":return m.push("break"),D.label&&m.push(" ",c("label")),m.push(f),m;case"ContinueStatement":return m.push("continue"),D.label&&m.push(" ",c("label")),m.push(f),m;case"LabeledStatement":return"EmptyStatement"===D.body.type?[c("label"),":;"]:[c("label"),": ",c("body")];case"TryStatement":return["try ",c("block"),D.handler?[" ",c("handler")]:"",D.finalizer?[" finally ",c("finalizer")]:""];case"CatchClause":if(D.param){let e=h(D.param,(e=>!k(e)||e.leading&&r(t.originalText,N(e))||e.trailing&&r(t.originalText,w(e),{backwards:!0}))),n=c("param");return["catch ",e?["(",l([s,n]),s,") "]:["(",n,") "],c("body")]}return["catch ",c("body")];case"SwitchStatement":return[o(["switch (",l([s,c("discriminant")]),s,")"])," {",D.cases.length>0?l([a,u(a,e.map(((e,n,r)=>{let u=e.getValue();return[c(),n!==r.length-1&&F(u,t)?a:""]}),"cases"))]):"",a,"}"];case"SwitchCase":{D.test?m.push("case ",c("test"),":"):m.push("default:"),h(D,E.Dangling)&&m.push(" ",n(e,t,!0));let r=D.consequent.filter((e=>"EmptyStatement"!==e.type));if(r.length>0){let n=me(e,t,c);m.push(1===r.length&&"BlockStatement"===r[0].type?[" ",n]:l([a,n]))}return m}case"DebuggerStatement":return["debugger",f];case"ClassDeclaration":case"ClassExpression":return te(e,t,c);case"ClassMethod":case"ClassPrivateMethod":case"MethodDefinition":return ne(e,t,c);case"ClassProperty":case"PropertyDefinition":case"ClassPrivateProperty":case"ClassAccessorProperty":case"AccessorProperty":return re(e,t,c);case"TemplateElement":return p(D.value.raw);case"TemplateLiteral":return Q(e,c,t);case"TaggedTemplateExpression":return[c("tag"),c("typeParameters"),c("quasi")];case"PrivateIdentifier":return["#",c("name")];case"PrivateName":return["#",c("id")];case"InterpreterDirective":return m.push("#!",D.value,a),F(D,t)&&m.push(a),m;case"TopicReference":return"%";case"ArgumentPlaceholder":return"?";case"ModuleExpression":{m.push("module {");let e=c("body");return e&&m.push(l([a,e]),a),m.push("}"),m}default:throw new Error("unknown type: "+JSON.stringify(D.type))}}(e,t,c,d);if(!D)return"";let f=e.getValue(),{type:g}=f;if("ClassMethod"===g||"ClassPrivateMethod"===g||"ClassProperty"===g||"ClassAccessorProperty"===g||"AccessorProperty"===g||"TSAbstractAccessorProperty"===g||"PropertyDefinition"===g||"TSAbstractPropertyDefinition"===g||"ClassPrivateProperty"===g||"MethodDefinition"===g||"TSAbstractMethodDefinition"===g||"TSDeclareMethod"===g)return D;let A=[D],v=Ae(e,t,c),b="ClassExpression"===f.type&&v;if(v&&(A=[...v,D],!b))return o(A);if(!m(e,t))return d&&d.needsSemi&&A.unshift(";"),1===A.length&&A[0]===D?D:A;if(b&&(A=[l([i,...A])]),A.unshift("("),d&&d.needsSemi&&A.unshift(";"),y(f)){let[e]=f.trailingComments;A.push(" /*",e.value.trimStart(),"*/"),e.printed=!0}return b&&A.push(i),A.push(")"),A},embed:c,insertPragma:D,massageAstNode:d,hasPrettierIgnore:e=>b(e)||L(e),willPrintOwnComments:f.willPrintOwnComments,canAttachComment:function(e){return e.type&&!k(e)&&!A(e)&&"EmptyStatement"!==e.type&&"TemplateElement"!==e.type&&"Import"!==e.type&&"TSEmptyBodyFunctionExpression"!==e.type},printComment:Ee,isBlockComment:k,handleComments:{avoidAstMutation:!0,ownLine:f.handleOwnLineComment,endOfLine:f.handleEndOfLineComment,remaining:f.handleRemainingComment},getCommentChildNodes:f.getCommentChildNodes}}}),Er=E({"src/language-js/printer-estree-json.js"(e,t){v();var{builders:{hardline:n,indent:r,join:u}}=U(),i=Wn();function a(e){return"key"===e.getName()&&"ObjectProperty"===e.getParentNode().type}var s=new Set(["start","end","extra","loc","comments","leadingComments","trailingComments","innerComments","errors","range","tokens"]);function o(e,t){let{type:n}=e;if("ObjectProperty"!==n){if("UnaryExpression"===n&&"+"===e.operator)return t.argument;if("ArrayExpression"!==n)return"TemplateLiteral"===n?{type:"StringLiteral",value:e.quasis[0].value.cooked}:void 0;for(let[n,r]of e.elements.entries())null===r&&t.elements.splice(n,0,{type:"NullLiteral"})}else{let{key:n}=e;"Identifier"===n.type?t.key={type:"StringLiteral",value:n.name}:"NumericLiteral"===n.type&&(t.key={type:"StringLiteral",value:String(n.value)})}}o.ignoredProperties=s,t.exports={preprocess:i,print:function(e,t,i){let s=e.getValue();switch(s.type){case"JsonRoot":return[i("node"),n];case"ArrayExpression":{if(0===s.elements.length)return"[]";let t=e.map((()=>null===e.getValue()?"null":i()),"elements");return["[",r([n,u([",",n],t)]),n,"]"]}case"ObjectExpression":return 0===s.properties.length?"{}":["{",r([n,u([",",n],e.map(i,"properties"))]),n,"}"];case"ObjectProperty":return[i("key"),": ",i("value")];case"UnaryExpression":return["+"===s.operator?"":s.operator,i("argument")];case"NullLiteral":return"null";case"BooleanLiteral":return s.value?"true":"false";case"StringLiteral":return JSON.stringify(s.value);case"NumericLiteral":return a(e)?JSON.stringify(String(s.value)):JSON.stringify(s.value);case"Identifier":return a(e)?JSON.stringify(s.name):s.name;case"TemplateLiteral":return i(["quasis",0]);case"TemplateElement":return JSON.stringify(s.value.cooked);default:throw new Error("unknown type: "+JSON.stringify(s.type))}},massageAstNode:o}}}),Cr=E({"src/common/common-options.js"(e,t){v();var n="Common";t.exports={bracketSpacing:{since:"0.0.0",category:n,type:"boolean",default:!0,description:"Print spaces between brackets.",oppositeDescription:"Do not print spaces between brackets."},singleQuote:{since:"0.0.0",category:n,type:"boolean",default:!1,description:"Use single quotes instead of double quotes."},proseWrap:{since:"1.8.2",category:n,type:"choice",default:[{since:"1.8.2",value:!0},{since:"1.9.0",value:"preserve"}],description:"How to wrap prose.",choices:[{since:"1.9.0",value:"always",description:"Wrap prose if it exceeds the print width."},{since:"1.9.0",value:"never",description:"Do not wrap prose."},{since:"1.9.0",value:"preserve",description:"Wrap prose as-is."}]},bracketSameLine:{since:"2.4.0",category:n,type:"boolean",default:!1,description:"Put > of opening tags on the last line instead of on a new line."},singleAttributePerLine:{since:"2.6.0",category:n,type:"boolean",default:!1,description:"Enforce single attribute per line in HTML, Vue and JSX."}}}}),Ar=E({"src/language-js/options.js"(e,t){v();var n=Cr(),r="JavaScript";t.exports={arrowParens:{since:"1.9.0",category:r,type:"choice",default:[{since:"1.9.0",value:"avoid"},{since:"2.0.0",value:"always"}],description:"Include parentheses around a sole arrow function parameter.",choices:[{value:"always",description:"Always include parens. Example: `(x) => x`"},{value:"avoid",description:"Omit parens when possible. Example: `x => x`"}]},bracketSameLine:n.bracketSameLine,bracketSpacing:n.bracketSpacing,jsxBracketSameLine:{since:"0.17.0",category:r,type:"boolean",description:"Put > on the last line instead of at a new line.",deprecated:"2.4.0"},semi:{since:"1.0.0",category:r,type:"boolean",default:!0,description:"Print semicolons.",oppositeDescription:"Do not print semicolons, except at the beginning of lines which may need them."},singleQuote:n.singleQuote,jsxSingleQuote:{since:"1.15.0",category:r,type:"boolean",default:!1,description:"Use single quotes in JSX."},quoteProps:{since:"1.17.0",category:r,type:"choice",default:"as-needed",description:"Change when properties in objects are quoted.",choices:[{value:"as-needed",description:"Only add quotes around object properties where required."},{value:"consistent",description:"If at least one property in an object requires quotes, quote all properties."},{value:"preserve",description:"Respect the input use of quotes in object properties."}]},trailingComma:{since:"0.0.0",category:r,type:"choice",default:[{since:"0.0.0",value:!1},{since:"0.19.0",value:"none"},{since:"2.0.0",value:"es5"}],description:"Print trailing commas wherever possible when multi-line.",choices:[{value:"es5",description:"Trailing commas where valid in ES5 (objects, arrays, etc.)"},{value:"none",description:"No trailing commas."},{value:"all",description:"Trailing commas wherever possible (including function arguments)."}]},singleAttributePerLine:n.singleAttributePerLine}}}),Fr=E({"src/language-js/parse/parsers.js"(){v()}}),vr=E({"node_modules/linguist-languages/data/JavaScript.json"(e,t){t.exports={name:"JavaScript",type:"programming",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",color:"#f1e05a",aliases:["js","node"],extensions:[".js","._js",".bones",".cjs",".es",".es6",".frag",".gs",".jake",".javascript",".jsb",".jscad",".jsfl",".jslib",".jsm",".jspre",".jss",".jsx",".mjs",".njs",".pac",".sjs",".ssjs",".xsjs",".xsjslib"],filenames:["Jakefile"],interpreters:["chakra","d8","gjs","js","node","nodejs","qjs","rhino","v8","v8-shell"],languageId:183}}}),xr=E({"node_modules/linguist-languages/data/TypeScript.json"(e,t){t.exports={name:"TypeScript",type:"programming",color:"#3178c6",aliases:["ts"],interpreters:["deno","ts-node"],extensions:[".ts",".cts",".mts"],tmScope:"source.ts",aceMode:"typescript",codemirrorMode:"javascript",codemirrorMimeType:"application/typescript",languageId:378}}}),br=E({"node_modules/linguist-languages/data/TSX.json"(e,t){t.exports={name:"TSX",type:"programming",color:"#3178c6",group:"TypeScript",extensions:[".tsx"],tmScope:"source.tsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",languageId:94901924}}}),Sr=E({"node_modules/linguist-languages/data/JSON.json"(e,t){t.exports={name:"JSON",type:"data",color:"#292929",tmScope:"source.json",aceMode:"json",codemirrorMode:"javascript",codemirrorMimeType:"application/json",aliases:["geojson","jsonl","topojson"],extensions:[".json",".4DForm",".4DProject",".avsc",".geojson",".gltf",".har",".ice",".JSON-tmLanguage",".jsonl",".mcmeta",".tfstate",".tfstate.backup",".topojson",".webapp",".webmanifest",".yy",".yyp"],filenames:[".arcconfig",".auto-changelog",".c8rc",".htmlhintrc",".imgbotconfig",".nycrc",".tern-config",".tern-project",".watchmanconfig","Pipfile.lock","composer.lock","mcmod.info"],languageId:174}}}),Tr=E({"node_modules/linguist-languages/data/JSON with Comments.json"(e,t){t.exports={name:"JSON with Comments",type:"data",color:"#292929",group:"JSON",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",aliases:["jsonc"],extensions:[".jsonc",".code-snippets",".sublime-build",".sublime-commands",".sublime-completions",".sublime-keymap",".sublime-macro",".sublime-menu",".sublime-mousemap",".sublime-project",".sublime-settings",".sublime-theme",".sublime-workspace",".sublime_metrics",".sublime_session"],filenames:[".babelrc",".devcontainer.json",".eslintrc.json",".jscsrc",".jshintrc",".jslintrc","api-extractor.json","devcontainer.json","jsconfig.json","language-configuration.json","tsconfig.json","tslint.json"],languageId:423}}}),Br=E({"node_modules/linguist-languages/data/JSON5.json"(e,t){t.exports={name:"JSON5",type:"data",color:"#267CB9",extensions:[".json5"],tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"application/json",languageId:175}}}),wr=E({"src/language-js/index.js"(e,t){v();var n=Qt(),r=hr(),u=Er(),i=Ar(),a=Fr(),s=[n(vr(),(e=>({since:"0.0.0",parsers:["babel","acorn","espree","meriyah","babel-flow","babel-ts","flow","typescript"],vscodeLanguageIds:["javascript","mongo"],interpreters:[...e.interpreters,"zx"],extensions:[...e.extensions.filter((e=>".jsx"!==e)),".wxs"]}))),n(vr(),(()=>({name:"Flow",since:"0.0.0",parsers:["flow","babel-flow"],vscodeLanguageIds:["javascript"],aliases:[],filenames:[],extensions:[".js.flow"]}))),n(vr(),(()=>({name:"JSX",since:"0.0.0",parsers:["babel","babel-flow","babel-ts","flow","typescript","espree","meriyah"],vscodeLanguageIds:["javascriptreact"],aliases:void 0,filenames:void 0,extensions:[".jsx"],group:"JavaScript",interpreters:void 0,tmScope:"source.js.jsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",color:void 0}))),n(xr(),(()=>({since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescript"]}))),n(br(),(()=>({since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescriptreact"]}))),n(Sr(),(()=>({name:"JSON.stringify",since:"1.13.0",parsers:["json-stringify"],vscodeLanguageIds:["json"],extensions:[".importmap"],filenames:["package.json","package-lock.json","composer.json"]}))),n(Sr(),(e=>({since:"1.5.0",parsers:["json"],vscodeLanguageIds:["json"],extensions:e.extensions.filter((e=>".jsonl"!==e))}))),n(Tr(),(e=>({since:"1.5.0",parsers:["json"],vscodeLanguageIds:["jsonc"],filenames:[...e.filenames,".eslintrc",".swcrc"]}))),n(Br(),(()=>({since:"1.13.0",parsers:["json5"],vscodeLanguageIds:["json5"]})))],o={estree:r,"estree-json":u};t.exports={languages:s,options:i,printers:o,parsers:a}}}),Nr=E({"src/language-css/clean.js"(e,t){v();var{isFrontMatterNode:n}=De(),r=w(),u=new Set(["raw","raws","sourceIndex","source","before","after","trailingComma"]);function i(e,t,u){if(n(e)&&"yaml"===e.lang&&delete t.value,"css-comment"===e.type&&"css-root"===u.type&&u.nodes.length>0&&((u.nodes[0]===e||n(u.nodes[0])&&u.nodes[1]===e)&&(delete t.text,/^\*\s*@(?:format|prettier)\s*$/.test(e.text))||"css-root"===u.type&&r(u.nodes)===e))return null;if("value-root"===e.type&&delete t.text,("media-query"===e.type||"media-query-list"===e.type||"media-feature-expression"===e.type)&&delete t.value,"css-rule"===e.type&&delete t.params,"selector-combinator"===e.type&&(t.value=t.value.replace(/\s+/g," ")),"media-feature"===e.type&&(t.value=t.value.replace(/ /g,"")),("value-word"===e.type&&(e.isColor&&e.isHex||["initial","inherit","unset","revert"].includes(t.value.replace().toLowerCase()))||"media-feature"===e.type||"selector-root-invalid"===e.type||"selector-pseudo"===e.type)&&(t.value=t.value.toLowerCase()),"css-decl"===e.type&&(t.prop=t.prop.toLowerCase()),("css-atrule"===e.type||"css-import"===e.type)&&(t.name=t.name.toLowerCase()),"value-number"===e.type&&(t.unit=t.unit.toLowerCase()),("media-feature"===e.type||"media-keyword"===e.type||"media-type"===e.type||"media-unknown"===e.type||"media-url"===e.type||"media-value"===e.type||"selector-attribute"===e.type||"selector-string"===e.type||"selector-class"===e.type||"selector-combinator"===e.type||"value-string"===e.type)&&t.value&&(t.value=function(e){return e.replace(/'/g,'"').replace(/\\([^\dA-Fa-f])/g,"$1")}(t.value)),"selector-attribute"===e.type&&(t.attribute=t.attribute.trim(),t.namespace&&"string"==typeof t.namespace&&(t.namespace=t.namespace.trim(),0===t.namespace.length&&(t.namespace=!0)),t.value&&(t.value=t.value.trim().replace(/^["']|["']$/g,""),delete t.quoted)),("media-value"===e.type||"media-type"===e.type||"value-number"===e.type||"selector-root-invalid"===e.type||"selector-class"===e.type||"selector-combinator"===e.type||"selector-tag"===e.type)&&t.value&&(t.value=t.value.replace(/([\d+.Ee-]+)([A-Za-z]*)/g,((e,t,n)=>{let r=Number(t);return Number.isNaN(r)?e:r+n.toLowerCase()}))),"selector-tag"===e.type){let n=e.value.toLowerCase();["from","to"].includes(n)&&(t.value=n)}if("css-atrule"===e.type&&"supports"===e.name.toLowerCase()&&delete t.value,"selector-unknown"===e.type&&delete t.value,"value-comma_group"===e.type){let n=e.groups.findIndex((e=>"value-number"===e.type&&"..."===e.unit));-1!==n&&(t.groups[n].unit="",t.groups.splice(n+1,0,{type:"value-word",value:"...",isColor:!1,isHex:!1}))}return"value-comma_group"===e.type&&e.groups.some((e=>"value-atword"===e.type&&e.value.endsWith("[")||"value-word"===e.type&&e.value.startsWith("]")))?{type:"value-atword",value:e.groups.map((e=>e.value)).join(""),group:{open:null,close:null,groups:[],type:"value-paren_group"}}:void 0}i.ignoredProperties=u,t.exports=i}}),kr=E({"src/utils/front-matter/print.js"(e,t){v();var{builders:{hardline:n,markAsRoot:r}}=U();t.exports=function(e,t){if("yaml"===e.lang){let u=e.value.trim(),i=u?t(u,{parser:"yaml"},{stripTrailingHardline:!0}):"";return r([e.startDelimiter,n,i,i?n:"",e.endDelimiter])}}}}),jr=E({"src/language-css/embed.js"(e,t){v();var{builders:{hardline:n}}=U(),r=kr();t.exports=function(e,t,u){let i=e.getValue();if("front-matter"===i.type){let e=r(i,u);return e?[e,n]:""}}}}),Pr=E({"src/utils/front-matter/parse.js"(e,t){v();var n=new RegExp("^(?<startDelimiter>-{3}|\\+{3})(?<language>[^\\n]*)\\n(?:|(?<value>.*?)\\n)(?<endDelimiter>\\k<startDelimiter>|\\.{3})[^\\S\\n]*(?:\\n|$)","s");t.exports=function(e){let t=e.match(n);if(!t)return{content:e};let{startDelimiter:r,language:u,value:i="",endDelimiter:a}=t.groups,s=u.trim()||"yaml";if("+++"===r&&(s="toml"),"yaml"!==s&&r!==a)return{content:e};let[o]=t;return{frontMatter:{type:"front-matter",lang:s,value:i,startDelimiter:r,endDelimiter:a,raw:o.replace(/\n$/,"")},content:o.replace(/[^\n]/g," ")+e.slice(o.length)}}}}),Ir=E({"src/language-css/pragma.js"(e,t){v();var n=Mn(),r=Pr();t.exports={hasPragma:function(e){return n.hasPragma(r(e).content)},insertPragma:function(e){let{frontMatter:t,content:u}=r(e);return(t?t.raw+"\n\n":"")+n.insertPragma(u)}}}}),Or=E({"src/language-css/utils/index.js"(e,t){v();var n=new Set(["red","green","blue","alpha","a","rgb","hue","h","saturation","s","lightness","l","whiteness","w","blackness","b","tint","shade","blend","blenda","contrast","hsl","hsla","hwb","hwba"]);function r(e,t){let n,r=Array.isArray(t)?t:[t],u=-1;for(;n=e.getParentNode(++u);)if(r.includes(n.type))return u;return-1}function u(e,t){let n=r(e,t);return-1===n?null:e.getParentNode(n)}var i=new Set(["initial","inherit","unset","revert"]);function a(e){return"value-operator"===e.type&&"*"===e.value}function s(e){return"value-operator"===e.type&&"/"===e.value}function o(e){return"value-operator"===e.type&&"+"===e.value}function l(e){return"value-operator"===e.type&&"-"===e.value}function p(e){return"value-operator"===e.type&&"%"===e.value}function c(e){var t,n;return"value-comma_group"===e.type&&"value-colon"===(null===(t=e.groups)||void 0===t||null===(n=t[1])||void 0===n?void 0:n.type)}function d(e){var t;return"value-paren_group"===e.type&&(null===(t=e.groups)||void 0===t?void 0:t[0])&&c(e.groups[0])}function D(e){return"value-colon"===(null==e?void 0:e.type)}t.exports={getAncestorCounter:r,getAncestorNode:u,getPropOfDeclNode:function(e){var t;let n=u(e,"css-decl");return null==n||null===(t=n.prop)||void 0===t?void 0:t.toLowerCase()},maybeToLowerCase:function(e){return e.includes("$")||e.includes("@")||e.includes("#")||e.startsWith("%")||e.startsWith("--")||e.startsWith(":--")||e.includes("(")&&e.includes(")")?e:e.toLowerCase()},insideValueFunctionNode:function(e,t){var n;let r=u(e,"value-func");return(null==r||null===(n=r.value)||void 0===n?void 0:n.toLowerCase())===t},insideICSSRuleNode:function(e){var t;let n=u(e,"css-rule"),r=null==n||null===(t=n.raws)||void 0===t?void 0:t.selector;return r&&(r.startsWith(":import")||r.startsWith(":export"))},insideAtRuleNode:function(e,t){let n=Array.isArray(t)?t:[t],r=u(e,"css-atrule");return r&&n.includes(r.name.toLowerCase())},insideURLFunctionInImportAtRuleNode:function(e){let t=e.getValue(),n=u(e,"css-atrule");return"import"===(null==n?void 0:n.name)&&"url"===t.groups[0].value&&2===t.groups.length},isKeyframeAtRuleKeywords:function(e,t){let n=u(e,"css-atrule");return(null==n?void 0:n.name)&&n.name.toLowerCase().endsWith("keyframes")&&["from","to"].includes(t.toLowerCase())},isWideKeywords:function(e){return i.has(e.toLowerCase())},isLastNode:function(e,t){var n;let r=null===(n=e.getParentNode())||void 0===n?void 0:n.nodes;return r&&r.indexOf(t)===r.length-1},isSCSSControlDirectiveNode:function(e){return"css-atrule"===e.type&&["if","else","for","each","while"].includes(e.name)},isDetachedRulesetDeclarationNode:function(e){let{selector:t}=e;return!!t&&("string"==typeof t&&/^@.+:.*$/.test(t)||t.value&&/^@.+:.*$/.test(t.value))},isRelationalOperatorNode:function(e){return"value-word"===e.type&&["<",">","<=",">="].includes(e.value)},isEqualityOperatorNode:function(e){return"value-word"===e.type&&["==","!="].includes(e.value)},isMultiplicationNode:a,isDivisionNode:s,isAdditionNode:o,isSubtractionNode:l,isModuloNode:p,isMathOperatorNode:function(e){return a(e)||s(e)||o(e)||l(e)||p(e)},isEachKeywordNode:function(e){return"value-word"===e.type&&"in"===e.value},isForKeywordNode:function(e){return"value-word"===e.type&&["from","through","end"].includes(e.value)},isURLFunctionNode:function(e){return"value-func"===e.type&&"url"===e.value.toLowerCase()},isIfElseKeywordNode:function(e){return"value-word"===e.type&&["and","or","not"].includes(e.value)},hasComposesNode:function(e){var t,n;return"value-root"===(null===(t=e.value)||void 0===t?void 0:t.type)&&"value-value"===(null===(n=e.value.group)||void 0===n?void 0:n.type)&&"composes"===e.prop.toLowerCase()},hasParensAroundNode:function(e){var t,n,r;return"value-paren_group"===(null===(t=e.value)||void 0===t||null===(n=t.group)||void 0===n||null===(r=n.group)||void 0===r?void 0:r.type)&&null!==e.value.group.group.open&&null!==e.value.group.group.close},hasEmptyRawBefore:function(e){var t;return""===(null===(t=e.raws)||void 0===t?void 0:t.before)},isDetachedRulesetCallNode:function(e){var t;return(null===(t=e.raws)||void 0===t?void 0:t.params)&&/^\(\s*\)$/.test(e.raws.params)},isTemplatePlaceholderNode:function(e){return e.name.startsWith("prettier-placeholder")},isTemplatePropNode:function(e){return e.prop.startsWith("@prettier-placeholder")},isPostcssSimpleVarNode:function(e,t){return"$$"===e.value&&"value-func"===e.type&&"value-word"===(null==t?void 0:t.type)&&!t.raws.before},isKeyValuePairNode:c,isKeyValuePairInParenGroupNode:d,isKeyInValuePairNode:function(e,t){if(!c(t))return!1;let{groups:n}=t,r=n.indexOf(e);return-1!==r&&D(n[r+1])},isSCSSMapItemNode:function(e){var t;let n=e.getValue();if(0===n.groups.length)return!1;let r=e.getParentNode(1);if(!(d(n)||r&&d(r)))return!1;let i=u(e,"css-decl");return!!(null!=i&&null!==(t=i.prop)&&void 0!==t&&t.startsWith("$")||d(r)||"value-func"===r.type)},isInlineValueCommentNode:function(e){return"value-comment"===e.type&&e.inline},isHashNode:function(e){return"value-word"===e.type&&"#"===e.value},isLeftCurlyBraceNode:function(e){return"value-word"===e.type&&"{"===e.value},isRightCurlyBraceNode:function(e){return"value-word"===e.type&&"}"===e.value},isWordNode:function(e){return["value-word","value-atword"].includes(e.type)},isColonNode:D,isMediaAndSupportsKeywords:function(e){return e.value&&["not","and","or"].includes(e.value.toLowerCase())},isColorAdjusterFuncNode:function(e){return"value-func"===e.type&&n.has(e.value.toLowerCase())},lastLineHasInlineComment:function(e){return/\/\//.test(e.split(/[\n\r]/).pop())},isAtWordPlaceholderNode:function(e){return"value-atword"===(null==e?void 0:e.type)&&e.value.startsWith("prettier-placeholder-")},isConfigurationNode:function(e,t){var n,r;if("("!==(null===(n=e.open)||void 0===n?void 0:n.value)||")"!==(null===(r=e.close)||void 0===r?void 0:r.value)||e.groups.some((e=>"value-comma_group"!==e.type)))return!1;if("value-comma_group"===t.type){let n=t.groups.indexOf(e)-1,r=t.groups[n];if("value-word"===(null==r?void 0:r.type)&&"with"===r.value)return!0}return!1},isParenGroupNode:function(e){var t,n;return"value-paren_group"===e.type&&"("===(null===(t=e.open)||void 0===t?void 0:t.value)&&")"===(null===(n=e.close)||void 0===n?void 0:n.value)}}}}),Lr=E({"src/utils/line-column-to-index.js"(e,t){v(),t.exports=function(e,t){let n=0;for(let r=0;r<e.line-1;++r)n=t.indexOf("\n",n)+1;return n+e.column}}}),_r=E({"src/language-css/loc.js"(e,t){v();var{skipEverythingButNewLine:n}=oe(),r=w(),u=Lr();function i(e,t){return"number"==typeof e.sourceIndex?e.sourceIndex:e.source?u(e.source.start,t)-1:null}function a(e,t){if("css-comment"===e.type&&e.inline)return n(t,e.source.startOffset);let i=e.nodes&&r(e.nodes);return i&&e.source&&!e.source.end&&(e=i),e.source&&e.source.end?u(e.source.end,t):null}function s(e,t,n){e.source&&(e.source.startOffset=i(e,n)+t,e.source.endOffset=a(e,n)+t);for(let r in e){let u=e[r];"source"===r||!u||"object"!=typeof u||s(u,t,n)}}function o(e){let t=e.source.startOffset;return"string"==typeof e.prop&&(t+=e.prop.length),"css-atrule"===e.type&&"string"==typeof e.name&&(t+=1+e.name.length+e.raws.afterName.match(/^\s*:?\s*/)[0].length),"css-atrule"!==e.type&&e.raws&&"string"==typeof e.raws.between&&(t+=e.raws.between.length),t}t.exports={locStart:function(e){return e.source.startOffset},locEnd:function(e){return e.source.endOffset},calculateLoc:function e(t,n){t.source&&(t.source.startOffset=i(t,n),t.source.endOffset=a(t,n));for(let r in t){let u=t[r];"source"===r||!u||"object"!=typeof u||("value-root"===u.type||"value-unknown"===u.type?s(u,o(t),u.text||u.value):e(u,n))}},replaceQuotesInInlineComments:function(e){let t,n="initial",r="initial",u=!1,i=[];for(let a=0;a<e.length;a++){let s=e[a];switch(n){case"initial":if("'"===s){n="single-quotes";continue}if('"'===s){n="double-quotes";continue}if(("u"===s||"U"===s)&&"url("===e.slice(a,a+4).toLowerCase()){n="url",a+=3;continue}if("*"===s&&"/"===e[a-1]){n="comment-block";continue}if("/"===s&&"/"===e[a-1]){n="comment-inline",t=a-1;continue}continue;case"single-quotes":if("'"===s&&"\\"!==e[a-1]&&(n=r,r="initial"),"\n"===s||"\r"===s)return e;continue;case"double-quotes":if('"'===s&&"\\"!==e[a-1]&&(n=r,r="initial"),"\n"===s||"\r"===s)return e;continue;case"url":if(")"===s&&(n="initial"),"\n"===s||"\r"===s)return e;if("'"===s){n="single-quotes",r="url";continue}if('"'===s){n="double-quotes",r="url";continue}continue;case"comment-block":"/"===s&&"*"===e[a-1]&&(n="initial");continue;case"comment-inline":('"'===s||"'"===s||"*"===s)&&(u=!0),("\n"===s||"\r"===s)&&(u&&i.push([t,a]),n="initial",u=!1);continue}}for(let[t,n]of i)e=e.slice(0,t)+e.slice(t,n).replace(/["'*]/g," ")+e.slice(n);return e}}}}),Mr=E({"src/language-css/utils/is-less-parser.js"(e,t){v(),t.exports=function(e){return"css"===e.parser||"less"===e.parser}}}),$r=E({"src/language-css/utils/is-scss.js"(e,t){v(),t.exports=function(e,t){return"less"===e||"scss"===e?"scss"===e:/(?:\w\s*:\s*[^:}]+|#){|@import[^\n]+(?:url|,)/.test(t)}}}),Rr=E({"src/language-css/utils/css-units.evaluate.js"(e,t){t.exports={em:"em",rem:"rem",ex:"ex",rex:"rex",cap:"cap",rcap:"rcap",ch:"ch",rch:"rch",ic:"ic",ric:"ric",lh:"lh",rlh:"rlh",vw:"vw",svw:"svw",lvw:"lvw",dvw:"dvw",vh:"vh",svh:"svh",lvh:"lvh",dvh:"dvh",vi:"vi",svi:"svi",lvi:"lvi",dvi:"dvi",vb:"vb",svb:"svb",lvb:"lvb",dvb:"dvb",vmin:"vmin",svmin:"svmin",lvmin:"lvmin",dvmin:"dvmin",vmax:"vmax",svmax:"svmax",lvmax:"lvmax",dvmax:"dvmax",cm:"cm",mm:"mm",q:"Q",in:"in",pt:"pt",pc:"pc",px:"px",deg:"deg",grad:"grad",rad:"rad",turn:"turn",s:"s",ms:"ms",hz:"Hz",khz:"kHz",dpi:"dpi",dpcm:"dpcm",dppx:"dppx",x:"x"}}}),Vr=E({"src/language-css/utils/print-unit.js"(e,t){v();var n=Rr();t.exports=function(e){let t=e.toLowerCase();return Object.prototype.hasOwnProperty.call(n,t)?n[t]:e}}}),Wr=E({"src/language-css/printer-postcss.js"(e,t){v();var n=w(),{printNumber:r,printString:u,hasNewline:i,isFrontMatterNode:a,isNextLineEmpty:s,isNonEmptyArray:o}=De(),{builders:{join:l,line:p,hardline:c,softline:d,group:D,fill:f,indent:m,dedent:g,ifBreak:y,breakParent:h},utils:{removeLines:E,getDocParts:C}}=U(),A=Nr(),F=jr(),{insertPragma:x}=Ir(),{getAncestorNode:b,getPropOfDeclNode:S,maybeToLowerCase:T,insideValueFunctionNode:B,insideICSSRuleNode:N,insideAtRuleNode:k,insideURLFunctionInImportAtRuleNode:j,isKeyframeAtRuleKeywords:P,isWideKeywords:I,isLastNode:O,isSCSSControlDirectiveNode:L,isDetachedRulesetDeclarationNode:_,isRelationalOperatorNode:M,isEqualityOperatorNode:$,isMultiplicationNode:R,isDivisionNode:V,isAdditionNode:W,isSubtractionNode:q,isMathOperatorNode:J,isEachKeywordNode:H,isForKeywordNode:G,isURLFunctionNode:z,isIfElseKeywordNode:X,hasComposesNode:K,hasParensAroundNode:Y,hasEmptyRawBefore:Q,isKeyValuePairNode:Z,isKeyInValuePairNode:ee,isDetachedRulesetCallNode:te,isTemplatePlaceholderNode:ne,isTemplatePropNode:re,isPostcssSimpleVarNode:ue,isSCSSMapItemNode:ie,isInlineValueCommentNode:ae,isHashNode:se,isLeftCurlyBraceNode:oe,isRightCurlyBraceNode:le,isWordNode:pe,isColonNode:ce,isMediaAndSupportsKeywords:de,isColorAdjusterFuncNode:fe,lastLineHasInlineComment:me,isAtWordPlaceholderNode:ge,isConfigurationNode:ye,isParenGroupNode:he}=Or(),{locStart:Ee,locEnd:Ce}=_r(),Ae=Mr(),Fe=$r(),ve=Vr();function xe(e){return"es5"===e.trailingComma||"all"===e.trailingComma}function be(e,t,n){let r=[];return e.each(((e,u,o)=>{let l=o[u-1];if(l&&"css-comment"===l.type&&"prettier-ignore"===l.text.trim()){let n=e.getValue();r.push(t.originalText.slice(Ee(n),Ce(n)))}else r.push(n());u!==o.length-1&&("css-comment"===o[u+1].type&&!i(t.originalText,Ee(o[u+1]),{backwards:!0})&&!a(o[u])||"css-atrule"===o[u+1].type&&"else"===o[u+1].name&&"css-comment"!==o[u].type?r.push(" "):(r.push(t.__isHTMLStyleAttribute?p:c),s(t.originalText,e.getValue(),Ce)&&!a(o[u])&&r.push(c)))}),"nodes"),r}var Se=/(["'])(?:(?!\1)[^\\]|\\.)*\1/gs,Te=new RegExp(Se.source+`|(${/[$@]?[A-Z_a-z\u0080-\uFFFF][\w\u0080-\uFFFF-]*/g.source})?(${/(?:\d*\.\d+|\d+\.?)(?:[Ee][+-]?\d+)?/g.source})(${/[A-Za-z]+/g.source})?`,"g");function Be(e,t){return e.replace(Se,(e=>u(e,t)))}function we(e,t){let n=t.singleQuote?"'":'"';return e.includes('"')||e.includes("'")?e:n+e+n}function Ne(e){return e.replace(Te,((e,t,n,r,u)=>!n&&r?ke(r)+T(u||""):e))}function ke(e){return r(e).replace(/\.0(?=$|e)/,"")}t.exports={print:function(e,t,r){let i=e.getValue();if(!i)return"";if("string"==typeof i)return i;switch(i.type){case"front-matter":return[i.raw,c];case"css-root":{let n=be(e,t,r),u=i.raws.after.trim();return u.startsWith(";")&&(u=u.slice(1).trim()),[n,u?` ${u}`:"",C(n).length>0?c:""]}case"css-comment":{let e=i.inline||i.raws.inline,n=t.originalText.slice(Ee(i),Ce(i));return e?n.trimEnd():n}case"css-rule":return[r("selector"),i.important?" !important":"",i.nodes?[i.selector&&"selector-unknown"===i.selector.type&&me(i.selector.value)?p:" ","{",i.nodes.length>0?m([c,be(e,t,r)]):"",c,"}",_(i)?";":""]:";"];case"css-decl":{let n=e.getParentNode(),{between:u}=i.raws,a=u.trim(),s=":"===a,o=K(i)?E(r("value")):r("value");return!s&&me(a)&&(o=m([c,g(o)])),[i.raws.before.replace(/[\s;]/g,""),"css-atrule"===n.type&&n.variable||N(e)?i.prop:T(i.prop),a.startsWith("//")?" ":"",a,i.extend?"":" ",Ae(t)&&i.extend&&i.selector?["extend(",r("selector"),")"]:"",o,i.raws.important?i.raws.important.replace(/\s*!\s*important/i," !important"):i.important?" !important":"",i.raws.scssDefault?i.raws.scssDefault.replace(/\s*!default/i," !default"):i.scssDefault?" !default":"",i.raws.scssGlobal?i.raws.scssGlobal.replace(/\s*!global/i," !global"):i.scssGlobal?" !global":"",i.nodes?[" {",m([d,be(e,t,r)]),d,"}"]:re(i)&&!n.raws.semicolon&&";"!==t.originalText[Ce(i)-1]?"":t.__isHTMLStyleAttribute&&O(e,i)?y(";"):";"]}case"css-atrule":{let n=e.getParentNode(),u=ne(i)&&!n.raws.semicolon&&";"!==t.originalText[Ce(i)-1];if(Ae(t)){if(i.mixin)return[r("selector"),i.important?" !important":"",u?"":";"];if(i.function)return[i.name,r("params"),u?"":";"];if(i.variable)return["@",i.name,": ",i.value?r("value"):"",i.raws.between.trim()?i.raws.between.trim()+" ":"",i.nodes?["{",m([i.nodes.length>0?d:"",be(e,t,r)]),d,"}"]:"",u?"":";"]}return["@",te(i)||i.name.endsWith(":")?i.name:T(i.name),i.params?[te(i)?"":ne(i)?""===i.raws.afterName?"":i.name.endsWith(":")?" ":/^\s*\n\s*\n/.test(i.raws.afterName)?[c,c]:/^\s*\n/.test(i.raws.afterName)?c:" ":" ",r("params")]:"",i.selector?m([" ",r("selector")]):"",i.value?D([" ",r("value"),L(i)?Y(i)?" ":p:""]):"else"===i.name?" ":"",i.nodes?[L(i)?"":i.selector&&!i.selector.nodes&&"string"==typeof i.selector.value&&me(i.selector.value)||!i.selector&&"string"==typeof i.params&&me(i.params)?p:" ","{",m([i.nodes.length>0?d:"",be(e,t,r)]),d,"}"]:u?"":";"]}case"media-query-list":{let t=[];return e.each((e=>{let n=e.getValue();"media-query"===n.type&&""===n.value||t.push(r())}),"nodes"),D(m(l(p,t)))}case"media-query":return[l(" ",e.map(r,"nodes")),O(e,i)?"":","];case"media-type":case"media-value":return Ne(Be(i.value,t));case"media-feature-expression":return i.nodes?["(",...e.map(r,"nodes"),")"]:i.value;case"media-feature":return T(Be(i.value.replace(/ +/g," "),t));case"media-colon":case"value-comma":return[i.value," "];case"media-keyword":case"selector-string":return Be(i.value,t);case"media-url":return Be(i.value.replace(/^url\(\s+/gi,"url(").replace(/\s+\)$/g,")"),t);case"media-unknown":case"selector-comment":case"selector-nesting":case"value-paren":case"value-operator":case"value-unicode-range":case"value-unknown":return i.value;case"selector-root":return D([k(e,"custom-selector")?[b(e,"css-atrule").customSelector,p]:"",l([",",k(e,["extend","custom-selector","nest"])?p:c],e.map(r,"nodes"))]);case"selector-selector":return D(m(e.map(r,"nodes")));case"selector-tag":{let t=e.getParentNode(),n=t&&t.nodes.indexOf(i),r=n&&t.nodes[n-1];return[i.namespace?[!0===i.namespace?"":i.namespace.trim(),"|"]:"","selector-nesting"===r.type?i.value:Ne(P(e,i.value)?i.value.toLowerCase():i.value)]}case"selector-id":return["#",i.value];case"selector-class":return[".",Ne(Be(i.value,t))];case"selector-attribute":var a;return["[",i.namespace?[!0===i.namespace?"":i.namespace.trim(),"|"]:"",i.attribute.trim(),null!==(a=i.operator)&&void 0!==a?a:"",i.value?we(Be(i.value.trim(),t),t):"",i.insensitive?" i":"","]"];case"selector-combinator":if("+"===i.value||">"===i.value||"~"===i.value||">>>"===i.value){let t=e.getParentNode();return["selector-selector"===t.type&&t.nodes[0]===i?"":p,i.value,O(e,i)?"":" "]}return[i.value.trim().startsWith("(")?p:"",Ne(Be(i.value.trim(),t))||p];case"selector-universal":return[i.namespace?[!0===i.namespace?"":i.namespace.trim(),"|"]:"",i.value];case"selector-pseudo":return[T(i.value),o(i.nodes)?D(["(",m([d,l([",",p],e.map(r,"nodes"))]),d,")"]):""];case"selector-unknown":{let n=b(e,"css-rule");if(n&&n.isSCSSNesterProperty)return Ne(Be(T(i.value),t));let r=e.getParentNode();if(r.raws&&r.raws.selector){let e=Ee(r),n=e+r.raws.selector.length;return t.originalText.slice(e,n).trim()}let u=e.getParentNode(1);if("value-paren_group"===r.type&&u&&"value-func"===u.type&&"selector"===u.value){let e=Ce(r.open)+1,n=Ee(r.close),u=t.originalText.slice(e,n).trim();return me(u)?[h,u]:u}return i.value}case"value-value":case"value-root":return r("group");case"value-comment":return t.originalText.slice(Ee(i),Ce(i));case"value-comma_group":{let n=e.getParentNode(),u=e.getParentNode(1),a=S(e),s=a&&"value-value"===n.type&&("grid"===a||a.startsWith("grid-template")),o=b(e,"css-atrule"),l=o&&L(o),y=i.groups.some((e=>ae(e))),E=e.map(r,"groups"),C=[],F=B(e,"url"),v=!1,x=!1;for(let r=0;r<i.groups.length;++r){var A;C.push(E[r]);let a=i.groups[r-1],D=i.groups[r],f=i.groups[r+1],m=i.groups[r+2];if(F){(f&&W(f)||W(D))&&C.push(" ");continue}if(k(e,"forward")&&"value-word"===D.type&&D.value&&void 0!==a&&"value-word"===a.type&&"as"===a.value&&"value-operator"===f.type&&"*"===f.value||!f||"value-word"===D.type&&D.value.endsWith("-")&&ge(f))continue;if("value-string"===D.type&&D.quoted){let e=D.value.lastIndexOf("#{"),t=D.value.lastIndexOf("}");-1!==e&&-1!==t?v=e>t:-1!==e?v=!0:-1!==t&&(v=!1)}if(v||ce(D)||ce(f)||"value-atword"===D.type&&(""===D.value||D.value.endsWith("["))||"value-word"===f.type&&f.value.startsWith("]")||"~"===D.value||D.value&&D.value.includes("\\")&&f&&"value-comment"!==f.type||a&&a.value&&a.value.indexOf("\\")===a.value.length-1&&"value-operator"===D.type&&"/"===D.value||"\\"===D.value||ue(D,f)||se(D)||oe(D)||le(f)||oe(f)&&Q(f)||le(D)&&Q(f)||"--"===D.value&&se(f))continue;let y=J(D),h=J(f);if((y&&se(f)||h&&le(D))&&Q(f)||!a&&V(D)||B(e,"calc")&&(W(D)||W(f)||q(D)||q(f))&&Q(f))continue;let b=(W(D)||q(D))&&0===r&&("value-number"===f.type||f.isHex)&&u&&fe(u)&&!Q(f),S=m&&"value-func"===m.type||m&&pe(m)||"value-func"===D.type||pe(D),T="value-func"===f.type||pe(f)||a&&"value-func"===a.type||a&&pe(a);if((R(f)||R(D)||B(e,"calc")||b||!(V(f)&&!S||V(D)&&!T||W(f)&&!S||W(D)&&!T||q(f)||q(D))||!(Q(f)||y&&(!a||a&&J(a))))&&("scss"!==t.parser&&"less"!==t.parser||!y||"-"!==D.value||!he(f)||Ce(D)!==Ee(f.open)||"("!==f.open.value)){if(ae(D)){if("value-paren_group"===n.type){C.push(g(c));continue}C.push(c);continue}if(l&&($(f)||M(f)||X(f)||H(D)||G(D))){C.push(" ");continue}if(o&&"namespace"===o.name.toLowerCase()){C.push(" ");continue}if(s){D.source&&f.source&&D.source.start.line!==f.source.start.line?(C.push(c),x=!0):C.push(" ");continue}if(h){C.push(" ");continue}if(!(f&&"..."===f.value||ge(D)&&ge(f)&&Ce(D)===Ee(f))){if(ge(D)&&he(f)&&Ce(D)===Ee(f.open)){C.push(d);continue}if("with"===D.value&&he(f)){C.push(" ");continue}null!==(A=D.value)&&void 0!==A&&A.endsWith("#")&&"{"===f.value&&he(f.group)||C.push(p)}}}return y&&C.push(h),x&&C.unshift(c),l?D(m(C)):j(e)?D(f(C)):D(m(f(C)))}case"value-paren_group":{let u=e.getParentNode();if(u&&z(u)&&(1===i.groups.length||i.groups.length>0&&"value-comma_group"===i.groups[0].type&&i.groups[0].groups.length>0&&"value-word"===i.groups[0].groups[0].type&&i.groups[0].groups[0].value.startsWith("data:")))return[i.open?r("open"):"",l(",",e.map(r,"groups")),i.close?r("close"):""];if(!i.open){let t=e.map(r,"groups"),n=[];for(let e=0;e<t.length;e++)0!==e&&n.push([",",p]),n.push(t[e]);return D(m(f(n)))}let a=ie(e),h=n(i.groups),E=h&&"value-comment"===h.type,A=ee(i,u),F=ye(i,u),v=F||a&&!A,x=F||A,b=D([i.open?r("open"):"",m([d,l([p],e.map(((e,u)=>{let a=e.getValue(),l=u===i.groups.length-1,p=[r(),l?"":","];if(Z(a)&&"value-comma_group"===a.type&&a.groups&&"value-paren_group"!==a.groups[0].type&&a.groups[2]&&"value-paren_group"===a.groups[2].type){let e=C(p[0].contents.contents);e[1]=D(e[1]),p=[D(g(p))]}if(!l&&"value-comma_group"===a.type&&o(a.groups)){let e=n(a.groups);!e.source&&e.close&&(e=e.close),e.source&&s(t.originalText,e,Ce)&&p.push(c)}return p}),"groups"))]),y(!E&&Fe(t.parser,t.originalText)&&a&&xe(t)?",":""),d,i.close?r("close"):""],{shouldBreak:v});return x?g(b):b}case"value-func":return[i.value,k(e,"supports")&&de(i)?" ":"",r("group")];case"value-number":return[ke(i.value),ve(i.unit)];case"value-word":return i.isColor&&i.isHex||I(i.value)?i.value.toLowerCase():i.value;case"value-colon":{let t=e.getParentNode(),r=t&&t.groups.indexOf(i),u=r&&t.groups[r-1];return[i.value,u&&"string"==typeof u.value&&"\\"===n(u.value)||B(e,"url")?"":p]}case"value-string":return u(i.raws.quote+i.value+i.raws.quote,t);case"value-atword":return["@",i.value];default:throw new Error(`Unknown postcss type ${JSON.stringify(i.type)}`)}},embed:F,insertPragma:x,massageAstNode:A}}}),qr=E({"src/language-css/options.js"(e,t){v();var n=Cr();t.exports={singleQuote:n.singleQuote}}}),Ur=E({"src/language-css/parsers.js"(){v()}}),Jr=E({"node_modules/linguist-languages/data/CSS.json"(e,t){t.exports={name:"CSS",type:"markup",tmScope:"source.css",aceMode:"css",codemirrorMode:"css",codemirrorMimeType:"text/css",color:"#563d7c",extensions:[".css"],languageId:50}}}),Hr=E({"node_modules/linguist-languages/data/PostCSS.json"(e,t){t.exports={name:"PostCSS",type:"markup",color:"#dc3a0c",tmScope:"source.postcss",group:"CSS",extensions:[".pcss",".postcss"],aceMode:"text",languageId:262764437}}}),Gr=E({"node_modules/linguist-languages/data/Less.json"(e,t){t.exports={name:"Less",type:"markup",color:"#1d365d",aliases:["less-css"],extensions:[".less"],tmScope:"source.css.less",aceMode:"less",codemirrorMode:"css",codemirrorMimeType:"text/css",languageId:198}}}),zr=E({"node_modules/linguist-languages/data/SCSS.json"(e,t){t.exports={name:"SCSS",type:"markup",color:"#c6538c",tmScope:"source.css.scss",aceMode:"scss",codemirrorMode:"css",codemirrorMimeType:"text/x-scss",extensions:[".scss"],languageId:329}}}),Xr=E({"src/language-css/index.js"(e,t){v();var n=Qt(),r=Wr(),u=qr(),i=Ur(),a=[n(Jr(),(e=>({since:"1.4.0",parsers:["css"],vscodeLanguageIds:["css"],extensions:[...e.extensions,".wxss"]}))),n(Hr(),(()=>({since:"1.4.0",parsers:["css"],vscodeLanguageIds:["postcss"]}))),n(Gr(),(()=>({since:"1.4.0",parsers:["less"],vscodeLanguageIds:["less"]}))),n(zr(),(()=>({since:"1.4.0",parsers:["scss"],vscodeLanguageIds:["scss"]})))],s={postcss:r};t.exports={languages:a,options:u,printers:s,parsers:i}}}),Kr=E({"src/language-handlebars/loc.js"(e,t){v(),t.exports={locStart:function(e){return e.loc.start.offset},locEnd:function(e){return e.loc.end.offset}}}}),Yr=E({"src/language-handlebars/clean.js"(e,t){function n(e,t){if("TextNode"===e.type){let n=e.chars.trim();if(!n)return null;t.chars=n.replace(/[\t\n\f\r ]+/g," ")}"AttrNode"===e.type&&"class"===e.name.toLowerCase()&&delete t.value}v(),n.ignoredProperties=new Set(["loc","selfClosing"]),t.exports=n}}),Qr=E({"src/language-handlebars/html-void-elements.evaluate.js"(e,t){t.exports=["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"]}}),Zr=E({"src/language-handlebars/utils.js"(e,t){v();var n=w(),r=Qr();function u(e){return e.toUpperCase()===e}var i=new Set(r);function a(e){return s(e,["TextNode"])&&!/\S/.test(e.chars)}function s(e,t){return e&&t.includes(e.type)}function o(e,t){return s(e.getParentNode(0),t)}function l(e,t){var n,r,u,i;let a=e.getValue(),s=null!==(n=e.getParentNode(0))&&void 0!==n?n:{},o=null!==(r=null!==(u=null!==(i=s.children)&&void 0!==i?i:s.body)&&void 0!==u?u:s.parts)&&void 0!==r?r:[],l=o.indexOf(a);return-1!==l&&o[l+t]}function p(e){return l(e,-(arguments.length>1&&void 0!==arguments[1]?arguments[1]:1))}function c(e){return l(e,1)}function d(e){return s(e,["MustacheCommentStatement"])&&"string"==typeof e.value&&"prettier-ignore"===e.value.trim()}t.exports={getNextNode:c,getPreviousNode:p,hasPrettierIgnore:function(e){let t=e.getValue(),n=p(e,2);return d(t)||d(n)},isLastNodeOfSiblings:function(e){let t=e.getValue(),r=e.getParentNode(0);return!!(o(e,["ElementNode"])&&n(r.children)===t||o(e,["Block"])&&n(r.body)===t)},isNextNodeOfSomeType:function(e,t){return s(c(e),t)},isNodeOfSomeType:s,isParentOfSomeType:o,isPreviousNodeOfSomeType:function(e,t){return s(p(e),t)},isVoid:function(e){return!0===e.selfClosing||function(e){return i.has(e.toLowerCase())&&!u(e[0])}(e.tag)||function(e){return s(e,["ElementNode"])&&"string"==typeof e.tag&&!e.tag.startsWith(":")&&(u(e.tag[0])||e.tag.includes("."))}(e)&&e.children.every((e=>a(e)))},isWhitespaceNode:a}}}),eu=E({"src/language-handlebars/printer-glimmer.js"(e,t){v();var{builders:{dedent:n,fill:r,group:u,hardline:i,ifBreak:a,indent:s,join:o,line:l,softline:p},utils:{getDocParts:c,replaceTextEndOfLine:d}}=U(),{getPreferredQuote:D,isNonEmptyArray:f}=De(),{locStart:m,locEnd:g}=Kr(),y=Yr(),{getNextNode:h,getPreviousNode:E,hasPrettierIgnore:C,isLastNodeOfSiblings:A,isNextNodeOfSomeType:F,isNodeOfSomeType:x,isParentOfSomeType:b,isPreviousNodeOfSomeType:S,isVoid:T,isWhitespaceNode:B}=Zr();function w(e,t){return m(e)-m(t)}function N(e,t,n){let r=e.getValue().children.every((e=>B(e)));return"ignore"===t.htmlWhitespaceSensitivity&&r?"":e.map(((e,r)=>{let u=n();return 0===r&&"ignore"===t.htmlWhitespaceSensitivity?[p,u]:u}),"children")}function k(e){return T(e)?a([p,"/>"],[" />",p]):a([p,">"],">")}function j(e){return[!1===e.escaped?"{{{":"{{",e.strip&&e.strip.open?"~":""]}function P(e){let t=!1===e.escaped?"}}}":"}}";return[e.strip&&e.strip.close?"~":"",t]}function I(e){return[j(e),e.openStrip.open?"~":"","#"]}function O(e){let t=P(e);return[e.openStrip.close?"~":"",t]}function L(e){return[j(e),e.closeStrip.open?"~":"","/"]}function _(e){let t=P(e);return[e.closeStrip.close?"~":"",t]}function M(e){return[j(e),e.inverseStrip.open?"~":""]}function $(e){let t=P(e);return[e.inverseStrip.close?"~":"",t]}function R(e,t){let n=e.getValue(),r=[],i=ne(e,t);return i&&r.push(u(i)),f(n.program.blockParams)&&r.push(re(n.program)),u([I(n),te(0,t),r.length>0?s([l,o(l,r)]):"",p,O(n)])}function V(e,t){return["ignore"===t.htmlWhitespaceSensitivity?i:"",M(e),"else",$(e)]}function W(e,t,n){let r=e.getValue(),i=e.getParentNode(1);return u([M(i),["else"," ",n],s([l,u(ne(e,t)),...f(r.program.blockParams)?[l,re(r.program)]:[]]),p,$(i)])}function q(e,t,n){let r=e.getValue();return"ignore"===n.htmlWhitespaceSensitivity?[J(r)?p:i,L(r),t("path"),_(r)]:[L(r),t("path"),_(r)]}function J(e){return x(e,["BlockStatement"])&&e.program.body.every((e=>B(e)))}function H(e){return x(e,["BlockStatement"])&&e.inverse}function G(e,t,n){if(J(e.getValue()))return"";let r=t("program");return"ignore"===n.htmlWhitespaceSensitivity?s([i,r]):s(r)}function z(e,t,n){let r=e.getValue(),u=t("inverse"),a="ignore"===n.htmlWhitespaceSensitivity?[i,u]:u;return function(e){return H(e)&&1===e.inverse.body.length&&x(e.inverse.body[0],["BlockStatement"])&&e.inverse.body[0].path.parts[0]===e.path.parts[0]}(r)?a:H(r)?[V(r,n),s(a)]:""}function X(e){return c(o(l,function(e){return e.split(/[\t\n\f\r ]+/)}(e)))}function K(e){return(e="string"==typeof e?e:"").split("\n").length-1}function Y(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return Array.from({length:Math.min(e,2)}).fill(i)}function Q(e,t){let{quote:n,regex:r}=D(e,t);return[n,e.replace(r,`\\${n}`),n]}function Z(e,t){let n=te(0,t),r=ne(e,t);return r?s([n,l,u(r)]):n}function ee(e,t){let n=te(0,t),r=ne(e,t);return r?[s([n,l,r]),p]:n}function te(e,t){return t("path")}function ne(e,t){let n=e.getValue(),r=[];if(n.params.length>0){let n=e.map(t,"params");r.push(...n)}if(n.hash&&n.hash.pairs.length>0){let e=t("hash");r.push(e)}return 0===r.length?"":o(l,r)}function re(e){return["as |",e.blockParams.join(" "),"|"]}t.exports={print:function(e,t,a){let c=e.getValue();if(!c)return"";if(C(e))return t.originalText.slice(m(c),g(c));let y=t.singleQuote?"'":'"';switch(c.type){case"Block":case"Program":case"Template":return u(e.map(a,"body"));case"ElementNode":{let n=u(function(e,t){let n=e.getValue(),r=["attributes","modifiers","comments"].filter((e=>f(n[e]))),u=r.flatMap((e=>n[e])).sort(w);for(let n of r)e.each((e=>{let n=u.indexOf(e.getValue());u.splice(n,1,[l,t()])}),n);return f(n.blockParams)&&u.push(l,re(n)),["<",n.tag,s(u),k(n)]}(e,a)),r="ignore"===t.htmlWhitespaceSensitivity&&F(e,["ElementNode"])?p:"";if(T(c))return[n,r];let o=["</",c.tag,">"];return 0===c.children.length?[n,s(o),r]:"ignore"===t.htmlWhitespaceSensitivity?[n,s(N(e,t,a)),i,s(o),r]:[n,s(u(N(e,t,a))),s(o),r]}case"BlockStatement":{let n=e.getParentNode(1);return n&&n.inverse&&1===n.inverse.body.length&&n.inverse.body[0]===c&&n.inverse.body[0].path.parts[0]===n.path.parts[0]?[W(e,a,n.inverse.body[0].path.parts[0]),G(e,a,t),z(e,a,t)]:[R(e,a),u([G(e,a,t),z(e,a,t),q(e,a,t)])]}case"ElementModifierStatement":return u(["{{",ee(e,a),"}}"]);case"MustacheStatement":return u([j(c),ee(e,a),P(c)]);case"SubExpression":return u(["(",Z(e,a),p,")"]);case"AttrNode":{let e="TextNode"===c.value.type;if(e&&""===c.value.chars&&m(c.value)===g(c.value))return c.name;let t=e?D(c.value.chars,y).quote:"ConcatStatement"===c.value.type?D(c.value.parts.filter((e=>"TextNode"===e.type)).map((e=>e.chars)).join(""),y).quote:"",n=a("value");return[c.name,"=",t,"class"===c.name&&t?u(s(n)):n,t]}case"ConcatStatement":return e.map(a,"parts");case"Hash":return o(l,e.map(a,"pairs"));case"HashPair":return[c.key,"=",a("value")];case"TextNode":{let u=c.chars.replace(/{{/g,"\\{{"),i=function(e){for(let t=0;t<2;t++){let n=e.getParentNode(t);if(n&&"AttrNode"===n.type)return n.name.toLowerCase()}}(e);if(i){if("class"===i){let t=u.trim().split(/\s+/).join(" "),n=!1,r=!1;return b(e,["ConcatStatement"])&&(S(e,["MustacheStatement"])&&/^\s/.test(u)&&(n=!0),F(e,["MustacheStatement"])&&/\s$/.test(u)&&""!==t&&(r=!0)),[n?l:"",t,r?l:""]}return d(u)}let a=/^[\t\n\f\r ]*$/.test(u),s=!E(e),o=!h(e);if("ignore"!==t.htmlWhitespaceSensitivity){let t=/^[\t\n\f\r ]*/,i=/[\t\n\f\r ]*$/,p=o&&b(e,["Template"]),c=s&&b(e,["Template"]);if(a){if(c||p)return"";let t=[l],r=K(u);return r&&(t=Y(r)),A(e)&&(t=t.map((e=>n(e)))),t}let[d]=u.match(t),[D]=u.match(i),f=[];if(d){f=[l];let e=K(d);e&&(f=Y(e)),u=u.replace(t,"")}let m=[];if(D){if(!p){m=[l];let t=K(D);t&&(m=Y(t)),A(e)&&(m=m.map((e=>n(e))))}u=u.replace(i,"")}return[...f,r(X(u)),...m]}let p=K(u),D=function(e){return K(((e="string"==typeof e?e:"").match(/^([^\S\n\r]*[\n\r])+/g)||[])[0]||"")}(u),f=function(e){return K(((e="string"==typeof e?e:"").match(/([\n\r][^\S\n\r]*)+$/g)||[])[0]||"")}(u);if((s||o)&&a&&b(e,["Block","ElementNode","Template"]))return"";a&&p?(D=Math.min(p,2),f=0):(F(e,["BlockStatement","ElementNode"])&&(f=Math.max(f,1)),S(e,["BlockStatement","ElementNode"])&&(D=Math.max(D,1)));let m="",g="";return 0===f&&F(e,["MustacheStatement"])&&(g=" "),0===D&&S(e,["MustacheStatement"])&&(m=" "),s&&(D=0,m=""),o&&(f=0,g=""),u=u.replace(/^[\t\n\f\r ]+/g,m).replace(/[\t\n\f\r ]+$/,g),[...Y(D),r(X(u)),...Y(f)]}case"MustacheCommentStatement":{let e=m(c),n=g(c),r="~"===t.originalText.charAt(e+2),u="~"===t.originalText.charAt(n-3),i=c.value.includes("}}")?"--":"";return["{{",r?"~":"","!",i,c.value,i,u?"~":"","}}"]}case"PathExpression":return c.original;case"BooleanLiteral":case"NumberLiteral":return String(c.value);case"CommentStatement":return["\x3c!--",c.value,"--\x3e"];case"StringLiteral":if(function(e){let t=0,n=e.getParentNode(t);for(;n&&x(n,["SubExpression"]);)t++,n=e.getParentNode(t);return!!(n&&x(e.getParentNode(t+1),["ConcatStatement"])&&x(e.getParentNode(t+2),["AttrNode"]))}(e)){let e=t.singleQuote?'"':"'";return Q(c.value,e)}return Q(c.value,y);case"UndefinedLiteral":return"undefined";case"NullLiteral":return"null";default:throw new Error("unknown glimmer type: "+JSON.stringify(c.type))}},massageAstNode:y}}}),tu=E({"src/language-handlebars/parsers.js"(){v()}}),nu=E({"node_modules/linguist-languages/data/Handlebars.json"(e,t){t.exports={name:"Handlebars",type:"markup",color:"#f7931e",aliases:["hbs","htmlbars"],extensions:[".handlebars",".hbs"],tmScope:"text.html.handlebars",aceMode:"handlebars",languageId:155}}}),ru=E({"src/language-handlebars/index.js"(e,t){v();var n=Qt(),r=eu(),u=tu(),i=[n(nu(),(()=>({since:"2.3.0",parsers:["glimmer"],vscodeLanguageIds:["handlebars"]})))],a={glimmer:r};t.exports={languages:i,printers:a,parsers:u}}}),uu=E({"src/language-graphql/pragma.js"(e,t){v(),t.exports={hasPragma:function(e){return/^\s*#[^\S\n]*@(?:format|prettier)\s*(?:\n|$)/.test(e)},insertPragma:function(e){return"# @format\n\n"+e}}}}),iu=E({"src/language-graphql/loc.js"(e,t){v(),t.exports={locStart:function(e){return"number"==typeof e.start?e.start:e.loc&&e.loc.start},locEnd:function(e){return"number"==typeof e.end?e.end:e.loc&&e.loc.end}}}}),au=E({"src/language-graphql/printer-graphql.js"(e,t){v();var{builders:{join:n,hardline:r,line:u,softline:i,group:a,indent:s,ifBreak:o}}=U(),{isNextLineEmpty:l,isNonEmptyArray:p}=De(),{insertPragma:c}=uu(),{locStart:d,locEnd:D}=iu();function f(e,t,r){if(0===r.directives.length)return"";let o=n(u,e.map(t,"directives"));return"FragmentDefinition"===r.kind||"OperationDefinition"===r.kind?a([u,o]):[" ",a(s([i,o]))]}function m(e,t,n,u){return e.map(((e,u,i)=>{let a=n();return u<i.length-1&&l(t.originalText,e.getValue(),D)?[a,r]:a}),u)}function g(e,t,n){let r=e.getNode(),i=[],{interfaces:a}=r,s=e.map((e=>n(e)),"interfaces");for(let e=0;e<a.length;e++){let n=a[e];i.push(s[e]);let r=a[e+1];if(r){let e=t.originalText.slice(n.loc.end,r.loc.start),a=e.includes("#"),s=e.replace(/#.*/g,"").trim();i.push(","===s?",":" &",a?u:" ")}}return i}function y(e,t){"StringValue"===e.kind&&e.block&&!e.value.includes("\n")&&(t.value=t.value.trim())}y.ignoredProperties=new Set(["loc","comments"]),t.exports={print:function(e,t,c){let y=e.getValue();if(!y)return"";if("string"==typeof y)return y;switch(y.kind){case"Document":{let n=[];return e.each(((e,u,i)=>{n.push(c()),u!==i.length-1&&(n.push(r),l(t.originalText,e.getValue(),D)&&n.push(r))}),"definitions"),[...n,r]}case"OperationDefinition":{let r="{"!==t.originalText[d(y)],u=Boolean(y.name);return[r?y.operation:"",r&&u?[" ",c("name")]:"",r&&!u&&p(y.variableDefinitions)?" ":"",p(y.variableDefinitions)?a(["(",s([i,n([o("",", "),i],e.map(c,"variableDefinitions"))]),i,")"]):"",f(e,c,y),y.selectionSet&&(r||u)?" ":"",c("selectionSet")]}case"FragmentDefinition":return["fragment ",c("name"),p(y.variableDefinitions)?a(["(",s([i,n([o("",", "),i],e.map(c,"variableDefinitions"))]),i,")"]):""," on ",c("typeCondition"),f(e,c,y)," ",c("selectionSet")];case"SelectionSet":return["{",s([r,n(r,m(e,t,c,"selections"))]),r,"}"];case"Field":return a([y.alias?[c("alias"),": "]:"",c("name"),y.arguments.length>0?a(["(",s([i,n([o("",", "),i],m(e,t,c,"arguments"))]),i,")"]):"",f(e,c,y),y.selectionSet?" ":"",c("selectionSet")]);case"Name":case"IntValue":case"FloatValue":case"EnumValue":return y.value;case"StringValue":if(y.block){let e=y.value.replace(/"""/g,"\\$&").split("\n");return 1===e.length&&(e[0]=e[0].trim()),e.every((e=>""===e))&&(e.length=0),n(r,['"""',...e,'"""'])}return['"',y.value.replace(/["\\]/g,"\\$&").replace(/\n/g,"\\n"),'"'];case"BooleanValue":return y.value?"true":"false";case"NullValue":return"null";case"Variable":return["$",c("name")];case"ListValue":return a(["[",s([i,n([o("",", "),i],e.map(c,"values"))]),i,"]"]);case"ObjectValue":return a(["{",t.bracketSpacing&&y.fields.length>0?" ":"",s([i,n([o("",", "),i],e.map(c,"fields"))]),i,o("",t.bracketSpacing&&y.fields.length>0?" ":""),"}"]);case"ObjectField":case"Argument":return[c("name"),": ",c("value")];case"Directive":return["@",c("name"),y.arguments.length>0?a(["(",s([i,n([o("",", "),i],m(e,t,c,"arguments"))]),i,")"]):""];case"NamedType":return c("name");case"VariableDefinition":return[c("variable"),": ",c("type"),y.defaultValue?[" = ",c("defaultValue")]:"",f(e,c,y)];case"ObjectTypeExtension":case"ObjectTypeDefinition":return[c("description"),y.description?r:"","ObjectTypeExtension"===y.kind?"extend ":"","type ",c("name"),y.interfaces.length>0?[" implements ",...g(e,t,c)]:"",f(e,c,y),y.fields.length>0?[" {",s([r,n(r,m(e,t,c,"fields"))]),r,"}"]:""];case"FieldDefinition":return[c("description"),y.description?r:"",c("name"),y.arguments.length>0?a(["(",s([i,n([o("",", "),i],m(e,t,c,"arguments"))]),i,")"]):"",": ",c("type"),f(e,c,y)];case"DirectiveDefinition":return[c("description"),y.description?r:"","directive ","@",c("name"),y.arguments.length>0?a(["(",s([i,n([o("",", "),i],m(e,t,c,"arguments"))]),i,")"]):"",y.repeatable?" repeatable":""," on ",n(" | ",e.map(c,"locations"))];case"EnumTypeExtension":case"EnumTypeDefinition":return[c("description"),y.description?r:"","EnumTypeExtension"===y.kind?"extend ":"","enum ",c("name"),f(e,c,y),y.values.length>0?[" {",s([r,n(r,m(e,t,c,"values"))]),r,"}"]:""];case"EnumValueDefinition":return[c("description"),y.description?r:"",c("name"),f(e,c,y)];case"InputValueDefinition":return[c("description"),y.description?y.description.block?r:u:"",c("name"),": ",c("type"),y.defaultValue?[" = ",c("defaultValue")]:"",f(e,c,y)];case"InputObjectTypeExtension":case"InputObjectTypeDefinition":return[c("description"),y.description?r:"","InputObjectTypeExtension"===y.kind?"extend ":"","input ",c("name"),f(e,c,y),y.fields.length>0?[" {",s([r,n(r,m(e,t,c,"fields"))]),r,"}"]:""];case"SchemaExtension":return["extend schema",f(e,c,y),...y.operationTypes.length>0?[" {",s([r,n(r,m(e,t,c,"operationTypes"))]),r,"}"]:[]];case"SchemaDefinition":return[c("description"),y.description?r:"","schema",f(e,c,y)," {",y.operationTypes.length>0?s([r,n(r,m(e,t,c,"operationTypes"))]):"",r,"}"];case"OperationTypeDefinition":return[c("operation"),": ",c("type")];case"InterfaceTypeExtension":case"InterfaceTypeDefinition":return[c("description"),y.description?r:"","InterfaceTypeExtension"===y.kind?"extend ":"","interface ",c("name"),y.interfaces.length>0?[" implements ",...g(e,t,c)]:"",f(e,c,y),y.fields.length>0?[" {",s([r,n(r,m(e,t,c,"fields"))]),r,"}"]:""];case"FragmentSpread":return["...",c("name"),f(e,c,y)];case"InlineFragment":return["...",y.typeCondition?[" on ",c("typeCondition")]:"",f(e,c,y)," ",c("selectionSet")];case"UnionTypeExtension":case"UnionTypeDefinition":return a([c("description"),y.description?r:"",a(["UnionTypeExtension"===y.kind?"extend ":"","union ",c("name"),f(e,c,y),y.types.length>0?[" =",o(""," "),s([o([u,"  "]),n([u,"| "],e.map(c,"types"))])]:""])]);case"ScalarTypeExtension":case"ScalarTypeDefinition":return[c("description"),y.description?r:"","ScalarTypeExtension"===y.kind?"extend ":"","scalar ",c("name"),f(e,c,y)];case"NonNullType":return[c("type"),"!"];case"ListType":return["[",c("type"),"]"];default:throw new Error("unknown graphql type: "+JSON.stringify(y.kind))}},massageAstNode:y,hasPrettierIgnore:function(e){var t;let n=e.getValue();return null==n||null===(t=n.comments)||void 0===t?void 0:t.some((e=>"prettier-ignore"===e.value.trim()))},insertPragma:c,printComment:function(e){let t=e.getValue();if("Comment"===t.kind)return"#"+t.value.trimEnd();throw new Error("Not a comment: "+JSON.stringify(t))},canAttachComment:function(e){return e.kind&&"Comment"!==e.kind}}}}),su=E({"src/language-graphql/options.js"(e,t){v();var n=Cr();t.exports={bracketSpacing:n.bracketSpacing}}}),ou=E({"src/language-graphql/parsers.js"(){v()}}),lu=E({"node_modules/linguist-languages/data/GraphQL.json"(e,t){t.exports={name:"GraphQL",type:"data",color:"#e10098",extensions:[".graphql",".gql",".graphqls"],tmScope:"source.graphql",aceMode:"text",languageId:139}}}),pu=E({"src/language-graphql/index.js"(e,t){v();var n=Qt(),r=au(),u=su(),i=ou(),a=[n(lu(),(()=>({since:"1.5.0",parsers:["graphql"],vscodeLanguageIds:["graphql"]})))],s={graphql:r};t.exports={languages:a,options:u,printers:s,parsers:i}}}),cu=E({"node_modules/collapse-white-space/index.js"(e,t){v(),t.exports=function(e){return String(e).replace(/\s+/g," ")}}}),du=E({"src/language-markdown/loc.js"(e,t){v(),t.exports={locStart:function(e){return e.position.start.offset},locEnd:function(e){return e.position.end.offset}}}}),Du=E({"src/language-markdown/constants.evaluate.js"(e,t){t.exports={cjkPattern:"(?:[\\u02ea-\\u02eb\\u1100-\\u11ff\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u303f\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u3190-\\u3191\\u3196-\\u31ba\\u31c0-\\u31e3\\u31f0-\\u321e\\u322a-\\u3247\\u3260-\\u327e\\u328a-\\u32b0\\u32c0-\\u32cb\\u32d0-\\u3370\\u337b-\\u337f\\u33e0-\\u33fe\\u3400-\\u4db5\\u4e00-\\u9fef\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufe10-\\ufe1f\\ufe30-\\ufe6f\\uff00-\\uffef]|[\\ud840-\\ud868\\ud86a-\\ud86c\\ud86f-\\ud872\\ud874-\\ud879][\\udc00-\\udfff]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67]|\\ud83c[\\ude00\\ude50-\\ude51]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])(?:[\\ufe00-\\ufe0f]|\\udb40[\\udd00-\\uddef])?",kPattern:"[\\u1100-\\u11ff\\u3001-\\u3003\\u3008-\\u3011\\u3013-\\u301f\\u302e-\\u3030\\u3037\\u30fb\\u3131-\\u318e\\u3200-\\u321e\\u3260-\\u327e\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\ufe45-\\ufe46\\uff61-\\uff65\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]",punctuationPattern:"[\\u0021-\\u002f\\u003a-\\u0040\\u005b-\\u0060\\u007b-\\u007e\\u00a1\\u00a7\\u00ab\\u00b6-\\u00b7\\u00bb\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589-\\u058a\\u05be\\u05c0\\u05c3\\u05c6\\u05f3-\\u05f4\\u0609-\\u060a\\u060c-\\u060d\\u061b\\u061e-\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964-\\u0965\\u0970\\u09fd\\u0a76\\u0af0\\u0c77\\u0c84\\u0df4\\u0e4f\\u0e5a-\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f3a-\\u0f3d\\u0f85\\u0fd0-\\u0fd4\\u0fd9-\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u1400\\u166e\\u169b-\\u169c\\u16eb-\\u16ed\\u1735-\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u180a\\u1944-\\u1945\\u1a1e-\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e-\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205e\\u207d-\\u207e\\u208d-\\u208e\\u2308-\\u230b\\u2329-\\u232a\\u2768-\\u2775\\u27c5-\\u27c6\\u27e6-\\u27ef\\u2983-\\u2998\\u29d8-\\u29db\\u29fc-\\u29fd\\u2cf9-\\u2cfc\\u2cfe-\\u2cff\\u2d70\\u2e00-\\u2e2e\\u2e30-\\u2e4f\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301f\\u3030\\u303d\\u30a0\\u30fb\\ua4fe-\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce-\\ua8cf\\ua8f8-\\ua8fa\\ua8fc\\ua92e-\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de-\\ua9df\\uaa5c-\\uaa5f\\uaade-\\uaadf\\uaaf0-\\uaaf1\\uabeb\\ufd3e-\\ufd3f\\ufe10-\\ufe19\\ufe30-\\ufe52\\ufe54-\\ufe61\\ufe63\\ufe68\\ufe6a-\\ufe6b\\uff01-\\uff03\\uff05-\\uff0a\\uff0c-\\uff0f\\uff1a-\\uff1b\\uff1f-\\uff20\\uff3b-\\uff3d\\uff3f\\uff5b\\uff5d\\uff5f-\\uff65]|\\ud800[\\udd00-\\udd02\\udf9f\\udfd0]|\\ud801[\\udd6f]|\\ud802[\\udc57\\udd1f\\udd3f\\ude50-\\ude58\\ude7f\\udef0-\\udef6\\udf39-\\udf3f\\udf99-\\udf9c]|\\ud803[\\udf55-\\udf59]|\\ud804[\\udc47-\\udc4d\\udcbb-\\udcbc\\udcbe-\\udcc1\\udd40-\\udd43\\udd74-\\udd75\\uddc5-\\uddc8\\uddcd\\udddb\\udddd-\\udddf\\ude38-\\ude3d\\udea9]|\\ud805[\\udc4b-\\udc4f\\udc5b\\udc5d\\udcc6\\uddc1-\\uddd7\\ude41-\\ude43\\ude60-\\ude6c\\udf3c-\\udf3e]|\\ud806[\\udc3b\\udde2\\ude3f-\\ude46\\ude9a-\\ude9c\\ude9e-\\udea2]|\\ud807[\\udc41-\\udc45\\udc70-\\udc71\\udef7-\\udef8\\udfff]|\\ud809[\\udc70-\\udc74]|\\ud81a[\\ude6e-\\ude6f\\udef5\\udf37-\\udf3b\\udf44]|\\ud81b[\\ude97-\\ude9a\\udfe2]|\\ud82f[\\udc9f]|\\ud836[\\ude87-\\ude8b]|\\ud83a[\\udd5e-\\udd5f]"}}}),fu=E({"src/language-markdown/utils.js"(e,t){v();var{getLast:n}=De(),{locStart:r,locEnd:u}=du(),{cjkPattern:i,kPattern:a,punctuationPattern:s}=Du(),o=["liquidNode","inlineCode","emphasis","esComment","strong","delete","wikiLink","link","linkReference","image","imageReference","footnote","footnoteReference","sentence","whitespace","word","break","inlineMath"],l=[...o,"tableCell","paragraph","heading"],p=new RegExp(a),c=new RegExp(s);function d(e,t){let[,n,r,u]=t.slice(e.position.start.offset,e.position.end.offset).match(/^\s*(\d+)(\.|\))(\s*)/);return{numberText:n,marker:r,leadingSpaces:u}}t.exports={mapAst:function(e,t){return function e(n,r,u){let i=Object.assign({},t(n,r,u));return i.children&&(i.children=i.children.map(((t,n)=>e(t,n,[i,...u])))),i}(e,null,[])},splitText:function(e,t){let r="non-cjk",u="cj-letter",a="cjk-punctuation",s=[],o=("preserve"===t.proseWrap?e:e.replace(new RegExp(`(${i})\n(${i})`,"g"),"$1$2")).split(/([\t\n ]+)/);for(let[e,t]of o.entries()){if(e%2==1){s.push({type:"whitespace",value:/\n/.test(t)?"\n":" "});continue}if((0===e||e===o.length-1)&&""===t)continue;let d=t.split(new RegExp(`(${i})`));for(let[e,t]of d.entries())if(0!==e&&e!==d.length-1||""!==t){if(e%2==0){""!==t&&l({type:"word",value:t,kind:r,hasLeadingPunctuation:c.test(t[0]),hasTrailingPunctuation:c.test(n(t))});continue}l(c.test(t)?{type:"word",value:t,kind:a,hasLeadingPunctuation:!0,hasTrailingPunctuation:!0}:{type:"word",value:t,kind:p.test(t)?"k-letter":u,hasLeadingPunctuation:!1,hasTrailingPunctuation:!1})}}return s;function l(e){let t=n(s);var i,o;t&&"word"===t.type&&(t.kind===r&&e.kind===u&&!t.hasTrailingPunctuation||t.kind===u&&e.kind===r&&!e.hasLeadingPunctuation?s.push({type:"whitespace",value:" "}):(i=r,o=a,!(t.kind===i&&e.kind===o||t.kind===o&&e.kind===i||[t.value,e.value].some((e=>/\u3000/.test(e))))&&s.push({type:"whitespace",value:""}))),s.push(e)}},punctuationPattern:s,getFencedCodeBlockValue:function(e,t){let{value:n}=e;return e.position.end.offset===t.length&&n.endsWith("\n")&&t.endsWith("\n")?n.slice(0,-1):n},getOrderedListItemInfo:d,hasGitDiffFriendlyOrderedList:function(e,t){if(!e.ordered||e.children.length<2)return!1;let n=Number(d(e.children[0],t.originalText).numberText),r=Number(d(e.children[1],t.originalText).numberText);if(0===n&&e.children.length>2){let n=Number(d(e.children[2],t.originalText).numberText);return 1===r&&1===n}return 1===r},INLINE_NODE_TYPES:o,INLINE_NODE_WRAPPER_TYPES:l,isAutolink:function(e){if("link"!==(null==e?void 0:e.type)||1!==e.children.length)return!1;let[t]=e.children;return r(e)===r(t)&&u(e)===u(t)}}}}),mu=E({"src/language-markdown/embed.js"(e,t){v();var{inferParserByLanguage:n,getMaxContinuousCount:r}=De(),{builders:{hardline:u,markAsRoot:i},utils:{replaceEndOfLine:a}}=U(),s=kr(),{getFencedCodeBlockValue:o}=fu();t.exports=function(e,t,l,p){let c=e.getValue();if("code"===c.type&&null!==c.lang){let e=n(c.lang,p);if(e){let t=p.__inJsTemplate?"~":"`",n=t.repeat(Math.max(3,r(c.value,t)+1)),s={parser:e};"tsx"===c.lang&&(s.filepath="dummy.tsx");let d=l(o(c,p.originalText),s,{stripTrailingHardline:!0});return i([n,c.lang,c.meta?" "+c.meta:"",u,a(d),u,n])}}switch(c.type){case"front-matter":return s(c,l);case"importExport":return[l(c.value,{parser:"babel"},{stripTrailingHardline:!0}),u];case"jsx":return l(`<$>${c.value}</$>`,{parser:"__js_expression",rootMarker:"mdx"},{stripTrailingHardline:!0})}return null}}}),gu=E({"src/language-markdown/pragma.js"(e,t){v();var n=Pr(),r=["format","prettier"];function u(e){let t=`@(${r.join("|")})`,n=new RegExp([`\x3c!--\\s*${t}\\s*--\x3e`,`{\\s*\\/\\*\\s*${t}\\s*\\*\\/\\s*}`,`\x3c!--.*\r?\n[\\s\\S]*(^|\n)[^\\S\n]*${t}[^\\S\n]*($|\n)[\\s\\S]*\n.*--\x3e`].join("|"),"m"),u=e.match(n);return 0===(null==u?void 0:u.index)}t.exports={startWithPragma:u,hasPragma:e=>u(n(e).content.trimStart()),insertPragma:e=>{let t=n(e),u=`\x3c!-- @${r[0]} --\x3e`;return t.frontMatter?`${t.frontMatter.raw}\n\n${u}\n\n${t.content}`:`${u}\n\n${t.content}`}}}}),yu=E({"src/language-markdown/print-preprocess.js"(e,t){v();var n=w(),{getOrderedListItemInfo:r,mapAst:u,splitText:i}=fu(),a=/^.$/su;function s(e,t,r){return u(e,(e=>{if(!e.children)return e;let u=e.children.reduce(((e,u)=>{let i=n(e);return i&&t(i,u)?e.splice(-1,1,r(i,u)):e.push(u),e}),[]);return Object.assign(Object.assign({},e),{},{children:u})}))}t.exports=function(e,t){return function(e){return s(e,((e,t)=>"importExport"===e.type&&"importExport"===t.type),((e,t)=>({type:"importExport",value:e.value+"\n\n"+t.value,position:{start:e.position.start,end:t.position.end}})))}(e=function(e){return u(e,(e=>"import"!==e.type&&"export"!==e.type?e:Object.assign(Object.assign({},e),{},{type:"importExport"})))}(e=function(e,t){return u(e,((e,n,r)=>{let[u]=r;if("text"!==e.type)return e;let{value:a}=e;return"paragraph"===u.type&&(0===n&&(a=a.trimStart()),n===u.children.length-1&&(a=a.trimEnd())),{type:"sentence",position:e.position,children:i(a,t)}}))}(e=function(e,t){return u(e,((e,t,n)=>{if("list"===e.type&&e.children.length>0){for(let t=0;t<n.length;t++){let r=n[t];if("list"===r.type&&!r.isAligned)return e.isAligned=!1,e}e.isAligned=i(e)}return e}));function n(e){return 0===e.children.length?-1:e.children[0].position.start.column-1}function i(e){if(!e.ordered)return!0;let[u,i]=e.children;if(r(u,t.originalText).leadingSpaces.length>1)return!0;let a=n(u);return-1!==a&&(1===e.children.length?a%t.tabWidth==0:a===n(i)&&(a%t.tabWidth==0||r(i,t.originalText).leadingSpaces.length>1))}}(e=function(e,t){return u(e,((e,n,r)=>{if("code"===e.type){let n=/^\n?(?: {4,}|\t)/.test(t.originalText.slice(e.position.start.offset,e.position.end.offset));if(e.isIndented=n,n)for(let e=0;e<r.length;e++){let t=r[e];if(t.hasIndentedCodeblock)break;"list"===t.type&&(t.hasIndentedCodeblock=!0)}}return e}))}(e=function(e,t){return u(e,(e=>"inlineCode"!==e.type||"preserve"===t.proseWrap?e:Object.assign(Object.assign({},e),{},{value:e.value.replace(/\s+/g," ")})))}(e=function(e){return s(e,((e,t)=>"text"===e.type&&"text"===t.type),((e,t)=>({type:"text",value:e.value+t.value,position:{start:e.position.start,end:t.position.end}})))}(e=function(e,t){return u(e,(e=>"text"===e.type&&"*"!==e.value&&"_"!==e.value&&a.test(e.value)&&e.position.end.offset-e.position.start.offset!==e.value.length?Object.assign(Object.assign({},e),{},{value:t.originalText.slice(e.position.start.offset,e.position.end.offset)}):e))}(e,t)),t),t),t),t)))}}}),hu=E({"src/language-markdown/clean.js"(e,t){v();var n=cu(),{isFrontMatterNode:r}=De(),{startWithPragma:u}=gu(),i=new Set(["position","raw"]);function a(e,t,i){if(("front-matter"===e.type||"code"===e.type||"yaml"===e.type||"import"===e.type||"export"===e.type||"jsx"===e.type)&&delete t.value,"list"===e.type&&delete t.isAligned,("list"===e.type||"listItem"===e.type)&&(delete t.spread,delete t.loose),"text"===e.type||("inlineCode"===e.type&&(t.value=e.value.replace(/[\t\n ]+/g," ")),"wikiLink"===e.type&&(t.value=e.value.trim().replace(/[\t\n]+/g," ")),("definition"===e.type||"linkReference"===e.type||"imageReference"===e.type)&&(t.label=n(e.label)),("definition"===e.type||"link"===e.type||"image"===e.type)&&e.title&&(t.title=e.title.replace(/\\(["')])/g,"$1")),i&&"root"===i.type&&i.children.length>0&&(i.children[0]===e||r(i.children[0])&&i.children[1]===e)&&"html"===e.type&&u(e.value)))return null}a.ignoredProperties=i,t.exports=a}}),Eu=E({"src/language-markdown/printer-markdown.js"(e,t){v();var n=cu(),{getLast:r,getMinNotPresentContinuousCount:u,getMaxContinuousCount:i,getStringWidth:a,isNonEmptyArray:s}=De(),{builders:{breakParent:o,join:l,line:p,literalline:c,markAsRoot:d,hardline:D,softline:f,ifBreak:m,fill:g,align:y,indent:h,group:E,hardlineWithoutBreakParent:C},utils:{normalizeDoc:A,replaceTextEndOfLine:F},printer:{printDocToString:x}}=U(),b=mu(),{insertPragma:S}=gu(),{locStart:T,locEnd:B}=du(),w=yu(),N=hu(),{getFencedCodeBlockValue:k,hasGitDiffFriendlyOrderedList:j,splitText:P,punctuationPattern:I,INLINE_NODE_TYPES:O,INLINE_NODE_WRAPPER_TYPES:L,isAutolink:_}=fu(),M=new Set(["importExport"]),$=["heading","tableCell","link","wikiLink"],R=new Set(["listItem","definition","footnoteDefinition"]);function V(e,t,n,r){let u=e.getValue(),i=null===u.checked?"":u.checked?"[x] ":"[ ] ";return[i,z(e,t,n,{processor:(e,u)=>{if(0===u&&"list"!==e.getValue().type)return y(" ".repeat(i.length),n());let a=" ".repeat(function(e,t,n){return e<t?t:e>n?n:e}(t.tabWidth-r.length,0,3));return[a,y(a,n())]}})]}function W(e,t){return function(e,t,n){let r=-1;for(let u of t.children)if(u.type===e.type&&n(u)?r++:r=-1,u===e)return r}(e,t,(t=>t.ordered===e.ordered))}function q(e,t){let n,r=Array.isArray(t)?t:[t],u=-1;for(;n=e.getParentNode(++u);)if(r.includes(n.type))return u;return-1}function J(e,t){let n=q(e,t);return-1===n?null:e.getParentNode(n)}function H(e,t,n){if("preserve"===n.proseWrap&&"\n"===t)return D;let r="always"===n.proseWrap&&!J(e,$);return""!==t?r?p:" ":r?f:""}function G(e,t,n){let r=[],u=null,{children:i}=e.getValue();for(let[e,t]of i.entries())switch(Y(t)){case"start":null===u&&(u={index:e,offset:t.position.end.offset});break;case"end":null!==u&&(r.push({start:u,end:{index:e,offset:t.position.start.offset}}),u=null)}return z(e,t,n,{processor:(e,u)=>{if(r.length>0){let e=r[0];if(u===e.start.index)return[X(i[e.start.index]),t.originalText.slice(e.start.offset,e.end.offset),X(i[e.end.index])];if(e.start.index<u&&u<e.end.index)return!1;if(u===e.end.index)return r.shift(),!1}return n()}})}function z(e,t,n){let r,u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},{postprocessor:i}=u,a=u.processor||(()=>n()),s=e.getValue(),o=[];return e.each(((e,n)=>{let u=e.getValue(),i=a(e,n);if(!1!==i){let e={parts:o,prevNode:r,parentNode:s,options:t};(function(e,t){let n=0===t.parts.length,r=O.includes(e.type),u="html"===e.type&&L.includes(t.parentNode.type);return!n&&!r&&!u})(u,e)&&(o.push(D),r&&M.has(r.type)||(function(e,t){var n,r,u;let i=(t.prevNode&&t.prevNode.type)===e.type&&R.has(e.type),a="listItem"===t.parentNode.type&&!t.parentNode.loose,s="listItem"===(null===(n=t.prevNode)||void 0===n?void 0:n.type)&&t.prevNode.loose,o="next"===Y(t.prevNode),l="html"===e.type&&"html"===(null===(r=t.prevNode)||void 0===r?void 0:r.type)&&t.prevNode.position.end.line+1===e.position.start.line,p="html"===e.type&&"listItem"===t.parentNode.type&&"paragraph"===(null===(u=t.prevNode)||void 0===u?void 0:u.type)&&t.prevNode.position.end.line+1===e.position.start.line;return s||!(i||a||o||l||p)}(u,e)||Q(u,e))&&o.push(D),Q(u,e)&&o.push(D)),o.push(i),r=u}}),"children"),i?i(o):o}function X(e){return"html"===e.type?e.value:"paragraph"===e.type&&Array.isArray(e.children)&&1===e.children.length&&"esComment"===e.children[0].type?["{/* ",e.children[0].value," */}"]:void 0}function K(e){let t=e;for(;s(t.children);)t=r(t.children);return t}function Y(e){let t;if("html"===e.type)t=e.value.match(/^<!--\s*prettier-ignore(?:-(start|end))?\s*-->$/);else{let n;"esComment"===e.type?n=e:"paragraph"===e.type&&1===e.children.length&&"esComment"===e.children[0].type&&(n=e.children[0]),n&&(t=n.value.match(/^prettier-ignore(?:-(start|end))?$/))}return!!t&&(t[1]||"next")}function Q(e,t){let n=t.prevNode&&"list"===t.prevNode.type,r="code"===e.type&&e.isIndented;return n&&r}function Z(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=[" ",...Array.isArray(t)?t:[t]];return new RegExp(n.map((e=>`\\${e}`)).join("|")).test(e)?`<${e}>`:e}function ee(e,t){if(!e)return"";if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2])return" "+ee(e,t,!1);if((e=e.replace(/\\(["')])/g,"$1")).includes('"')&&e.includes("'")&&!e.includes(")"))return`(${e})`;let n=e.split("'").length-1,r=e.split('"').length-1,u=n>r?'"':r>n||t.singleQuote?"'":'"';return`${u}${e=(e=e.replace(/\\/,"\\\\")).replace(new RegExp(`(${u})`,"g"),"\\$1")}${u}`}function te(e){return`[${n(e.label)}]`}function ne(e){return`[^${e.label}]`}t.exports={preprocess:w,print:function(e,t,n){let s=e.getValue();if(function(e){let t=J(e,["linkReference","imageReference"]);return t&&("linkReference"!==t.type||"full"!==t.referenceType)}(e))return P(t.originalText.slice(s.position.start.offset,s.position.end.offset),t).map((n=>"word"===n.type?n.value:""===n.value?"":H(e,n.value,t)));switch(s.type){case"front-matter":return t.originalText.slice(s.position.start.offset,s.position.end.offset);case"root":return 0===s.children.length?"":[A(G(e,t,n)),M.has(K(s).type)?"":D];case"paragraph":return z(e,t,n,{postprocessor:g});case"sentence":return z(e,t,n);case"word":{let t=s.value.replace(/\*/g,"\\$&").replace(new RegExp([`(^|${I})(_+)`,`(_+)(${I}|$)`].join("|"),"g"),((e,t,n,r,u)=>(n?`${t}${n}`:`${r}${u}`).replace(/_/g,"\\_"))),n=(e,t,n)=>"sentence"===e.type&&0===n,r=(e,t,n)=>_(e.children[n-1]);return t!==s.value&&(e.match(void 0,n,r)||e.match(void 0,n,((e,t,n)=>"emphasis"===e.type&&0===n),r))&&(t=t.replace(/^(\\?[*_])+/,(e=>e.replace(/\\/g,"")))),t}case"whitespace":{let n=e.getParentNode(),r=n.children.indexOf(s),u=n.children[r+1],i=u&&/^>|^(?:[*+-]|#{1,6}|\d+[).])$/.test(u.value)?"never":t.proseWrap;return H(e,s.value,{proseWrap:i})}case"emphasis":{let u;if(_(s.children[0]))u=t.originalText[s.position.start.offset];else{let t=e.getParentNode(),n=t.children.indexOf(s),i=t.children[n-1],a=t.children[n+1];u=i&&"sentence"===i.type&&i.children.length>0&&"word"===r(i.children).type&&!r(i.children).hasTrailingPunctuation||a&&"sentence"===a.type&&a.children.length>0&&"word"===a.children[0].type&&!a.children[0].hasLeadingPunctuation||J(e,"emphasis")?"*":"_"}return[u,z(e,t,n),u]}case"strong":return["**",z(e,t,n),"**"];case"delete":return["~~",z(e,t,n),"~~"];case"inlineCode":{let e=u(s.value,"`"),t="`".repeat(e||1),n=e&&!/^\s/.test(s.value)?" ":"";return[t,n,s.value,n,t]}case"wikiLink":{let e="";return e="preserve"===t.proseWrap?s.value:s.value.replace(/[\t\n]+/g," "),["[[",e,"]]"]}case"link":switch(t.originalText[s.position.start.offset]){case"<":{let e="mailto:";return["<",s.url.startsWith(e)&&t.originalText.slice(s.position.start.offset+1,s.position.start.offset+1+e.length)!==e?s.url.slice(e.length):s.url,">"]}case"[":return["[",z(e,t,n),"](",Z(s.url,")"),ee(s.title,t),")"];default:return t.originalText.slice(s.position.start.offset,s.position.end.offset)}case"image":return["![",s.alt||"","](",Z(s.url,")"),ee(s.title,t),")"];case"blockquote":return["> ",y("> ",z(e,t,n))];case"heading":return["#".repeat(s.depth)+" ",z(e,t,n)];case"code":{if(s.isIndented){let e=" ".repeat(4);return y(e,[e,...F(s.value,D)])}let e=t.__inJsTemplate?"~":"`",n=e.repeat(Math.max(3,i(s.value,e)+1));return[n,s.lang||"",s.meta?" "+s.meta:"",D,...F(k(s,t.originalText),D),D,n]}case"html":{let t=e.getParentNode(),n="root"===t.type&&r(t.children)===s?s.value.trimEnd():s.value,u=/^<!--.*-->$/s.test(n);return F(n,u?D:d(c))}case"list":{let r=W(s,e.getParentNode()),u=j(s,t);return z(e,t,n,{processor:(e,i)=>{let a=function(){let e=s.ordered?(0===i?s.start:u?1:s.start+i)+(r%2==0?". ":") "):r%2==0?"- ":"* ";return s.isAligned||s.hasIndentedCodeblock?function(e,t){let n=r();return e+" ".repeat(n>=4?0:n);function r(){let n=e.length%t.tabWidth;return 0===n?0:t.tabWidth-n}}(e,t):e}(),o=e.getValue();return 2===o.children.length&&"html"===o.children[1].type&&o.children[0].position.start.column!==o.children[1].position.start.column?[a,V(e,t,n,a)]:[a,y(" ".repeat(a.length),V(e,t,n,a))]}})}case"thematicBreak":{let t=q(e,"list");return-1===t?"---":W(e.getParentNode(t),e.getParentNode(t+1))%2==0?"***":"---"}case"linkReference":return["[",z(e,t,n),"]","full"===s.referenceType?te(s):"collapsed"===s.referenceType?"[]":""];case"imageReference":return"full"===s.referenceType?["![",s.alt||"","]",te(s)]:["![",s.alt,"]","collapsed"===s.referenceType?"[]":""];case"definition":{let e="always"===t.proseWrap?p:" ";return E([te(s),":",h([e,Z(s.url),null===s.title?"":[e,ee(s.title,t,!1)]])])}case"footnote":return["[^",z(e,t,n),"]"];case"footnoteReference":return ne(s);case"footnoteDefinition":{let r=e.getParentNode().children[e.getName()+1],u=1===s.children.length&&"paragraph"===s.children[0].type&&("never"===t.proseWrap||"preserve"===t.proseWrap&&s.children[0].position.start.line===s.children[0].position.end.line);return[ne(s),": ",u?z(e,t,n):E([y(" ".repeat(4),z(e,t,n,{processor:(e,t)=>0===t?E([f,n()]):n()})),r&&"footnoteDefinition"===r.type?f:""])]}case"table":return function(e,t,n){let r=e.getValue(),u=[],i=e.map((e=>e.map(((e,r)=>{let i=x(n(),t).formatted,s=a(i);return u[r]=Math.max(u[r]||3,s),{text:i,width:s}}),"children")),"children"),s=c(!1);if("never"!==t.proseWrap)return[o,s];let p=c(!0);return[o,E(m(p,s))];function c(e){let t=[D(i[0],e),d(e)];return i.length>1&&t.push(l(C,i.slice(1).map((t=>D(t,e))))),l(C,t)}function d(e){return`| ${u.map(((t,n)=>{let u=r.align[n],i="center"===u||"right"===u?":":"-";return`${"center"===u||"left"===u?":":"-"}${e?"-":"-".repeat(t-2)}${i}`})).join(" | ")} |`}function D(e,t){return`| ${e.map(((e,n)=>{let{text:i,width:a}=e;if(t)return i;let s=u[n]-a,o=r.align[n],l=0;"right"===o?l=s:"center"===o&&(l=Math.floor(s/2));let p=s-l;return`${" ".repeat(l)}${i}${" ".repeat(p)}`})).join(" | ")} |`}}(e,t,n);case"tableCell":return z(e,t,n);case"break":return/\s/.test(t.originalText[s.position.start.offset])?["  ",d(c)]:["\\",D];case"liquidNode":return F(s.value,D);case"importExport":return[s.value,D];case"esComment":return["{/* ",s.value," */}"];case"jsx":return s.value;case"math":return["$$",D,s.value?[...F(s.value,D),D]:"","$$"];case"inlineMath":return t.originalText.slice(T(s),B(s));default:throw new Error(`Unknown markdown type ${JSON.stringify(s.type)}`)}},embed:b,massageAstNode:N,hasPrettierIgnore:function(e){let t=Number(e.getName());return 0!==t&&"next"===Y(e.getParentNode().children[t-1])},insertPragma:S}}}),Cu=E({"src/language-markdown/options.js"(e,t){v();var n=Cr();t.exports={proseWrap:n.proseWrap,singleQuote:n.singleQuote}}}),Au=E({"src/language-markdown/parsers.js"(){v()}}),Fu=E({"node_modules/linguist-languages/data/Markdown.json"(e,t){t.exports={name:"Markdown",type:"prose",color:"#083fa1",aliases:["pandoc"],aceMode:"markdown",codemirrorMode:"gfm",codemirrorMimeType:"text/x-gfm",wrap:!0,extensions:[".md",".livemd",".markdown",".mdown",".mdwn",".mdx",".mkd",".mkdn",".mkdown",".ronn",".scd",".workbook"],filenames:["contents.lr"],tmScope:"source.gfm",languageId:222}}}),vu=E({"src/language-markdown/index.js"(e,t){v();var n=Qt(),r=Eu(),u=Cu(),i=Au(),a=[n(Fu(),(e=>({since:"1.8.0",parsers:["markdown"],vscodeLanguageIds:["markdown"],filenames:[...e.filenames,"README"],extensions:e.extensions.filter((e=>".mdx"!==e))}))),n(Fu(),(()=>({name:"MDX",since:"1.15.0",parsers:["mdx"],vscodeLanguageIds:["mdx"],filenames:[],extensions:[".mdx"]})))],s={mdast:r};t.exports={languages:a,options:u,printers:s,parsers:i}}}),xu=E({"src/language-html/clean.js"(e,t){v();var{isFrontMatterNode:n}=De(),r=new Set(["sourceSpan","startSourceSpan","endSourceSpan","nameSpan","valueSpan"]);function u(e,t){if("text"===e.type||"comment"===e.type||n(e)||"yaml"===e.type||"toml"===e.type)return null;"attribute"===e.type&&delete t.value,"docType"===e.type&&delete t.value}u.ignoredProperties=r,t.exports=u}}),bu=E({"src/language-html/constants.evaluate.js"(e,t){t.exports={CSS_DISPLAY_TAGS:{area:"none",base:"none",basefont:"none",datalist:"none",head:"none",link:"none",meta:"none",noembed:"none",noframes:"none",param:"block",rp:"none",script:"block",source:"block",style:"none",template:"inline",track:"block",title:"none",html:"block",body:"block",address:"block",blockquote:"block",center:"block",div:"block",figure:"block",figcaption:"block",footer:"block",form:"block",header:"block",hr:"block",legend:"block",listing:"block",main:"block",p:"block",plaintext:"block",pre:"block",xmp:"block",slot:"contents",ruby:"ruby",rt:"ruby-text",article:"block",aside:"block",h1:"block",h2:"block",h3:"block",h4:"block",h5:"block",h6:"block",hgroup:"block",nav:"block",section:"block",dir:"block",dd:"block",dl:"block",dt:"block",ol:"block",ul:"block",li:"list-item",table:"table",caption:"table-caption",colgroup:"table-column-group",col:"table-column",thead:"table-header-group",tbody:"table-row-group",tfoot:"table-footer-group",tr:"table-row",td:"table-cell",th:"table-cell",fieldset:"block",button:"inline-block",details:"block",summary:"block",dialog:"block",meter:"inline-block",progress:"inline-block",object:"inline-block",video:"inline-block",audio:"inline-block",select:"inline-block",option:"block",optgroup:"block"},CSS_DISPLAY_DEFAULT:"inline",CSS_WHITE_SPACE_TAGS:{listing:"pre",plaintext:"pre",pre:"pre",xmp:"pre",nobr:"nowrap",table:"initial",textarea:"pre-wrap"},CSS_WHITE_SPACE_DEFAULT:"normal"}}}),Su=E({"src/language-html/utils/is-unknown-namespace.js"(e,t){v(),t.exports=function(e){return"element"===e.type&&!e.hasExplicitNamespace&&!["html","svg"].includes(e.namespace)}}}),Tu=E({"src/language-html/utils/index.js"(e,t){v();var{inferParserByLanguage:n,isFrontMatterNode:r}=De(),{builders:{line:u,hardline:i,join:a},utils:{getDocParts:s,replaceTextEndOfLine:o}}=U(),{CSS_DISPLAY_TAGS:l,CSS_DISPLAY_DEFAULT:p,CSS_WHITE_SPACE_TAGS:c,CSS_WHITE_SPACE_DEFAULT:d}=bu(),D=Su(),f=new Set(["\t","\n","\f","\r"," "]),m=e=>e.replace(/[\t\n\f\r ]+$/,""),g=e=>(e=>e.replace(/^[\t\f\r ]*\n/g,""))(m(e)),y=e=>e.match(/^[\t\n\f\r ]*/)[0];function h(e){return"element"===e.type&&("script"===e.fullName||"style"===e.fullName||"svg:style"===e.fullName||D(e)&&("script"===e.name||"style"===e.name))}function E(e){return N(e).startsWith("pre")}function C(e){return"element"===e.type&&e.children.length>0&&(["html","head","ul","ol","select"].includes(e.name)||e.cssDisplay.startsWith("table")&&"table-cell"!==e.cssDisplay)}function A(e){return S(e)||"element"===e.type&&"br"===e.fullName||F(e)}function F(e){return x(e)&&b(e)}function x(e){return e.hasLeadingSpaces&&(e.prev?e.prev.sourceSpan.end.line<e.sourceSpan.start.line:"root"===e.parent.type||e.parent.startSourceSpan.end.line<e.sourceSpan.start.line)}function b(e){return e.hasTrailingSpaces&&(e.next?e.next.sourceSpan.start.line>e.sourceSpan.end.line:"root"===e.parent.type||e.parent.endSourceSpan&&e.parent.endSourceSpan.start.line>e.sourceSpan.end.line)}function S(e){switch(e.type){case"ieConditionalComment":case"comment":case"directive":return!0;case"element":return["script","select"].includes(e.name)}return!1}function T(e){let{type:t,lang:n}=e.attrMap;return"module"===t||"text/javascript"===t||"text/babel"===t||"application/javascript"===t||"jsx"===n?"babel":"application/x-typescript"===t||"ts"===n||"tsx"===n?"typescript":"text/markdown"===t?"markdown":"text/html"===t?"html":t&&(t.endsWith("json")||t.endsWith("importmap"))||"speculationrules"===t?"json":"text/x-handlebars-template"===t?"glimmer":void 0}function B(e){return"block"===e||"list-item"===e||e.startsWith("table")}function w(e){return N(e).startsWith("pre")}function N(e){return"element"===e.type&&(!e.namespace||D(e))&&c[e.name]||d}function k(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(e){let t=Number.POSITIVE_INFINITY;for(let n of e.split("\n")){if(0===n.length)continue;if(!f.has(n[0]))return 0;let e=y(n).length;n.length!==e&&e<t&&(t=e)}return t===Number.POSITIVE_INFINITY?0:t}(e);return 0===t?e:e.split("\n").map((e=>e.slice(t))).join("\n")}var j=new Set(["template","style","script"]);function P(e,t){return I(e,t)&&!j.has(e.fullName)}function I(e,t){return"vue"===t.parser&&"element"===e.type&&"root"===e.parent.type&&"html"!==e.fullName.toLowerCase()}function O(e,t){return I(e,t)&&(P(e,t)||e.attrMap.lang&&"html"!==e.attrMap.lang)}t.exports={htmlTrim:e=>(e=>e.replace(/^[\t\n\f\r ]+/,""))(m(e)),htmlTrimPreserveIndentation:g,hasHtmlWhitespace:e=>/[\t\n\f\r ]/.test(e),getLeadingAndTrailingHtmlWhitespace:e=>{let[,t,n,r]=e.match(/^([\t\n\f\r ]*)(.*?)([\t\n\f\r ]*)$/s);return{leadingWhitespace:t,trailingWhitespace:r,text:n}},canHaveInterpolation:function(e){return e.children&&!h(e)},countChars:function(e,t){let n=0;for(let r=0;r<e.length;r++)e[r]===t&&n++;return n},countParents:function(e,t){let n=0;for(let r=e.stack.length-1;r>=0;r--){let u=e.stack[r];u&&"object"==typeof u&&!Array.isArray(u)&&t(u)&&n++}return n},dedentString:k,forceBreakChildren:C,forceBreakContent:function(e){return C(e)||"element"===e.type&&e.children.length>0&&(["body","script","style"].includes(e.name)||e.children.some((e=>function(e){return e.children&&e.children.some((e=>"text"!==e.type))}(e))))||e.firstChild&&e.firstChild===e.lastChild&&"text"!==e.firstChild.type&&x(e.firstChild)&&(!e.lastChild.isTrailingSpaceSensitive||b(e.lastChild))},forceNextEmptyLine:function(e){return r(e)||e.next&&e.sourceSpan.end&&e.sourceSpan.end.line+1<e.next.sourceSpan.start.line},getLastDescendant:function e(t){return t.lastChild?e(t.lastChild):t},getNodeCssStyleDisplay:function(e,t){if(e.prev&&"comment"===e.prev.type){let t=e.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/);if(t)return t[1]}let n=!1;if("element"===e.type&&"svg"===e.namespace){if(!function(e,t){let n=e;for(;n;){if(t(n))return!0;n=n.parent}return!1}(e,(e=>"svg:foreignObject"===e.fullName)))return"svg"===e.name?"inline-block":"block";n=!0}switch(t.htmlWhitespaceSensitivity){case"strict":return"inline";case"ignore":return"block";default:return"vue"===t.parser&&e.parent&&"root"===e.parent.type?"block":"element"===e.type&&(!e.namespace||n||D(e))&&l[e.name]||p}},getNodeCssStyleWhiteSpace:N,hasPrettierIgnore:function(e){return!("attribute"===e.type||!e.parent||!e.prev)&&function(e){return"comment"===e.type&&"prettier-ignore"===e.value.trim()}(e.prev)},inferScriptParser:function(e,t){return"script"!==e.name||e.attrMap.src?"style"===e.name?function(e,t){let{lang:r}=e.attrMap;return r&&"postcss"!==r&&"css"!==r?"scss"===r?"scss":"less"===r?"less":"stylus"===r?n("stylus",t):void 0:"css"}(e,t):t&&O(e,t)?T(e)||!("src"in e.attrMap)&&n(e.attrMap.lang,t):void 0:e.attrMap.lang||e.attrMap.type?T(e):"babel"},isVueCustomBlock:P,isVueNonHtmlBlock:O,isVueScriptTag:function(e,t){return I(e,t)&&"script"===e.name},isVueSlotAttribute:function(e){let t=e.fullName;return"#"===t.charAt(0)||"slot-scope"===t||"v-slot"===t||t.startsWith("v-slot:")},isVueSfcBindingsAttribute:function(e,t){let n=e.parent;if(!I(n,t))return!1;let r=n.fullName,u=e.fullName;return"script"===r&&"setup"===u||"style"===r&&"vars"===u},isVueSfcBlock:I,isDanglingSpaceSensitiveNode:function(e){return function(e){return!B(e)&&"inline-block"!==e}(e.cssDisplay)&&!h(e)},isIndentationSensitiveNode:E,isLeadingSpaceSensitiveNode:function(e,t){let n=!(r(e)||("text"!==e.type&&"interpolation"!==e.type||!e.prev||"text"!==e.prev.type&&"interpolation"!==e.prev.type)&&(!e.parent||"none"===e.parent.cssDisplay||!w(e.parent)&&(!e.prev&&("root"===e.parent.type||w(e)&&e.parent||h(e.parent)||P(e.parent,t)||!function(e){return!B(e)&&"inline-block"!==e}(e.parent.cssDisplay))||e.prev&&!function(e){return!B(e)}(e.prev.cssDisplay))));return n&&!e.prev&&e.parent&&e.parent.tagDefinition&&e.parent.tagDefinition.ignoreFirstLf?"interpolation"===e.type:n},isPreLikeNode:w,isScriptLikeTag:h,isTextLikeNode:function(e){return"text"===e.type||"comment"===e.type},isTrailingSpaceSensitiveNode:function(e,t){return!(r(e)||("text"!==e.type&&"interpolation"!==e.type||!e.next||"text"!==e.next.type&&"interpolation"!==e.next.type)&&(!e.parent||"none"===e.parent.cssDisplay||!w(e.parent)&&(!e.next&&("root"===e.parent.type||w(e)&&e.parent||h(e.parent)||P(e.parent,t)||!function(e){return!B(e)&&"inline-block"!==e}(e.parent.cssDisplay))||e.next&&!function(e){return!B(e)}(e.next.cssDisplay))))},isWhitespaceSensitiveNode:function(e){return h(e)||"interpolation"===e.type||E(e)},isUnknownNamespace:D,preferHardlineAsLeadingSpaces:function(e){return S(e)||e.prev&&A(e.prev)||F(e)},preferHardlineAsTrailingSpaces:A,shouldPreserveContent:function(e,t){return!!("ieConditionalComment"===e.type&&e.lastChild&&!e.lastChild.isSelfClosing&&!e.lastChild.endSourceSpan||"ieConditionalComment"===e.type&&!e.complete||w(e)&&e.children.some((e=>"text"!==e.type&&"interpolation"!==e.type))||O(e,t)&&!h(e)&&"interpolation"!==e.type)},unescapeQuoteEntities:function(e){return e.replace(/&apos;/g,"'").replace(/&quot;/g,'"')},getTextValueParts:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.value;return e.parent.isWhitespaceSensitive?e.parent.isIndentationSensitive?o(t):o(k(g(t)),i):s(a(u,(e=>e.split(/[\t\n\f\r ]+/))(t)))}}}}),Bu=E({"node_modules/angular-html-parser/lib/compiler/src/chars.js"(e){function t(t){return e.$0<=t&&t<=e.$9}v(),Object.defineProperty(e,"__esModule",{value:!0}),e.$EOF=0,e.$BSPACE=8,e.$TAB=9,e.$LF=10,e.$VTAB=11,e.$FF=12,e.$CR=13,e.$SPACE=32,e.$BANG=33,e.$DQ=34,e.$HASH=35,e.$$=36,e.$PERCENT=37,e.$AMPERSAND=38,e.$SQ=39,e.$LPAREN=40,e.$RPAREN=41,e.$STAR=42,e.$PLUS=43,e.$COMMA=44,e.$MINUS=45,e.$PERIOD=46,e.$SLASH=47,e.$COLON=58,e.$SEMICOLON=59,e.$LT=60,e.$EQ=61,e.$GT=62,e.$QUESTION=63,e.$0=48,e.$7=55,e.$9=57,e.$A=65,e.$E=69,e.$F=70,e.$X=88,e.$Z=90,e.$LBRACKET=91,e.$BACKSLASH=92,e.$RBRACKET=93,e.$CARET=94,e.$_=95,e.$a=97,e.$b=98,e.$e=101,e.$f=102,e.$n=110,e.$r=114,e.$t=116,e.$u=117,e.$v=118,e.$x=120,e.$z=122,e.$LBRACE=123,e.$BAR=124,e.$RBRACE=125,e.$NBSP=160,e.$PIPE=124,e.$TILDA=126,e.$AT=64,e.$BT=96,e.isWhitespace=function(t){return t>=e.$TAB&&t<=e.$SPACE||t==e.$NBSP},e.isDigit=t,e.isAsciiLetter=function(t){return t>=e.$a&&t<=e.$z||t>=e.$A&&t<=e.$Z},e.isAsciiHexDigit=function(n){return n>=e.$a&&n<=e.$f||n>=e.$A&&n<=e.$F||t(n)},e.isNewLine=function(t){return t===e.$LF||t===e.$CR},e.isOctalDigit=function(t){return e.$0<=t&&t<=e.$7}}}),wu=E({"node_modules/angular-html-parser/lib/compiler/src/aot/static_symbol.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=class{constructor(e,t,n){this.filePath=e,this.name=t,this.members=n}assertNoMembers(){if(this.members.length)throw new Error(`Illegal state: symbol without members expected, but got ${JSON.stringify(this)}.`)}};e.StaticSymbol=t;e.StaticSymbolCache=class{constructor(){this.cache=new Map}get(e,n,r){let u=`"${e}".${n}${(r=r||[]).length?`.${r.join(".")}`:""}`,i=this.cache.get(u);return i||(i=new t(e,n,r),this.cache.set(u,i)),i}}}}),Nu=E({"node_modules/angular-html-parser/lib/compiler/src/util.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=/-+([a-z0-9])/g;function n(e,t,n){let r=e.indexOf(t);return-1==r?n:[e.slice(0,r).trim(),e.slice(r+1).trim()]}function r(e,t,n){return Array.isArray(e)?t.visitArray(e,n):function(e){return"object"==typeof e&&null!==e&&Object.getPrototypeOf(e)===a}(e)?t.visitStringMap(e,n):null==e||"string"==typeof e||"number"==typeof e||"boolean"==typeof e?t.visitPrimitive(e,n):t.visitOther(e,n)}e.dashCaseToCamelCase=function(e){return e.replace(t,(function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t[1].toUpperCase()}))},e.splitAtColon=function(e,t){return n(e,":",t)},e.splitAtPeriod=function(e,t){return n(e,".",t)},e.visitValue=r,e.isDefined=function(e){return null!=e},e.noUndefined=function(e){return void 0===e?null:e};e.ValueTransformer=class{visitArray(e,t){return e.map((e=>r(e,this,t)))}visitStringMap(e,t){let n={};return Object.keys(e).forEach((u=>{n[u]=r(e[u],this,t)})),n}visitPrimitive(e,t){return e}visitOther(e,t){return e}},e.SyncAsync={assertSync:e=>{if(s(e))throw new Error("Illegal state: value cannot be a promise");return e},then:(e,t)=>s(e)?e.then(t):t(e),all:e=>e.some(s)?Promise.all(e):e},e.error=function(e){throw new Error(`Internal Error: ${e}`)},e.syntaxError=function(e,t){let n=Error(e);return n[u]=!0,t&&(n[i]=t),n};var u="ngSyntaxError",i="ngParseErrors";e.isSyntaxError=function(e){return e[u]},e.getParseErrors=function(e){return e[i]||[]},e.escapeRegExp=function(e){return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")};var a=Object.getPrototypeOf({});function s(e){return!!e&&"function"==typeof e.then}e.utf8Encode=function(e){let t="";for(let n=0;n<e.length;n++){let r=e.charCodeAt(n);if(r>=55296&&r<=56319&&e.length>n+1){let t=e.charCodeAt(n+1);t>=56320&&t<=57343&&(n++,r=(r-55296<<10)+t-56320+65536)}r<=127?t+=String.fromCharCode(r):r<=2047?t+=String.fromCharCode(r>>6&31|192,63&r|128):r<=65535?t+=String.fromCharCode(r>>12|224,r>>6&63|128,63&r|128):r<=2097151&&(t+=String.fromCharCode(r>>18&7|240,r>>12&63|128,r>>6&63|128,63&r|128))}return t},e.stringify=function e(t){if("string"==typeof t)return t;if(t instanceof Array)return"["+t.map(e).join(", ")+"]";if(null==t)return""+t;if(t.overriddenName)return`${t.overriddenName}`;if(t.name)return`${t.name}`;if(!t.toString)return"object";let n=t.toString();if(null==n)return""+n;let r=n.indexOf("\n");return-1===r?n:n.substring(0,r)},e.resolveForwardRef=function(e){return"function"==typeof e&&e.hasOwnProperty("__forward_ref__")?e():e},e.isPromise=s;e.Version=class{constructor(e){this.full=e;let t=e.split(".");this.major=t[0],this.minor=t[1],this.patch=t.slice(2).join(".")}};var o=typeof window<"u"&&window,l=typeof self<"u"&&typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&self,p=typeof globalThis<"u"&&globalThis||o||l;e.global=p}}),ku=E({"node_modules/angular-html-parser/lib/compiler/src/compile_metadata.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=wu(),n=Nu(),r=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function u(e){return e.replace(/\W/g,"_")}e.sanitizeIdentifier=u;var i,a,s=0;function o(e){if(!e||!e.reference)return null;let r=e.reference;if(r instanceof t.StaticSymbol)return r.name;if(r.__anonymousType)return r.__anonymousType;let i=n.stringify(r);return i.indexOf("(")>=0?(i="anonymous_"+s++,r.__anonymousType=i):i=u(i),i}e.identifierName=o,e.identifierModuleUrl=function(e){let r=e.reference;return r instanceof t.StaticSymbol?r.filePath:`./${n.stringify(r)}`},e.viewClassName=function(e,t){return`View_${o({reference:e})}_${t}`},e.rendererTypeName=function(e){return`RenderType_${o({reference:e})}`},e.hostViewClassName=function(e){return`HostView_${o({reference:e})}`},e.componentFactoryName=function(e){return`${o({reference:e})}NgFactory`},(a=i=e.CompileSummaryKind||(e.CompileSummaryKind={}))[a.Pipe=0]="Pipe",a[a.Directive=1]="Directive",a[a.NgModule=2]="NgModule",a[a.Injectable=3]="Injectable",e.tokenName=function(e){return null!=e.value?u(e.value):o(e.identifier)},e.tokenReference=function(e){return null!=e.identifier?e.identifier.reference:e.value};e.CompileStylesheetMetadata=class{constructor(){let{moduleUrl:e,styles:t,styleUrls:n}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.moduleUrl=e||null,this.styles=p(t),this.styleUrls=p(n)}};e.CompileTemplateMetadata=class{constructor(e){let{encapsulation:t,template:n,templateUrl:r,htmlAst:u,styles:i,styleUrls:a,externalStylesheets:s,animations:o,ngContentSelectors:l,interpolation:d,isInline:D,preserveWhitespaces:f}=e;if(this.encapsulation=t,this.template=n,this.templateUrl=r,this.htmlAst=u,this.styles=p(i),this.styleUrls=p(a),this.externalStylesheets=p(s),this.animations=o?c(o):[],this.ngContentSelectors=l||[],d&&2!=d.length)throw new Error("'interpolation' should have a start and an end symbol.");this.interpolation=d,this.isInline=D,this.preserveWhitespaces=f}toSummary(){return{ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation,styles:this.styles,animations:this.animations}}};var l=class{static create(e){let{isHost:t,type:u,isComponent:i,selector:a,exportAs:s,changeDetection:o,inputs:p,outputs:c,host:d,providers:D,viewProviders:f,queries:m,guards:g,viewQueries:y,entryComponents:h,template:E,componentViewType:C,rendererType:A,componentFactory:F}=e,v={},x={},b={};null!=d&&Object.keys(d).forEach((e=>{let t=d[e],n=e.match(r);null===n?b[e]=t:null!=n[1]?x[n[1]]=t:null!=n[2]&&(v[n[2]]=t)}));let S={};null!=p&&p.forEach((e=>{let t=n.splitAtColon(e,[e,e]);S[t[0]]=t[1]}));let T={};return null!=c&&c.forEach((e=>{let t=n.splitAtColon(e,[e,e]);T[t[0]]=t[1]})),new l({isHost:t,type:u,isComponent:!!i,selector:a,exportAs:s,changeDetection:o,inputs:S,outputs:T,hostListeners:v,hostProperties:x,hostAttributes:b,providers:D,viewProviders:f,queries:m,guards:g,viewQueries:y,entryComponents:h,template:E,componentViewType:C,rendererType:A,componentFactory:F})}constructor(e){let{isHost:t,type:n,isComponent:r,selector:u,exportAs:i,changeDetection:a,inputs:s,outputs:o,hostListeners:l,hostProperties:c,hostAttributes:d,providers:D,viewProviders:f,queries:m,guards:g,viewQueries:y,entryComponents:h,template:E,componentViewType:C,rendererType:A,componentFactory:F}=e;this.isHost=!!t,this.type=n,this.isComponent=r,this.selector=u,this.exportAs=i,this.changeDetection=a,this.inputs=s,this.outputs=o,this.hostListeners=l,this.hostProperties=c,this.hostAttributes=d,this.providers=p(D),this.viewProviders=p(f),this.queries=p(m),this.guards=g,this.viewQueries=p(y),this.entryComponents=p(h),this.template=E,this.componentViewType=C,this.rendererType=A,this.componentFactory=F}toSummary(){return{summaryKind:i.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,guards:this.guards,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory}}};e.CompileDirectiveMetadata=l;e.CompilePipeMetadata=class{constructor(e){let{type:t,name:n,pure:r}=e;this.type=t,this.name=n,this.pure=!!r}toSummary(){return{summaryKind:i.Pipe,type:this.type,name:this.name,pure:this.pure}}};e.CompileShallowModuleMetadata=class{};e.CompileNgModuleMetadata=class{constructor(e){let{type:t,providers:n,declaredDirectives:r,exportedDirectives:u,declaredPipes:i,exportedPipes:a,entryComponents:s,bootstrapComponents:o,importedModules:l,exportedModules:c,schemas:d,transitiveModule:D,id:f}=e;this.type=t||null,this.declaredDirectives=p(r),this.exportedDirectives=p(u),this.declaredPipes=p(i),this.exportedPipes=p(a),this.providers=p(n),this.entryComponents=p(s),this.bootstrapComponents=p(o),this.importedModules=p(l),this.exportedModules=p(c),this.schemas=p(d),this.id=f||null,this.transitiveModule=D||null}toSummary(){let e=this.transitiveModule;return{summaryKind:i.NgModule,type:this.type,entryComponents:e.entryComponents,providers:e.providers,modules:e.modules,exportedDirectives:e.exportedDirectives,exportedPipes:e.exportedPipes}}};function p(e){return e||[]}e.TransitiveCompileNgModuleMetadata=class{constructor(){this.directivesSet=new Set,this.directives=[],this.exportedDirectivesSet=new Set,this.exportedDirectives=[],this.pipesSet=new Set,this.pipes=[],this.exportedPipesSet=new Set,this.exportedPipes=[],this.modulesSet=new Set,this.modules=[],this.entryComponentsSet=new Set,this.entryComponents=[],this.providers=[]}addProvider(e,t){this.providers.push({provider:e,module:t})}addDirective(e){this.directivesSet.has(e.reference)||(this.directivesSet.add(e.reference),this.directives.push(e))}addExportedDirective(e){this.exportedDirectivesSet.has(e.reference)||(this.exportedDirectivesSet.add(e.reference),this.exportedDirectives.push(e))}addPipe(e){this.pipesSet.has(e.reference)||(this.pipesSet.add(e.reference),this.pipes.push(e))}addExportedPipe(e){this.exportedPipesSet.has(e.reference)||(this.exportedPipesSet.add(e.reference),this.exportedPipes.push(e))}addModule(e){this.modulesSet.has(e.reference)||(this.modulesSet.add(e.reference),this.modules.push(e))}addEntryComponent(e){this.entryComponentsSet.has(e.componentType)||(this.entryComponentsSet.add(e.componentType),this.entryComponents.push(e))}};function c(e){return e.reduce(((e,t)=>{let n=Array.isArray(t)?c(t):t;return e.concat(n)}),[])}function d(e){return e.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/,"ng:///")}e.ProviderMeta=class{constructor(e,t){let{useClass:n,useValue:r,useExisting:u,useFactory:i,deps:a,multi:s}=t;this.token=e,this.useClass=n||null,this.useValue=r,this.useExisting=u,this.useFactory=i||null,this.dependencies=a||null,this.multi=!!s}},e.flatten=c,e.templateSourceUrl=function(e,n,r){let u;return u=r.isInline?n.type.reference instanceof t.StaticSymbol?`${n.type.reference.filePath}.${n.type.reference.name}.html`:`${o(e)}/${o(n.type)}.html`:r.templateUrl,n.type.reference instanceof t.StaticSymbol?u:d(u)},e.sharedStylesheetJitUrl=function(e,t){let n=e.moduleUrl.split(/\/\\/g);return d(`css/${t}${n[n.length-1]}.ngstyle.js`)},e.ngModuleJitUrl=function(e){return d(`${o(e.type)}/module.ngfactory.js`)},e.templateJitUrl=function(e,t){return d(`${o(e)}/${o(t.type)}.ngfactory.js`)}}}),ju=E({"node_modules/angular-html-parser/lib/compiler/src/parse_util.js"(e){v(),Object.defineProperty(e,"__esModule",{value:!0});var t=Bu(),n=ku(),r=class{constructor(e,t,n,r){this.file=e,this.offset=t,this.line=n,this.col=r}toString(){return null!=this.offset?`${this.file.url}@${this.line}:${this.col}`:this.file.url}moveBy(e){let n=this.file.content,u=n.length,i=this.offset,a=this.line,s=this.col;for(;i>0&&e<0;)if(i--,e++,n.charCodeAt(i)==t.$LF){a--;let e=n.substr(0,i-1).lastIndexOf(String.fromCharCode(t.$LF));s=e>0?i-e:i}else s--;for(;i<u&&e>0;){let r=n.charCodeAt(i);i++,e--,r==t.$LF?(a++,s=0):s++}return new r(this.file,i,a,s)}getContext(e,t){let n=this.file.content,r=this.offset;if(null!=r){r>n.length-1&&(r=n.length-1);let u=r,i=0,a=0;for(;i<e&&r>0&&(r--,i++,"\n"!=n[r]||++a!=t););for(i=0,a=0;i<e&&u<n.length-1&&(u++,i++,"\n"!=n[u]||++a!=t););return{before:n.substring(r,this.offset),after:n.substring(this.offset,u+1)}}return null}};e.ParseLocation=r;var u=class{constructor(e,t){this.content=e,this.url=t}};e.ParseSourceFile=u;var i,a,s=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.start=e,this.end=t,this.details=n}toString(){return this.start.file.content.substring(this.start.offset,this.end.offset)}};e.ParseSourceSpan=s,e.EMPTY_PARSE_LOCATION=new r(new u("",""),0,0,0),e.EMPTY_SOURCE_SPAN=new s(e.EMPTY_PARSE_LOCATION,e.EMPTY_PARSE_LOCATION),(a=i=e.ParseErrorLevel||(e.ParseErrorLevel={}))[a.WARNING=0]="WARNING",a[a.ERROR=1]="ERROR";e.ParseError=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.ERROR;this.span=e,this.msg=t,this.level=n}contextualMessage(){let e=this.span.start.getContext(100,3);return e?`${this.msg} ("${e.before}[${i[this.level]} ->]${e.after}")`:this.msg}toString(){let e=this.span.details?`, ${this.span.details}`:"";return`${this.contextualMessage()}: ${this.span.start}${e}`}},e.typeSourceSpan=function(e,t){let i=n.identifierModuleUrl(t),a=null!=i?`in ${e} ${n.identifierName(t)} in ${i}`:`in ${e} ${n.identifierName(t)}`,o=new u("",a);return new s(new r(o,-1,-1,-1),new r(o,-1,-1,-1))},e.r3JitTypeSourceSpan=function(e,t,n){let i=new u("",`in ${e} ${t} in ${n}`);return new s(new r(i,-1,-1,-1),new r(i,-1,-1,-1))}}}),Pu=E({"src/language-html/print-preprocess.js"(e,t){v();var{ParseSourceSpan:n}=ju(),{htmlTrim:r,getLeadingAndTrailingHtmlWhitespace:u,hasHtmlWhitespace:i,canHaveInterpolation:a,getNodeCssStyleDisplay:s,isDanglingSpaceSensitiveNode:o,isIndentationSensitiveNode:l,isLeadingSpaceSensitiveNode:p,isTrailingSpaceSensitiveNode:c,isWhitespaceSensitiveNode:d,isVueScriptTag:D}=Tu(),f=[function(e){e.walk((e=>{if("element"===e.type&&e.tagDefinition.ignoreFirstLf&&e.children.length>0&&"text"===e.children[0].type&&"\n"===e.children[0].value[0]){let t=e.children[0];1===t.value.length?e.removeChild(t):t.value=t.value.slice(1)}}))},function(e){let t=e=>"element"===e.type&&e.prev&&"ieConditionalStartComment"===e.prev.type&&e.prev.sourceSpan.end.offset===e.startSourceSpan.start.offset&&e.firstChild&&"ieConditionalEndComment"===e.firstChild.type&&e.firstChild.sourceSpan.start.offset===e.startSourceSpan.end.offset;e.walk((e=>{if(e.children)for(let r=0;r<e.children.length;r++){let u=e.children[r];if(!t(u))continue;let i=u.prev,a=u.firstChild;e.removeChild(i),r--;let s=new n(i.sourceSpan.start,a.sourceSpan.end),o=new n(s.start,u.sourceSpan.end);u.condition=i.condition,u.sourceSpan=o,u.startSourceSpan=s,u.removeChild(a)}}))},function(e){return function(e,t,r){e.walk((e=>{if(e.children)for(let u=0;u<e.children.length;u++){let i=e.children[u];if("text"!==i.type&&!t(i))continue;"text"!==i.type&&(i.type="text",i.value=r(i));let a=i.prev;!a||"text"!==a.type||(a.value+=i.value,a.sourceSpan=new n(a.sourceSpan.start,i.sourceSpan.end),e.removeChild(i),u--)}}))}(e,(e=>"cdata"===e.type),(e=>`<![CDATA[${e.value}]]>`))},function(e,t){if("html"===t.parser)return;let r=/{{(.+?)}}/s;e.walk((e=>{if(a(e))for(let t of e.children){if("text"!==t.type)continue;let u=t.sourceSpan.start,i=null,a=t.value.split(r);for(let r=0;r<a.length;r++,u=i){let s=a[r];r%2!=0?(i=u.moveBy(s.length+4),e.insertChildBefore(t,{type:"interpolation",sourceSpan:new n(u,i),children:0===s.length?[]:[{type:"text",value:s,sourceSpan:new n(u.moveBy(2),i.moveBy(-2))}]})):(i=u.moveBy(s.length),s.length>0&&e.insertChildBefore(t,{type:"text",value:s,sourceSpan:new n(u,i)}))}e.removeChild(t)}}))},function(e){e.walk((e=>{if(!e.children)return;if(0===e.children.length||1===e.children.length&&"text"===e.children[0].type&&0===r(e.children[0].value).length)return e.hasDanglingSpaces=e.children.length>0,void(e.children=[]);let t=d(e),i=l(e);if(!t)for(let t=0;t<e.children.length;t++){let r=e.children[t];if("text"!==r.type)continue;let{leadingWhitespace:i,text:a,trailingWhitespace:s}=u(r.value),o=r.prev,l=r.next;a?(r.value=a,r.sourceSpan=new n(r.sourceSpan.start.moveBy(i.length),r.sourceSpan.end.moveBy(-s.length)),i&&(o&&(o.hasTrailingSpaces=!0),r.hasLeadingSpaces=!0),s&&(r.hasTrailingSpaces=!0,l&&(l.hasLeadingSpaces=!0))):(e.removeChild(r),t--,(i||s)&&(o&&(o.hasTrailingSpaces=!0),l&&(l.hasLeadingSpaces=!0)))}e.isWhitespaceSensitive=t,e.isIndentationSensitive=i}))},function(e,t){e.walk((e=>{e.cssDisplay=s(e,t)}))},function(e){e.walk((e=>{e.isSelfClosing=!e.children||"element"===e.type&&(e.tagDefinition.isVoid||e.startSourceSpan===e.endSourceSpan)}))},function(e,t){e.walk((e=>{"element"===e.type&&(e.hasHtmComponentClosingTag=e.endSourceSpan&&/^<\s*\/\s*\/\s*>$/.test(t.originalText.slice(e.endSourceSpan.start.offset,e.endSourceSpan.end.offset)))}))},function(e,t){e.walk((e=>{let{children:n}=e;if(n){if(0===n.length)return void(e.isDanglingSpaceSensitive=o(e));for(let e of n)e.isLeadingSpaceSensitive=p(e,t),e.isTrailingSpaceSensitive=c(e,t);for(let e=0;e<n.length;e++){let t=n[e];t.isLeadingSpaceSensitive=(0===e||t.prev.isTrailingSpaceSensitive)&&t.isLeadingSpaceSensitive,t.isTrailingSpaceSensitive=(e===n.length-1||t.next.isLeadingSpaceSensitive)&&t.isTrailingSpaceSensitive}}}))},function(e){let t=e=>"element"===e.type&&0===e.attrs.length&&1===e.children.length&&"text"===e.firstChild.type&&!i(e.children[0].value)&&!e.firstChild.hasLeadingSpaces&&!e.firstChild.hasTrailingSpaces&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces&&e.isTrailingSpaceSensitive&&!e.hasTrailingSpaces&&e.prev&&"text"===e.prev.type&&e.next&&"text"===e.next.type;e.walk((e=>{if(e.children)for(let r=0;r<e.children.length;r++){let u=e.children[r];if(!t(u))continue;let i=u.prev,a=u.next;i.value+=`<${u.rawName}>`+u.firstChild.value+`</${u.rawName}>`+a.value,i.sourceSpan=new n(i.sourceSpan.start,a.sourceSpan.end),i.isTrailingSpaceSensitive=a.isTrailingSpaceSensitive,i.hasTrailingSpaces=a.hasTrailingSpaces,e.removeChild(u),r--,e.removeChild(a)}}))},function(e,t){if("vue"===t.parser){let n=e.children.find((e=>D(e,t)));if(!n)return;let{lang:r}=n.attrMap;("ts"===r||"typescript"===r)&&(t.__should_parse_vue_template_with_ts=!0)}}];t.exports=function(e,t){for(let n of f)n(e,t);return e}}}),Iu=E({"src/language-html/pragma.js"(e,t){v(),t.exports={hasPragma:function(e){return/^\s*<!--\s*@(?:format|prettier)\s*-->/.test(e)},insertPragma:function(e){return"\x3c!-- @format --\x3e\n\n"+e.replace(/^\s*\n/,"")}}}}),Ou=E({"src/language-html/loc.js"(e,t){v(),t.exports={locStart:function(e){return e.sourceSpan.start.offset},locEnd:function(e){return e.sourceSpan.end.offset}}}}),Lu=E({"src/language-html/print/tag.js"(e,t){v();var n=Ut(),{isNonEmptyArray:r}=De(),{builders:{indent:u,join:i,line:a,softline:s,hardline:o},utils:{replaceTextEndOfLine:l}}=U(),{locStart:p,locEnd:c}=Ou(),{isTextLikeNode:d,getLastDescendant:D,isPreLikeNode:f,hasPrettierIgnore:m,shouldPreserveContent:g,isVueSfcBlock:y}=Tu();function h(e,t){return e.lastChild&&B(e.lastChild)?"":[C(e,t),F(e,t)]}function E(e,t){return(e.next?S(e.next):T(e.parent))?"":[x(e,t),A(e,t)]}function C(e,t){return T(e)?x(e.lastChild,t):""}function A(e,t){return B(e)?F(e.parent,t):w(e)?O(e.next):""}function F(e,t){if(n(!e.isSelfClosing),b(e,t))return"";switch(e.type){case"ieConditionalComment":return"<!";case"element":if(e.hasHtmComponentClosingTag)return"<//";default:return`</${e.rawName}`}}function x(e,t){if(b(e,t))return"";switch(e.type){case"ieConditionalComment":case"ieConditionalEndComment":return"[endif]--\x3e";case"ieConditionalStartComment":return"]>\x3c!--\x3e";case"interpolation":return"}}";case"element":if(e.isSelfClosing)return"/>";default:return">"}}function b(e,t){return!e.isSelfClosing&&!e.endSourceSpan&&(m(e)||g(e.parent,t))}function S(e){return e.prev&&"docType"!==e.prev.type&&!d(e.prev)&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces}function T(e){return e.lastChild&&e.lastChild.isTrailingSpaceSensitive&&!e.lastChild.hasTrailingSpaces&&!d(D(e.lastChild))&&!f(e)}function B(e){return!e.next&&!e.hasTrailingSpaces&&e.isTrailingSpaceSensitive&&d(D(e))}function w(e){return e.next&&!d(e.next)&&d(e)&&e.isTrailingSpaceSensitive&&!e.hasTrailingSpaces}function N(e){return!e.prev&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces}function k(e,t,n){let d=e.getValue();if(!r(d.attrs))return d.isSelfClosing?" ":"";let D=d.prev&&"comment"===d.prev.type&&function(e){let t=e.trim().match(/^prettier-ignore-attribute(?:\s+(.+))?$/s);return!!t&&(!t[1]||t[1].split(/\s+/))}(d.prev.value),f="boolean"==typeof D?()=>D:Array.isArray(D)?e=>D.includes(e.rawName):()=>!1,m=e.map((e=>{let r=e.getValue();return f(r)?l(t.originalText.slice(p(r),c(r))):n()}),"attrs"),g="element"===d.type&&"script"===d.fullName&&1===d.attrs.length&&"src"===d.attrs[0].fullName&&0===d.children.length,h=t.singleAttributePerLine&&d.attrs.length>1&&!y(d,t)?o:a,E=[u([g?" ":a,i(h,m)])];return d.firstChild&&N(d.firstChild)||d.isSelfClosing&&T(d.parent)||g?E.push(d.isSelfClosing?" ":""):E.push(t.bracketSameLine?d.isSelfClosing?" ":"":d.isSelfClosing?a:s),E}function j(e){return e.firstChild&&N(e.firstChild)?"":L(e)}function P(e,t){return e.prev&&w(e.prev)?"":[I(e,t),O(e)]}function I(e,t){return N(e)?L(e.parent):S(e)?x(e.prev,t):""}function O(e){switch(e.type){case"ieConditionalComment":case"ieConditionalStartComment":return`\x3c!--[if ${e.condition}`;case"ieConditionalEndComment":return"\x3c!--<!";case"interpolation":return"{{";case"docType":return"<!DOCTYPE";case"element":if(e.condition)return`\x3c!--[if ${e.condition}]>\x3c!--\x3e<${e.rawName}`;default:return`<${e.rawName}`}}function L(e){switch(n(!e.isSelfClosing),e.type){case"ieConditionalComment":return"]>";case"element":if(e.condition)return">\x3c!--<![endif]--\x3e";default:return">"}}t.exports={printClosingTag:function(e,t){return[e.isSelfClosing?"":h(e,t),E(e,t)]},printClosingTagStart:h,printClosingTagStartMarker:F,printClosingTagEndMarker:x,printClosingTagSuffix:A,printClosingTagEnd:E,needsToBorrowLastChildClosingTagEndMarker:T,needsToBorrowParentClosingTagStartMarker:B,needsToBorrowPrevClosingTagEndMarker:S,printOpeningTag:function(e,t,n){let r=e.getValue();return[P(r,t),k(e,t,n),r.isSelfClosing?"":j(r)]},printOpeningTagStart:P,printOpeningTagPrefix:I,printOpeningTagStartMarker:O,printOpeningTagEndMarker:L,needsToBorrowNextOpeningTagStartMarker:w,needsToBorrowParentOpeningTagEndMarker:N}}}),_u=E({"node_modules/parse-srcset/src/parse-srcset.js"(n,a){v(),u=[],void 0===(i="function"==typeof(r=function(){return function(e,t){var n=t&&t.logger||console;function r(e){return" "===e||"\t"===e||"\n"===e||"\f"===e||"\r"===e}function u(t){var n,r=t.exec(e.substring(y));if(r)return n=r[0],y+=n.length,n}for(var i,a,s,o,l,p=e.length,c=/^[ \t\n\r\u000c]+/,d=/^[, \t\n\r\u000c]+/,D=/^[^ \t\n\r\u000c]+/,f=/[,]+$/,m=/^\d+$/,g=/^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,y=0,h=[];;){if(u(d),y>=p)return h;i=u(D),a=[],","===i.slice(-1)?(i=i.replace(f,""),C()):E()}function E(){for(u(c),s="",o="in descriptor";;){if(l=e.charAt(y),"in descriptor"===o)if(r(l))s&&(a.push(s),s="",o="after descriptor");else{if(","===l)return y+=1,s&&a.push(s),void C();if("("===l)s+=l,o="in parens";else{if(""===l)return s&&a.push(s),void C();s+=l}}else if("in parens"===o)if(")"===l)s+=l,o="in descriptor";else{if(""===l)return a.push(s),void C();s+=l}else if("after descriptor"===o&&!r(l)){if(""===l)return void C();o="in descriptor",y-=1}y+=1}}function C(){var t,r,u,s,o,l,p,c,d,D=!1,f={};for(s=0;s<a.length;s++)l=(o=a[s])[o.length-1],p=o.substring(0,o.length-1),c=parseInt(p,10),d=parseFloat(p),m.test(p)&&"w"===l?((t||r)&&(D=!0),0===c?D=!0:t=c):g.test(p)&&"x"===l?((t||r||u)&&(D=!0),d<0?D=!0:r=d):m.test(p)&&"h"===l?((u||r)&&(D=!0),0===c?D=!0:u=c):D=!0;D?n&&n.error&&n.error("Invalid srcset descriptor found in '"+e+"' at '"+o+"'."):(f.url=i,t&&(f.w=t),r&&(f.d=r),u&&(f.h=u),h.push(f))}}})?r.apply(t,u):r)||(e.exports=i)}}),Mu=E({"src/language-html/syntax-attribute.js"(e,t){v();var n=_u(),{builders:{ifBreak:r,join:u,line:i}}=U();t.exports={printImgSrcset:function(e){let t=n(e,{logger:{error(e){throw new Error(e)}}}),a=t.some((e=>{let{w:t}=e;return t})),s=t.some((e=>{let{h:t}=e;return t}));if(a+s+t.some((e=>{let{d:t}=e;return t}))>1)throw new Error("Mixed descriptor in srcset is not supported");let o=a?"w":s?"h":"d",l=a?"w":s?"h":"x",p=e=>Math.max(...e),c=t.map((e=>e.url)),d=p(c.map((e=>e.length))),D=t.map((e=>e[o])).map((e=>e?e.toString():"")),f=D.map((e=>{let t=e.indexOf(".");return-1===t?e.length:t})),m=p(f);return u([",",i],c.map(((e,t)=>{let n=[e],u=D[t];if(u){let i=d-e.length+1,a=m-f[t],s=" ".repeat(i+a);n.push(r(s," "),u+l)}return n})))},printClassNames:function(e){return e.trim().split(/\s+/).join(" ")}}}}),$u=E({"src/language-html/syntax-vue.js"(e,t){v();var{builders:{group:n}}=U();t.exports={isVueEventBindingExpression:function(e){let t=e.trim();return/^(?:[\w$]+|\([^)]*\))\s*=>|^function\s*\(/.test(t)||/^[$A-Z_a-z][\w$]*(?:\.[$A-Z_a-z][\w$]*|\['[^']*']|\["[^"]*"]|\[\d+]|\[[$A-Z_a-z][\w$]*])*$/.test(t)},printVueFor:function(e,t){let{left:r,operator:u,right:i}=function(e){let t=/(.*?)\s+(in|of)\s+(.*)/s,n=/,([^,\]}]*)(?:,([^,\]}]*))?$/,r=/^\(|\)$/g,u=e.match(t);if(!u)return;let i={};if(i.for=u[3].trim(),!i.for)return;let a=u[1].trim().replace(r,""),s=a.match(n);s?(i.alias=a.replace(n,""),i.iterator1=s[1].trim(),s[2]&&(i.iterator2=s[2].trim())):i.alias=a;let o=[i.alias,i.iterator1,i.iterator2];return o.some(((e,t)=>!e&&(0===t||o.slice(t+1).some(Boolean))))?void 0:{left:o.filter(Boolean).join(","),operator:u[2],right:i.for}}(e);return[n(t(`function _(${r}) {}`,{parser:"babel",__isVueForBindingLeft:!0}))," ",u," ",t(i,{parser:"__js_expression"},{stripTrailingHardline:!0})]},printVueBindings:function(e,t){return t(`function _(${e}) {}`,{parser:"babel",__isVueBindings:!0})}}}}),Ru=E({"src/language-html/get-node-content.js"(e,t){v();var{needsToBorrowParentClosingTagStartMarker:n,printClosingTagStartMarker:r,needsToBorrowLastChildClosingTagEndMarker:u,printClosingTagEndMarker:i,needsToBorrowParentOpeningTagEndMarker:a,printOpeningTagEndMarker:s}=Lu();t.exports=function(e,t){let o=e.startSourceSpan.end.offset;e.firstChild&&a(e.firstChild)&&(o-=s(e).length);let l=e.endSourceSpan.start.offset;return e.lastChild&&n(e.lastChild)?l+=r(e,t).length:u(e)&&(l-=i(e.lastChild,t).length),t.originalText.slice(o,l)}}}),Vu=E({"src/language-html/embed.js"(e,t){v();var{builders:{breakParent:n,group:r,hardline:u,indent:i,line:a,fill:s,softline:o},utils:{mapDoc:l,replaceTextEndOfLine:p}}=U(),c=kr(),{printClosingTag:d,printClosingTagSuffix:D,needsToBorrowPrevClosingTagEndMarker:f,printOpeningTagPrefix:m,printOpeningTag:g}=Lu(),{printImgSrcset:y,printClassNames:h}=Mu(),{printVueFor:E,printVueBindings:C,isVueEventBindingExpression:A}=$u(),{isScriptLikeTag:F,isVueNonHtmlBlock:x,inferScriptParser:b,htmlTrimPreserveIndentation:S,dedentString:T,unescapeQuoteEntities:B,isVueSlotAttribute:w,isVueSfcBindingsAttribute:N,getTextValueParts:k}=Tu(),j=Ru();function P(e,t,n){let u=t=>new RegExp(t.join("|")).test(e.fullName),l=()=>B(e.value),c=!1,d=(e,t)=>{let n="NGRoot"===e.type?"NGMicrosyntax"===e.node.type&&1===e.node.body.length&&"NGMicrosyntaxExpression"===e.node.body[0].type?e.node.body[0].expression:e.node:"JsExpressionRoot"===e.type?e.node:e;n&&("ObjectExpression"===n.type||"ArrayExpression"===n.type||"__vue_expression"===t.parser&&("TemplateLiteral"===n.type||"StringLiteral"===n.type))&&(c=!0)},D=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return r([i([o,e]),t?o:""])},f=e=>c?(e=>r(e))(e):D(e),m=(e,n)=>t(e,Object.assign({__onHtmlBindingRoot:d,__embeddedInHtml:!0},n));if("srcset"===e.fullName&&("img"===e.parent.fullName||"source"===e.parent.fullName))return D(y(l()));if("class"===e.fullName&&!n.parentParser){let e=l();if(!e.includes("{{"))return h(e)}if("style"===e.fullName&&!n.parentParser){let e=l();if(!e.includes("{{"))return D(m(e,{parser:"css",__isHTMLStyleAttribute:!0}))}if("vue"===n.parser){if("v-for"===e.fullName)return E(l(),m);if(w(e)||N(e,n))return C(l(),m);let t=["^:","^v-bind:"],r=["^v-"];if(u(["^@","^v-on:"])){let e=l(),t=A(e)?"__js_expression":n.__should_parse_vue_template_with_ts?"__vue_ts_event_binding":"__vue_event_binding";return f(m(e,{parser:t}))}if(u(t))return f(m(l(),{parser:"__vue_expression"}));if(u(r))return f(m(l(),{parser:"__js_expression"}))}if("angular"===n.parser){let t=(e,t)=>m(e,Object.assign(Object.assign({},t),{},{trailingComma:"none"})),n=["^\\*"],o=["^\\[.+\\]$","^bind(on)?-","^ng-(if|show|hide|class|style)$"],c=["^i18n(-.+)?$"];if(u(["^\\(.+\\)$","^on-"]))return f(t(l(),{parser:"__ng_action"}));if(u(o))return f(t(l(),{parser:"__ng_binding"}));if(u(c)){let t=l().trim();return D(s(k(e,t)),!t.includes("@@"))}if(u(n))return f(t(l(),{parser:"__ng_directive"}));let d=/{{(.+?)}}/s,g=l();if(d.test(g)){let e=[];for(let[n,u]of g.split(d).entries())if(n%2==0)e.push(p(u));else try{e.push(r(["{{",i([a,t(u,{parser:"__ng_interpolation",__isInHtmlInterpolation:!0})]),a,"}}"]))}catch{e.push("{{",p(u),"}}")}return r(e)}}return null}t.exports=function(e,t,s,o){let p=e.getValue();switch(p.type){case"element":if(F(p)||"interpolation"===p.type)return;if(!p.isSelfClosing&&x(p,o)){let n=b(p,o);if(!n)return;let i=j(p,o),a=/^\s*$/.test(i),l="";return a||(l=s(S(i),{parser:n,__embeddedInHtml:!0},{stripTrailingHardline:!0}),a=""===l),[m(p,o),r(g(e,o,t)),a?"":u,l,a?"":u,d(p,o),D(p,o)]}break;case"text":if(F(p.parent)){let e=b(p.parent,o);if(e){let t="markdown"===e?T(p.value.replace(/^[^\S\n]*\n/,"")):p.value,r={parser:e,__embeddedInHtml:!0};if("html"===o.parser&&"babel"===e){let e="script",{attrMap:t}=p.parent;t&&("module"===t.type||"text/babel"===t.type&&"module"===t["data-type"])&&(e="module"),r.__babelSourceType=e}return[n,m(p,o),s(t,r,{stripTrailingHardline:!0}),D(p,o)]}}else if("interpolation"===p.parent.type){let e={__isInHtmlInterpolation:!0,__embeddedInHtml:!0};return"angular"===o.parser?(e.parser="__ng_interpolation",e.trailingComma="none"):"vue"===o.parser?e.parser=o.__should_parse_vue_template_with_ts?"__vue_ts_expression":"__vue_expression":e.parser="__js_expression",[i([a,s(p.value,e,{stripTrailingHardline:!0})]),p.parent.next&&f(p.parent.next)?" ":a]}break;case"attribute":{if(!p.value)break;if(/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(o.originalText.slice(p.valueSpan.start.offset,p.valueSpan.end.offset)))return[p.rawName,"=",p.value];if("lwc"===o.parser&&/^{.*}$/s.test(o.originalText.slice(p.valueSpan.start.offset,p.valueSpan.end.offset)))return[p.rawName,"=",p.value];let e=P(p,((e,t)=>s(e,Object.assign({__isInHtmlAttribute:!0,__embeddedInHtml:!0},t),{stripTrailingHardline:!0})),o);if(e)return[p.rawName,'="',r(l(e,(e=>"string"==typeof e?e.replace(/"/g,"&quot;"):e))),'"'];break}case"front-matter":return c(p,s)}}}}),Wu=E({"src/language-html/print/children.js"(e,t){v();var{builders:{breakParent:n,group:r,ifBreak:u,line:i,softline:a,hardline:s},utils:{replaceTextEndOfLine:o}}=U(),{locStart:l,locEnd:p}=Ou(),{forceBreakChildren:c,forceNextEmptyLine:d,isTextLikeNode:D,hasPrettierIgnore:f,preferHardlineAsLeadingSpaces:m}=Tu(),{printOpeningTagPrefix:g,needsToBorrowNextOpeningTagStartMarker:y,printOpeningTagStartMarker:h,needsToBorrowPrevClosingTagEndMarker:E,printClosingTagEndMarker:C,printClosingTagSuffix:A,needsToBorrowParentClosingTagStartMarker:F}=Lu();function x(e,t,n){let r=e.getValue();return f(r)?[g(r,t),...o(t.originalText.slice(l(r)+(r.prev&&y(r.prev)?h(r).length:0),p(r)-(r.next&&E(r.next)?C(r,t).length:0))),A(r,t)]:n()}function b(e,t){return D(e)&&D(t)?e.isTrailingSpaceSensitive?e.hasTrailingSpaces?m(t)?s:i:"":m(t)?s:a:y(e)&&(f(t)||t.firstChild||t.isSelfClosing||"element"===t.type&&t.attrs.length>0)||"element"===e.type&&e.isSelfClosing&&E(t)?"":!t.isLeadingSpaceSensitive||m(t)||E(t)&&e.lastChild&&F(e.lastChild)&&e.lastChild.lastChild&&F(e.lastChild.lastChild)?s:t.hasLeadingSpaces?i:a}t.exports={printChildren:function(e,t,i){let o=e.getValue();if(c(o))return[n,...e.map((e=>{let n=e.getValue(),r=n.prev?b(n.prev,n):"";return[r?[r,d(n.prev)?s:""]:"",x(e,t,i)]}),"children")];let l=o.children.map((()=>Symbol("")));return e.map(((e,n)=>{let o=e.getValue();if(D(o)){if(o.prev&&D(o.prev)){let n=b(o.prev,o);if(n)return d(o.prev)?[s,s,x(e,t,i)]:[n,x(e,t,i)]}return x(e,t,i)}let p=[],c=[],f=[],m=[],g=o.prev?b(o.prev,o):"",y=o.next?b(o,o.next):"";return g&&(d(o.prev)?p.push(s,s):g===s?p.push(s):D(o.prev)?c.push(g):c.push(u("",a,{groupId:l[n-1]}))),y&&(d(o)?D(o.next)&&m.push(s,s):y===s?D(o.next)&&m.push(s):f.push(y)),[...p,r([...c,r([x(e,t,i),...f],{id:l[n]})]),...m]}),"children")}}}}),qu=E({"src/language-html/print/element.js"(e,t){v();var{builders:{breakParent:n,dedentToRoot:r,group:u,ifBreak:i,indentIfBreak:a,indent:s,line:o,softline:l},utils:{replaceTextEndOfLine:p}}=U(),c=Ru(),{shouldPreserveContent:d,isScriptLikeTag:D,isVueCustomBlock:f,countParents:m,forceBreakContent:g}=Tu(),{printOpeningTagPrefix:y,printOpeningTag:h,printClosingTagSuffix:E,printClosingTag:C,needsToBorrowPrevClosingTagEndMarker:A,needsToBorrowLastChildClosingTagEndMarker:F}=Lu(),{printChildren:x}=Wu();t.exports={printElement:function(e,t,v){let b=e.getValue();if(d(b,t))return[y(b,t),u(h(e,t,v)),...p(c(b,t)),...C(b,t),E(b,t)];let S=1===b.children.length&&"interpolation"===b.firstChild.type&&b.firstChild.isLeadingSpaceSensitive&&!b.firstChild.hasLeadingSpaces&&b.lastChild.isTrailingSpaceSensitive&&!b.lastChild.hasTrailingSpaces,T=Symbol("element-attr-group-id"),B=n=>u([u(h(e,t,v),{id:T}),n,C(b,t)]);return 0===b.children.length?B(b.hasDanglingSpaces&&b.isDanglingSpaceSensitive?o:""):B([g(b)?n:"",(w=[S?i(l,"",{groupId:T}):b.firstChild.hasLeadingSpaces&&b.firstChild.isLeadingSpaceSensitive?o:"text"===b.firstChild.type&&b.isWhitespaceSensitive&&b.isIndentationSensitive?r(l):l,x(e,t,v)],S?a(w,{groupId:T}):!D(b)&&!f(b,t)||"root"!==b.parent.type||"vue"!==t.parser||t.vueIndentScriptAndStyle?s(w):w),(b.next?A(b.next):F(b.parent))?b.lastChild.hasTrailingSpaces&&b.lastChild.isTrailingSpaceSensitive?" ":"":S?i(l,"",{groupId:T}):b.lastChild.hasTrailingSpaces&&b.lastChild.isTrailingSpaceSensitive?o:("comment"===b.lastChild.type||"text"===b.lastChild.type&&b.isWhitespaceSensitive&&b.isIndentationSensitive)&&new RegExp(`\\n[\\t ]{${t.tabWidth*m(e,(e=>e.parent&&"root"!==e.parent.type))}}$`).test(b.lastChild.value)?"":l]);var w}}}}),Uu=E({"src/language-html/printer-html.js"(e,t){v();var{builders:{fill:n,group:r,hardline:u,literalline:i},utils:{cleanDoc:a,getDocParts:s,isConcat:o,replaceTextEndOfLine:l}}=U(),p=xu(),{countChars:c,unescapeQuoteEntities:d,getTextValueParts:D}=Tu(),f=Pu(),{insertPragma:m}=Iu(),{locStart:g,locEnd:y}=Ou(),h=Vu(),{printClosingTagSuffix:E,printClosingTagEnd:C,printOpeningTagPrefix:A,printOpeningTagStart:F}=Lu(),{printElement:x}=qu(),{printChildren:b}=Wu();t.exports={preprocess:f,print:function(e,t,p){let f=e.getValue();switch(f.type){case"front-matter":return l(f.raw);case"root":return t.__onHtmlRoot&&t.__onHtmlRoot(f),[r(b(e,t,p)),u];case"element":case"ieConditionalComment":return x(e,t,p);case"ieConditionalStartComment":case"ieConditionalEndComment":return[F(f),C(f)];case"interpolation":return[F(f,t),...e.map(p,"children"),C(f,t)];case"text":{if("interpolation"===f.parent.type){let e=/\n[^\S\n]*$/,t=e.test(f.value),n=t?f.value.replace(e,""):f.value;return[...l(n),t?u:""]}let e=a([A(f,t),...D(f),E(f,t)]);return o(e)||"fill"===e.type?n(s(e)):e}case"docType":return[r([F(f,t)," ",f.value.replace(/^html\b/i,"html").replace(/\s+/g," ")]),C(f,t)];case"comment":return[A(f,t),...l(t.originalText.slice(g(f),y(f)),i),E(f,t)];case"attribute":{if(null===f.value)return f.rawName;let e=d(f.value),t=c(e,"'")<c(e,'"')?"'":'"';return[f.rawName,"=",t,...l('"'===t?e.replace(/"/g,"&quot;"):e.replace(/'/g,"&apos;")),t]}default:throw new Error(`Unexpected node type ${f.type}`)}},insertPragma:m,massageAstNode:p,embed:h}}}),Ju=E({"src/language-html/options.js"(e,t){v();var n=Cr(),r="HTML";t.exports={bracketSameLine:n.bracketSameLine,htmlWhitespaceSensitivity:{since:"1.15.0",category:r,type:"choice",default:"css",description:"How to handle whitespaces in HTML.",choices:[{value:"css",description:"Respect the default value of CSS display property."},{value:"strict",description:"Whitespaces are considered sensitive."},{value:"ignore",description:"Whitespaces are considered insensitive."}]},singleAttributePerLine:n.singleAttributePerLine,vueIndentScriptAndStyle:{since:"1.19.0",category:r,type:"boolean",default:!1,description:"Indent script and style tags in Vue files."}}}}),Hu=E({"src/language-html/parsers.js"(){v()}}),Gu=E({"node_modules/linguist-languages/data/HTML.json"(e,t){t.exports={name:"HTML",type:"markup",tmScope:"text.html.basic",aceMode:"html",codemirrorMode:"htmlmixed",codemirrorMimeType:"text/html",color:"#e34c26",aliases:["xhtml"],extensions:[".html",".hta",".htm",".html.hl",".inc",".xht",".xhtml"],languageId:146}}}),zu=E({"node_modules/linguist-languages/data/Vue.json"(e,t){t.exports={name:"Vue",type:"markup",color:"#41b883",extensions:[".vue"],tmScope:"text.html.vue",aceMode:"html",languageId:391}}}),Xu=E({"src/language-html/index.js"(e,t){v();var n=Qt(),r=Uu(),u=Ju(),i=Hu(),a=[n(Gu(),(()=>({name:"Angular",since:"1.15.0",parsers:["angular"],vscodeLanguageIds:["html"],extensions:[".component.html"],filenames:[]}))),n(Gu(),(e=>({since:"1.15.0",parsers:["html"],vscodeLanguageIds:["html"],extensions:[...e.extensions,".mjml"]}))),n(Gu(),(()=>({name:"Lightning Web Components",since:"1.17.0",parsers:["lwc"],vscodeLanguageIds:["html"],extensions:[],filenames:[]}))),n(zu(),(()=>({since:"1.10.0",parsers:["vue"],vscodeLanguageIds:["vue"]})))],s={html:r};t.exports={languages:a,printers:s,options:u,parsers:i}}}),Ku=E({"src/language-yaml/pragma.js"(e,t){v(),t.exports={isPragma:function(e){return/^\s*@(?:prettier|format)\s*$/.test(e)},hasPragma:function(e){return/^\s*#[^\S\n]*@(?:prettier|format)\s*?(?:\n|$)/.test(e)},insertPragma:function(e){return`# @format\n\n${e}`}}}}),Yu=E({"src/language-yaml/loc.js"(e,t){v(),t.exports={locStart:function(e){return e.position.start.offset},locEnd:function(e){return e.position.end.offset}}}}),Qu=E({"src/language-yaml/embed.js"(e,t){v(),t.exports=function(e,t,n,r){if("root"===e.getValue().type&&r.filepath&&/(?:[/\\]|^)\.(?:prettier|stylelint|lintstaged)rc$/.test(r.filepath))return n(r.originalText,Object.assign(Object.assign({},r),{},{parser:"json"}))}}}),Zu=E({"src/language-yaml/utils.js"(e,t){v();var{getLast:n,isNonEmptyArray:r}=De();function u(e,t){return e&&"string"==typeof e.type&&(!t||t.includes(e.type))}function i(e){return"prettier-ignore"===e.value.trim()}function a(e){return r(null==e?void 0:e.leadingComments)}function s(e){return r(null==e?void 0:e.middleComments)}function o(e){return null==e?void 0:e.indicatorComment}function l(e){return null==e?void 0:e.trailingComment}function p(e){return r(null==e?void 0:e.endComments)}function c(e){let t,n=[];for(let r of e.split(/( +)/))" "!==r?" "===t?n.push(r):n.push((n.pop()||"")+r):void 0===t&&n.unshift(""),t=r;return" "===t&&n.push((n.pop()||"")+" "),""===n[0]&&(n.shift(),n.unshift(" "+(n.shift()||""))),n}t.exports={getLast:n,getAncestorCount:function(e,t){let n=0,r=e.stack.length-1;for(let i=0;i<r;i++){let r=e.stack[i];u(r)&&t(r)&&n++}return n},isNode:u,isEmptyNode:function(e){return!r(e.children)&&!function(e){return a(e)||s(e)||o(e)||l(e)||p(e)}(e)},isInlineNode:function(e){if(!e)return!0;switch(e.type){case"plain":case"quoteDouble":case"quoteSingle":case"alias":case"flowMapping":case"flowSequence":return!0;default:return!1}},mapNode:function e(t,n,r){return n("children"in t?Object.assign(Object.assign({},t),{},{children:t.children.map((r=>e(r,n,t)))}):t,r)},defineShortcut:function(e,t,n){Object.defineProperty(e,t,{get:n,enumerable:!1})},isNextLineEmpty:function(e,t){let n=0,r=t.length;for(let u=e.position.end.offset-1;u<r;u++){let e=t[u];if("\n"===e&&n++,1===n&&/\S/.test(e))return!1;if(2===n)return!0}return!1},isLastDescendantNode:function(e){switch(e.getValue().type){case"tag":case"anchor":case"comment":return!1}let t=e.stack.length;for(let n=1;n<t;n++){let t=e.stack[n],r=e.stack[n-1];if(Array.isArray(r)&&"number"==typeof t&&t!==r.length-1)return!1}return!0},getBlockValueLineContents:function(e,t){let r,{parentIndent:u,isLastDescendant:i,options:a}=t,s=e.position.start.line===e.position.end.line?"":a.originalText.slice(e.position.start.offset,e.position.end.offset).match(/^[^\n]*\n(.*)$/s)[1];if(null===e.indent){let e=s.match(/^(?<leadingSpace> *)[^\n\r ]/m);r=e?e.groups.leadingSpace.length:Number.POSITIVE_INFINITY}else r=e.indent-1+u;let o=s.split("\n").map((e=>e.slice(r)));return"preserve"===a.proseWrap||"blockLiteral"===e.type?l(o.map((e=>0===e.length?[]:[e]))):l(o.map((e=>0===e.length?[]:c(e))).reduce(((e,t,r)=>0!==r&&o[r-1].length>0&&t.length>0&&!/^\s/.test(t[0])&&!/^\s|\s$/.test(n(e))?[...e.slice(0,-1),[...n(e),...t]]:[...e,t]),[]).map((e=>e.reduce(((e,t)=>e.length>0&&/\s$/.test(n(e))?[...e.slice(0,-1),n(e)+" "+t]:[...e,t]),[]))).map((e=>"never"===a.proseWrap?[e.join(" ")]:e)));function l(t){if("keep"===e.chomping)return 0===n(t).length?t.slice(0,-1):t;let r=0;for(let e=t.length-1;e>=0&&0===t[e].length;e--)r++;return 0===r?t:r>=2&&!i?t.slice(0,-(r-1)):t.slice(0,-r)}},getFlowScalarLineContents:function(e,t,r){let u=t.split("\n").map(((e,t,n)=>0===t&&t===n.length-1?e:0!==t&&t!==n.length-1?e.trim():0===t?e.trimEnd():e.trimStart()));return"preserve"===r.proseWrap?u.map((e=>0===e.length?[]:[e])):u.map((e=>0===e.length?[]:c(e))).reduce(((t,r,i)=>0!==i&&u[i-1].length>0&&r.length>0&&("quoteDouble"!==e||!n(n(t)).endsWith("\\"))?[...t.slice(0,-1),[...n(t),...r]]:[...t,r]),[]).map((e=>"never"===r.proseWrap?[e.join(" ")]:e))},getLastDescendantNode:function e(t){return r(t.children)?e(n(t.children)):t},hasPrettierIgnore:function(e){let t=e.getValue();if("documentBody"===t.type){let t=e.getParentNode();return p(t.head)&&i(n(t.head.endComments))}return a(t)&&i(n(t.leadingComments))},hasLeadingComments:a,hasMiddleComments:s,hasIndicatorComment:o,hasTrailingComment:l,hasEndComments:p}}}),ei=E({"src/language-yaml/print-preprocess.js"(e,t){v();var{defineShortcut:n,mapNode:r}=Zu();function u(e){switch(e.type){case"document":n(e,"head",(()=>e.children[0])),n(e,"body",(()=>e.children[1]));break;case"documentBody":case"sequenceItem":case"flowSequenceItem":case"mappingKey":case"mappingValue":n(e,"content",(()=>e.children[0]));break;case"mappingItem":case"flowMappingItem":n(e,"key",(()=>e.children[0])),n(e,"value",(()=>e.children[1]))}return e}t.exports=function(e){return r(e,u)}}}),ti=E({"src/language-yaml/print/misc.js"(e,t){v();var{builders:{softline:n,align:r}}=U(),{hasEndComments:u,isNextLineEmpty:i,isNode:a}=Zu(),s=new WeakMap;function o(e){return u(e)&&!a(e,["documentHead","documentBody","flowMapping","flowSequence"])}t.exports={alignWithSpaces:function(e,t){return r(" ".repeat(e),t)},shouldPrintEndComments:o,printNextEmptyLine:function(e,t){let r,u=e.getValue(),a=e.stack[0];return s.has(a)?r=s.get(a):(r=new Set,s.set(a,r)),r.has(u.position.end.line)||(r.add(u.position.end.line),!i(u,t)||o(e.getParentNode()))?"":n}}}}),ni=E({"src/language-yaml/print/flow-mapping-sequence.js"(e,t){v();var{builders:{ifBreak:n,line:r,softline:u,hardline:i,join:a}}=U(),{isEmptyNode:s,getLast:o,hasEndComments:l}=Zu(),{printNextEmptyLine:p,alignWithSpaces:c}=ti();function d(e,t,p){let d=e.getValue(),f="flowMapping"===d.type,m=f?"{":"[",g=f?"}":"]",y=u;f&&d.children.length>0&&p.bracketSpacing&&(y=r);let h=o(d.children),E=h&&"flowMappingItem"===h.type&&s(h.key)&&s(h.value);return[m,c(p.tabWidth,[y,D(e,t,p),"none"===p.trailingComma?"":n(","),l(d)?[i,a(i,e.map(t,"endComments"))]:""]),E?"":y,g]}function D(e,t,n){let u=e.getValue();return e.map(((e,i)=>[t(),i===u.children.length-1?"":[",",r,u.children[i].position.start.line!==u.children[i+1].position.start.line?p(e,n.originalText):""]]),"children")}t.exports={printFlowMapping:d,printFlowSequence:d}}}),ri=E({"src/language-yaml/print/mapping-item.js"(e,t){v();var{builders:{conditionalGroup:n,group:r,hardline:u,ifBreak:i,join:a,line:s}}=U(),{hasLeadingComments:o,hasMiddleComments:l,hasTrailingComment:p,hasEndComments:c,isNode:d,isEmptyNode:D,isInlineNode:f}=Zu(),{alignWithSpaces:m}=ti();function g(e,t){if(!e)return!0;switch(e.type){case"plain":case"quoteSingle":case"quoteDouble":break;case"alias":return!0;default:return!1}if("preserve"===t.proseWrap)return e.position.start.line===e.position.end.line;if(/\\$/m.test(t.originalText.slice(e.position.start.offset,e.position.end.offset)))return!1;switch(t.proseWrap){case"never":return!e.value.includes("\n");case"always":return!/[\n ]/.test(e.value);default:return!1}}t.exports=function(e,t,y,h,E){let{key:C,value:A}=e,F=D(C),v=D(A);if(F&&v)return": ";let x=h("key"),b=function(e){return e.key.content&&"alias"===e.key.content.type}(e)?" ":"";if(v)return"flowMappingItem"===e.type&&"flowMapping"===t.type?x:"mappingItem"!==e.type||!g(C.content,E)||p(C.content)||t.tag&&"tag:yaml.org,2002:set"===t.tag.value?["? ",m(2,x)]:[x,b,":"];let S=h("value");if(F)return[": ",m(2,S)];if(o(A)||!f(C.content))return["? ",m(2,x),u,a("",y.map(h,"value","leadingComments").map((e=>[e,u]))),": ",m(2,S)];if(function(e){if(!e)return!0;switch(e.type){case"plain":case"quoteDouble":case"quoteSingle":return e.position.start.line===e.position.end.line;case"alias":return!0;default:return!1}}(C.content)&&!o(C.content)&&!l(C.content)&&!p(C.content)&&!c(C)&&!o(A.content)&&!l(A.content)&&!c(A)&&g(A.content,E))return[x,b,": ",S];let T=Symbol("mappingKey"),B=r([i("? "),r(m(2,x),{id:T})]),w=[u,": ",m(2,S)],N=[b,":"];o(A.content)||c(A)&&A.content&&!d(A.content,["mapping","sequence"])||"mapping"===t.type&&p(C.content)&&f(A.content)||d(A.content,["mapping","sequence"])&&null===A.content.tag&&null===A.content.anchor?N.push(u):A.content&&N.push(s),N.push(S);let k=m(E.tabWidth,N);return!g(C.content,E)||o(C.content)||l(C.content)||c(C)?n([[B,i(w,k,{groupId:T})]]):n([[x,k]])}}}),ui=E({"src/language-yaml/print/block.js"(e,t){v();var{builders:{dedent:n,dedentToRoot:r,fill:u,hardline:i,join:a,line:s,literalline:o,markAsRoot:l},utils:{getDocParts:p}}=U(),{getAncestorCount:c,getBlockValueLineContents:d,hasIndicatorComment:D,isLastDescendantNode:f,isNode:m}=Zu(),{alignWithSpaces:g}=ti();t.exports=function(e,t,y){let h=e.getValue(),E=c(e,(e=>m(e,["sequence","mapping"]))),C=f(e),A=["blockFolded"===h.type?">":"|"];null!==h.indent&&A.push(h.indent.toString()),"clip"!==h.chomping&&A.push("keep"===h.chomping?"+":"-"),D(h)&&A.push(" ",t("indicatorComment"));let F=d(h,{parentIndent:E,isLastDescendant:C,options:y}),v=[];for(let[e,t]of F.entries())0===e&&v.push(i),v.push(u(p(a(s,t)))),e!==F.length-1?v.push(0===t.length?i:l(o)):"keep"===h.chomping&&C&&v.push(r(0===t.length?i:o));return null===h.indent?A.push(n(g(y.tabWidth,v))):A.push(r(g(h.indent-1+E,v))),A}}}),ii=E({"src/language-yaml/printer-yaml.js"(e,t){v();var{builders:{breakParent:n,fill:r,group:u,hardline:i,join:a,line:s,lineSuffix:o,literalline:l},utils:{getDocParts:p,replaceTextEndOfLine:c}}=U(),{isPreviousLineEmpty:d}=De(),{insertPragma:D,isPragma:f}=Ku(),{locStart:m}=Yu(),g=Qu(),{getFlowScalarLineContents:y,getLastDescendantNode:h,hasLeadingComments:E,hasMiddleComments:C,hasTrailingComment:A,hasEndComments:F,hasPrettierIgnore:x,isLastDescendantNode:b,isNode:S,isInlineNode:T}=Zu(),B=ei(),{alignWithSpaces:w,printNextEmptyLine:N,shouldPrintEndComments:k}=ti(),{printFlowMapping:j,printFlowSequence:P}=ni(),I=ri(),O=ui();function L(e,t){return A(e)||t&&(t.head.children.length>0||F(t.head))}function _(e,t,n){let u=y(e,t,n);return a(i,u.map((e=>r(p(a(s,e))))))}t.exports={preprocess:B,embed:g,print:function(e,t,r){let s=e.getValue(),p=[];"mappingValue"!==s.type&&E(s)&&p.push([a(i,e.map(r,"leadingComments")),i]);let{tag:D,anchor:f}=s;D&&p.push(r("tag")),D&&f&&p.push(" "),f&&p.push(r("anchor"));let g="";S(s,["mapping","sequence","comment","directive","mappingItem","sequenceItem"])&&!b(e)&&(g=N(e,t.originalText)),(D||f)&&(S(s,["sequence","mapping"])&&!C(s)?p.push(i):p.push(" ")),C(s)&&p.push([1===s.middleComments.length?"":i,a(i,e.map(r,"middleComments")),i]);let y=e.getParentNode();return x(e)?p.push(c(t.originalText.slice(s.position.start.offset,s.position.end.offset).trimEnd(),l)):p.push(u(function(e,t,n,r,u){switch(e.type){case"root":{let{children:t}=e,r=[];n.each(((e,n)=>{let a=t[n],s=t[n+1];0!==n&&r.push(i),r.push(u()),L(a,s)?(r.push(i,"..."),A(a)&&r.push(" ",u("trailingComment"))):s&&!A(s.head)&&r.push(i,"---")}),"children");let a=h(e);return(!S(a,["blockLiteral","blockFolded"])||"keep"!==a.chomping)&&r.push(i),r}case"document":{let s=[];return"head"===function(e,t,n,r){return n.children[0]===e&&/---(?:\s|$)/.test(r.originalText.slice(m(e),m(e)+4))||e.head.children.length>0||F(e.head)||A(e.head)?"head":!L(e,t)&&!!t&&"root"}(e,t.children[n.getName()+1],t,r)&&((e.head.children.length>0||e.head.endComments.length>0)&&s.push(u("head")),A(e.head)?s.push(["---"," ",u(["head","trailingComment"])]):s.push("---")),function(e){return e.body.children.length>0||F(e.body)}(e)&&s.push(u("body")),a(i,s)}case"documentHead":return a(i,[...n.map(u,"children"),...n.map(u,"endComments")]);case"documentBody":{let{children:t,endComments:r}=e,s="";if(t.length>0&&r.length>0){let t=h(e);S(t,["blockFolded","blockLiteral"])?"keep"!==t.chomping&&(s=[i,i]):s=i}return[a(i,n.map(u,"children")),s,a(i,n.map(u,"endComments"))]}case"directive":return["%",a(" ",[e.name,...e.parameters])];case"comment":return["#",e.value];case"alias":return["*",e.value];case"tag":return r.originalText.slice(e.position.start.offset,e.position.end.offset);case"anchor":return["&",e.value];case"plain":return _(e.type,r.originalText.slice(e.position.start.offset,e.position.end.offset),r);case"quoteDouble":case"quoteSingle":{let t="'",n='"',u=r.originalText.slice(e.position.start.offset+1,e.position.end.offset-1);if("quoteSingle"===e.type&&u.includes("\\")||"quoteDouble"===e.type&&/\\[^"]/.test(u)){let i="quoteDouble"===e.type?n:t;return[i,_(e.type,u,r),i]}if(u.includes(n))return[t,_(e.type,"quoteDouble"===e.type?u.replace(/\\"/g,n).replace(/'/g,t.repeat(2)):u,r),t];if(u.includes(t))return[n,_(e.type,"quoteSingle"===e.type?u.replace(/''/g,t):u,r),n];let i=r.singleQuote?t:n;return[i,_(e.type,u,r),i]}case"blockFolded":case"blockLiteral":return O(n,u,r);case"mapping":case"sequence":return a(i,n.map(u,"children"));case"sequenceItem":return["- ",w(2,e.content?u("content"):"")];case"mappingKey":case"mappingValue":return e.content?u("content"):"";case"mappingItem":case"flowMappingItem":return I(e,t,n,u,r);case"flowMapping":return j(n,u,r);case"flowSequence":return P(n,u,r);case"flowSequenceItem":return u("content");default:throw new Error(`Unexpected node type ${e.type}`)}}(s,y,e,t,r))),A(s)&&!S(s,["document","documentHead"])&&p.push(o(["mappingValue"!==s.type||s.content?" ":"","mappingKey"===y.type&&"mapping"===e.getParentNode(2).type&&T(s)?"":n,r("trailingComment")])),k(s)&&p.push(w("sequenceItem"===s.type?2:0,[i,a(i,e.map((e=>[d(t.originalText,e.getValue(),m)?i:"",r()]),"endComments"))])),p.push(g),p},massageAstNode:function(e,t){if(S(t))switch(delete t.position,t.type){case"comment":if(f(t.value))return null;break;case"quoteDouble":case"quoteSingle":t.type="quote"}},insertPragma:D}}}),ai=E({"src/language-yaml/options.js"(e,t){v();var n=Cr();t.exports={bracketSpacing:n.bracketSpacing,singleQuote:n.singleQuote,proseWrap:n.proseWrap}}}),si=E({"src/language-yaml/parsers.js"(){v()}}),oi=E({"node_modules/linguist-languages/data/YAML.json"(e,t){t.exports={name:"YAML",type:"data",color:"#cb171e",tmScope:"source.yaml",aliases:["yml"],extensions:[".yml",".mir",".reek",".rviz",".sublime-syntax",".syntax",".yaml",".yaml-tmlanguage",".yaml.sed",".yml.mysql"],filenames:[".clang-format",".clang-tidy",".gemrc","CITATION.cff","glide.lock","yarn.lock"],aceMode:"yaml",codemirrorMode:"yaml",codemirrorMimeType:"text/x-yaml",languageId:407}}}),li=E({"src/language-yaml/index.js"(e,t){v();var n=Qt(),r=ii(),u=ai(),i=si(),a=[n(oi(),(e=>({since:"1.14.0",parsers:["yaml"],vscodeLanguageIds:["yaml","ansible","home-assistant"],filenames:[...e.filenames.filter((e=>"yarn.lock"!==e)),".prettierrc",".stylelintrc",".lintstagedrc"]})))];t.exports={languages:a,printers:{yaml:r},options:u,parsers:i}}}),pi=E({"src/languages.js"(e,t){v(),t.exports=[wr(),Xr(),ru(),pu(),vu(),Xu(),li()]}});v();var{version:ci}=x(),di=Kt(),{getSupportInfo:Di}=ae(),fi=Yt(),mi=pi(),gi=U();function yi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return function(){for(var n=arguments.length,r=new Array(n),u=0;u<n;u++)r[u]=arguments[u];let i=r[t]||{},a=i.plugins||[];return r[t]=Object.assign(Object.assign({},i),{},{plugins:[...mi,...Array.isArray(a)?a:Object.values(a)]}),e(...r)}}var hi=yi(di.formatWithCursor);a.exports={formatWithCursor:hi,format:(e,t)=>hi(e,t).formatted,check(e,t){let{formatted:n}=hi(e,t);return n===e},doc:gi,getSupportInfo:yi(Di,0),version:ci,util:fi,__debug:{parse:yi(di.parse),formatAST:yi(di.formatAST),formatDoc:yi(di.formatDoc),printToDoc:yi(di.printToDoc),printDocToString:yi(di.printDocToString)}}}));return Ue()}()},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},a=[],s=0;s<e.length;s++){var o=e[s],l=r.base?o[0]+r.base:o[0],p=i[l]||0,c="".concat(l," ").concat(p);i[l]=p+1;var d=n(c),D={css:o[1],media:o[2],sourceMap:o[3],supports:o[4],layer:o[5]};if(-1!==d)t[d].references++,t[d].updater(D);else{var f=u(D,r);r.byIndex=s,t.splice(s,0,{identifier:c,updater:f,references:1})}a.push(c)}return a}function u(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,u){var i=r(e=e||[],u=u||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=n(i[a]);t[s].references--}for(var o=r(e,u),l=0;l<i.length;l++){var p=n(i[l]);0===t[p].references&&(t[p].updater(),t.splice(p,1))}i=o}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var u=void 0!==n.layer;u&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,u&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},138:(e,t,n)=>{"use strict";(0,n(335).Z)(),console.log("Restaurant Page"),console.log("Go ahead!")},335:(e,t,n)=>{"use strict";n.d(t,{Z:()=>h});var r=n(379),u=n.n(r),i=n(795),a=n.n(i),s=n(569),o=n.n(s),l=n(565),p=n.n(l),c=n(216),d=n.n(c),D=n(589),f=n.n(D),m=n(426),g={};g.styleTagTransform=f(),g.setAttributes=p(),g.insert=o().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=d(),u()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;const y=n.p+"a82511daa0aea42082e5.svg";function h(){const e=document.querySelector("body"),t=document.createElement("div"),n=document.createElement("div"),r=document.createElement("div"),u=document.createElement("div"),i=document.createElement("div");t.classList.add("backgroundImg"),e.appendChild(t),r.classList.add("headContainer"),u.classList.add("logoContainer"),i.classList.add("navContainer");var a=document.createElement("object");a.setAttribute("type","image/svg+xml"),a.setAttribute("data",y),a.setAttribute("width","80rem"),a.setAttribute("height","80rem"),a.classList.add("logo"),u.appendChild(a);const s=document.createElement("div");s.innerHTML="Taiwan Cafe",s.classList.add("shopName"),u.appendChild(s),r.appendChild(u);const o=document.createElement("div");o.innerHTML="Home",o.classList.add("navLink"),i.appendChild(o);const l=document.createElement("div");l.innerHTML="Menu",l.classList.add("navLink"),i.appendChild(l);const p=document.createElement("div");p.innerHTML="Contact",p.classList.add("navLink"),i.appendChild(p),r.appendChild(i),n.appendChild(r),e.appendChild(n)}n(945)},456:(e,t,n)=>{"use strict";e.exports=n.p+"9854f28dcc0a0e3ae5ce.png"},611:(e,t,n)=>{"use strict";e.exports=n.p+"d026c9ffce2a67b7f503.woff"},488:(e,t,n)=>{"use strict";e.exports=n.p+"b3fa3371dbaa80f7a9b4.woff2"}},e=>{e(e.s=138)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,